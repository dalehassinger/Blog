<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>vCROCS</title>
        <link>https://www.vcrocs.info/</link>
        <description>Enterprise Automation, Monitoring and Logging. Plus more...</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</managingEditor>
            <webMaster>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Apr 2099 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://www.vcrocs.info/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Aria Operations | Aria Appliances Observability</title>
    <link>https://www.vcrocs.info/aria-appliances-observability/</link>
    <pubDate>Tue, 04 Jun 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-appliances-observability/</guid>
    <description><![CDATA[<p><strong>How to monitor VMware Aria Appliances within your environment</strong></p>
<hr>
<blockquote>
<p>&ldquo;I believe that if you show people the problems and you show them the solutions, they will be moved to act.” - Bill Gates</p>
</blockquote>
<hr>
<h6 id="aria-appliance-observability">Aria Appliance Observability</h6>
<p>In my previous blog, I discussed <strong>VMware vCenter</strong> appliance observability. <a href="https://www.vcrocs.info/vcenter-observability/" target="_blank" rel="noopener noreffer ">Click here to read the blog</a>. Building on those ideas, I now want to demonstrate how to monitor <strong>VMware Aria</strong> Appliances. Monitoring and observing VMware Aria Appliance VMs is crucial in a VMware environment where many such appliances are present.</p>
<p>For VMware Aria Appliances, I created a Custom Group within VMware Aria Operations. These appliances have a property named &ldquo;Summary|Configuration|Product Name&rdquo;. By using a filter that checks if the Product Name contains &ldquo;Aria&rdquo;, &ldquo;vRealize&rdquo;, or &ldquo;Log Insight&rdquo;, I was able to group all VMware Aria Appliance VMs together.</p>
<p>This filter is applicable to the following Aria Appliances:</p>
<ul>
<li>Aria Operations</li>
<li>Aria Operations for Logs</li>
<li>Aria Automation</li>
<li>Aria Suite LifeCycle</li>
<li>Aria Cloud Proxies</li>
<li>Aria Operations for Networks</li>
<li>Aria Management Pack Builder</li>
<li>vCenter Orchestrator</li>
</ul>
<hr>
<p>After creating the Custom Group to select only VMware Aria Appliance VMs, I proceeded to build a comprehensive VMware Aria Appliance Monitoring Dashboard. At the top, I included some donut charts (my favorite) to display key metrics such as VMware Aria Appliances Health, Workload, Snapshots, and Uptime in days.</p>
<p>I have a strong preference against VMs running on snapshots for extended periods, which is why I included a chart for Snapshots. Uptime is also a crucial metric, as it provides insight into a VMs maintenance status. When I see a VM running for hundreds of days, my first thought is that it hasn&rsquo;t been patched or upgraded in a while. To ensure the best reliability and access to the latest features, it&rsquo;s important to keep Aria Appliances patched and upgraded regularly.</p>
<hr>
<h6 id="steps-to-create-the-dashboard">Steps to Create the Dashboard</h6>
<ol>
<li>Create the (5) Views
<ul>
<li>Show all Aria Appliance VMs with details</li>
<li>Show VM Health</li>
<li>Show VM Workload</li>
<li>Show Snapshot Status</li>
<li>Show Uptime (Days)</li>
</ul>
</li>
<li>Create the Dashboard</li>
</ol>
<p>To simplify getting started, all the Views and the Dashboard are available in my GitHub repository for download. <a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/Aria-Appliances-Observability" target="_blank" rel="noopener noreffer ">Click Here to Download the files.</a></p>
<hr>
<h6 id="custom-group-filter-to-select-aria-appliance-vms">Custom Group Filter to Select Aria Appliance VMs</h6>
<p><strong>Filter Definition:</strong></p>
<figure><a class="lightgallery" href="/aria-appliances-observability/aria-appliances-02.png" title="/aria-appliances-observability/aria-appliances-02.png" data-thumbnail="/aria-appliances-observability/aria-appliances-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Screen Shot:</strong></p>
<figure><a class="lightgallery" href="/aria-appliances-observability/aria-appliances-01.png" title="/aria-appliances-observability/aria-appliances-01.png" data-thumbnail="/aria-appliances-observability/aria-appliances-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Usage:</strong></p>
<figure><a class="lightgallery" href="/aria-appliances-observability/aria-appliances-03.gif" title="/aria-appliances-observability/aria-appliances-03.gif" data-thumbnail="/aria-appliances-observability/aria-appliances-03.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/Aria-Appliances-Observability" target="_blank" rel="noopener noreffer ">Dale&rsquo;s Github Repository</a></li>
</ul>
<hr>
<h6 id="product-version-used-for-blog-post">Product Version used for Blog Post:</h6>
<ul>
<li>Aria Operations: 8.17.1</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>I can use the Virtual Machine property named &ldquo;Summary|Configuration|Product Name&rdquo; to group all VMware Aria Appliances together. The filter within the Custom Group is what enables this Dashboard to work.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Aria Operations | vCenter Observability</title>
    <link>https://www.vcrocs.info/vcenter-observability/</link>
    <pubDate>Fri, 31 May 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vcenter-observability/</guid>
    <description><![CDATA[<p><strong>How to monitor vCenter VM(s) within your environment</strong></p>
<hr>
<blockquote>
<p>&ldquo;It&rsquo;s really hard to design products by focus groups. A lot of times, people don&rsquo;t know what they want until you show it to them.” - Steve Jobs</p>
</blockquote>
<hr>
<h6 id="vcenter-observability">vCenter Observability</h6>
<p>I was recently asked how to monitor the VM that <strong>VMware vCenter</strong> runs on using <strong>VMware Aria Operations</strong>. The main request was to show the disk space used on the volumes to prevent them from filling up. In an environment with over 100 vCenters, I decided to create a view to show all the VMs running vCenter. While Aria Operations allows selecting all vCenters in a view, it does not natively show the VM name that vCenter runs on.</p>
<p>Creating a Custom Group in Aria Operations to specify the vCenter VMs manually seemed impractical. Initially, I considered using tags in vCenter and creating a Custom Group based on these tags. However, tagging over 100 vCenter VMs and ensuring they are properly tagged would be labor-intensive.</p>
<p>After some thought, I realized that the volume names for vCenter VMs were unique. I created an Aria Operations View to select VMs based on the existence of vCenter volumes. This approach allowed me to add the view to any environment, displaying only the vCenter VMs.</p>
<p>After creating the view to select only vCenter VMs, I aimed to build a comprehensive vCenter Monitoring Dashboard. At the top, I included counts of vCenters, clusters, hosts, and VMs, etc… as these metrics are frequently requested by management. The dashboard features widgets to display all VM volumes (the primary reason for creating the dashboard), vCenter VM performance, CPU/memory history, and a list of vCenters.</p>
<p>It&rsquo;s important to note that in VMware Aria Operations, showing VMware vCenter VMs is different from showing VMware vCenters. When a vCenter is selected in the vCenter Details widget, the dashboard displays host CPU/memory information.</p>
<p>To prevent ESXi hosts from being left in maintenance mode accidentally, I added a donut widget to show their status. Additionally, since cluster DRS can sometimes be disabled for changes and forgotten to be re-enabled, another donut widget shows the DRS status.</p>
<hr>
<h6 id="steps-to-create-the-dashboard">Steps to Create the Dashboard</h6>
<ol>
<li>Create the (4) Views
<ul>
<li>Select all vCenter VMs</li>
<li>Show vCenter Details</li>
<li>Show Hosts Maintenance Mode Status</li>
<li>Show Clusters DRS Status</li>
</ul>
</li>
<li>Create the Dashboard</li>
</ol>
<p>To simplify getting started, all the Views and the Dashboard are available in my GitHub repository for download. <a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/vCenter-Observability" target="_blank" rel="noopener noreffer ">Click Here to Download the files.</a></p>
<hr>
<h6 id="view-to-select-vcenter-vms">View to Select vCenter VMs</h6>
<p><strong>View Data:</strong></p>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-02.png" title="/vcenter-observability/vcenter-observability-02.png" data-thumbnail="/vcenter-observability/vcenter-observability-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>View Filter:</strong></p>
<p>In the view filter, I specified two metrics: “guestfilesystem:/storage/imagebuilder|capacity” and “guestfilesystem:/storage/autodeploy|capacity”. If a VM contains these metrics, it will be selected. These volume names are unique to vCenter VMs, making this approach effective.</p>
<hr>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-01.png" title="/vcenter-observability/vcenter-observability-01.png" data-thumbnail="/vcenter-observability/vcenter-observability-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Screen Shot:</strong></p>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-03.png" title="/vcenter-observability/vcenter-observability-03.png" data-thumbnail="/vcenter-observability/vcenter-observability-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Usage:</strong></p>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-04.gif" title="/vcenter-observability/vcenter-observability-04.gif" data-thumbnail="/vcenter-observability/vcenter-observability-04.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<blockquote>
<p>Stay tuned for future blog posts. I plan to create dashboards for monitoring Aria appliances, similar to what I did for VMware vCenter. It&rsquo;s crucial to ensure these appliances are well monitored and maintained, like a Swiss watch.</p>
</blockquote>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/vCenter-Observability" target="_blank" rel="noopener noreffer ">Dale&rsquo;s Github Repository</a></li>
</ul>
<hr>
<h6 id="product-version-used-for-blog-post">Product Version used for Blog Post:</h6>
<ul>
<li>Aria Operations: 8.17.1</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>The relationship between VMware vCenter and the VM it runs on is not available out of the box in VMware Aria Operations. However, by identifying VMs through their unique volume names, I created a view that can be added to any environment to filter out the VMs running vCenter. The filter within that View is what enables this Dashboard to work.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Explore 2024</title>
    <link>https://www.vcrocs.info/vmware-explore-2024/</link>
    <pubDate>Wed, 01 May 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2024/</guid>
    <description><![CDATA[<p><strong>Why I enjoy going to VMware Explore. First as a Customer. Now as a Employee.</strong></p>
<hr>
<blockquote>
<p>&ldquo;Innovate like a startup, deliver like an enterprise” - Pat Gelsinger</p>
</blockquote>
<hr>
<h6 id="vmware-explore-2024">VMware Explore 2024</h6>
<p>Website: <a href="https://www.vmware.com/explore" target="_blank" rel="noopener noreffer ">VMware Explore 2024.</a><br>
Las Vegas Date: August 26 – 29, 2024<br>
The Venetian Convention and Expo Center<br>
Registration is open!</p>
<hr>
<h6 id="why-attend">Why Attend</h6>
<p><strong>When I was a VMware Customer, I tried to go to VMware Explore every year. Here is a list of reasons why I enjoyed the conference:</strong></p>
<ul>
<li>To meet other people in the same field as myself. Exchange stories, ideas, contact information, etc.. The Community side of the event alone, is worth the cost to go.</li>
<li>To attend sessions that are done by people that you follow their blogs or socials, is an exciting experience.</li>
<li>The Key Note Sessions get you excited to see what is coming with the next releases of the VMware Products.</li>
<li>Vendor Parties are a great way to meet people and have good food and drink.</li>
<li>Other Highlights for evening Parties for me:
<ul>
<li>vExpert Party</li>
<li>VMUG Party</li>
<li>Event Concert on the last night (Black Keys Concert was my favorite)</li>
</ul>
</li>
</ul>
<hr>
<p><strong>As a Employee my reasons are different to attend. Here is a list:</strong></p>
<ul>
<li>To meet people in person that I work with everyday. We are located across the country and don&rsquo;t get to meet in person. Even if we went into a office everyday, we would never get to meet.</li>
<li>Get Sessions accepted and share the knowledge with the products I work with every day. I like doing presentations on the Automation, Monitoring and Logging Products.</li>
<li>I like to participate in the Hackathon that is part of the conference. In 2023 my Team received 2nd place.</li>
</ul>
<hr>
<h6 id="sessions">Sessions</h6>
<p>I submitted a couple sessions that hope get accepted in 2024, Fingers Crossed. One session I will be presenting with a customer, and 2 sessions I included TAMs to present with me. I am excited about the topics. When the sessions get announced, check back on this blog. I will update what was accepted.</p>
<hr>
<h6 id="my-favorite-places-to-eat-or-things-to-do-while-at-vmware-explore">My favorite places to eat or things to do while at VMware Explore:</h6>
<p><strong>Eating - Paces that I have gone and enjoyed:</strong></p>
<ul>
<li><a href="https://www.joes.net/las-vegas/" target="_blank" rel="noopener noreffer ">Joes&rsquo;s Prime Steak and Stone Crab</a> - I have always had a great experience here</li>
<li><a href="https://www.venetianlasvegas.com/restaurants/delmonico-steakhouse.html" target="_blank" rel="noopener noreffer ">Delmonico Steakhouse</a> - You can&rsquo;t leave without having EMERIL’S BANANA CREAM PIE!</li>
<li><a href="https://www.venetianlasvegas.com/restaurants/grand-lux-cafe-palazzo.html" target="_blank" rel="noopener noreffer ">Grand Lux Café at The Palazzo</a> is great for Breakfast!</li>
<li><a href="https://www.venetianlasvegas.com/restaurants/yardbird.html" target="_blank" rel="noopener noreffer ">Yardbird</a> is close to conference entrance and food to very good</li>
<li><a href="https://www.in-n-out.com/menu" target="_blank" rel="noopener noreffer ">IN-N-Out BURGER</a> | If you live in the US East and have never gone to an IN-N-Out BURGER, you need to go at least one time.</li>
</ul>
<p><strong>Things to do that I have done and enjoyed:</strong></p>
<ul>
<li><a href="https://www.usbr.gov/lc/hooverdam/index.html" target="_blank" rel="noopener noreffer ">Hoover Damn</a> was nice to go see. Pictures can&rsquo;t replace a visit in person.</li>
<li><a href="https://www.clarkcountynv.gov/government/departments/parks___recreation/shooting_complex/guest_services.php" target="_blank" rel="noopener noreffer ">Sporting Clays at Clark County Shooting Complex</a> - World-Class Shotgun Center</li>
<li><a href="https://www.blm.gov/programs/national-conservation-lands/nevada/red-rock-canyon" target="_blank" rel="noopener noreffer ">Red Rock Canyon National Conservation Area</a></li>
</ul>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://www.vmware.com/explore" target="_blank" rel="noopener noreffer ">VMware Explore 2024.</a></li>
</ul>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Automation Code Creation with ollama</title>
    <link>https://www.vcrocs.info/ollama/</link>
    <pubDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/ollama/</guid>
    <description><![CDATA[<p><strong>My review on using ollama to help create code for Automation</strong></p>
<hr>
<blockquote>
<p>&ldquo;By harnessing the power of AI, I simplify my coding workflow, freeing up time to focus on creating blog posts that resonate with the vCommunity. With the help of AI, my writing becomes more precise, more creative, and more impactful.” - Dale Hassinger</p>
</blockquote>
<hr>
<h6 id="ollama">ollama</h6>
<figure><a class="lightgallery" href="/ollama/ollama-01.png" title="/ollama/ollama-01.png" data-thumbnail="/ollama/ollama-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<h6 id="ollama-web-site-link">ollama Web Site Link:</h6>
<p><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Link to ollama web site.</a></p>
<p>Building on my experience with ChatGPT, I decided to explore Ollama Local on my trusty Apple MacBook Pro M1. As a user-friendly AI enthusiast, I was eager to see how seamless the installation process would be. To my delight, setting up Ollama Local on Mac is incredibly straightforward.</p>
<p>To get started, simply head to the <a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Ollama website</a> and download the application as a zip file. Expand the contents of the archive and copy the Ollama Application file into your Applications folder. Double-clicking the icon will launch the app in no time – it&rsquo;s that easy!</p>
<p>For this review, I&rsquo;ll be using the Llama3 Large Language Model (LLM) to demonstrate Ollama Local&rsquo;s capabilities. The first time you run the application, it will automatically download the necessary LLM files for you. Like I said, very easy to use.</p>
<p>With Ollama Local up and running, let&rsquo;s dive into its features and see what kind of AI-powered magic it can create.</p>
<p>Go to a terminal and type &ldquo;ollama run llama3&rdquo; to get started.</p>
<hr>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ollama run llama3</span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-02.png" title="/ollama/ollama-02.png" data-thumbnail="/ollama/ollama-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="ollama-models">ollama Models:</h6>
<p><strong>There are many models to pick from to use with ollama&hellip;</strong></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-03.gif" title="/ollama/ollama-03.gif" data-thumbnail="/ollama/ollama-03.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Once you&rsquo;ve chosen the desired model, the web site will provide you with the necessary command prompts to get started. No need to dig through complex documentation or struggle with unfamiliar code - just follow the straightforward instructions and you&rsquo;re good to go!</p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-04.gif" title="/ollama/ollama-04.gif" data-thumbnail="/ollama/ollama-04.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="how-to-run-ollama-from-cli">How to run ollama from cli:</h6>
<p><strong>Here is a quick video to show how to get started from the CLI</strong></p>
<ul>
<li>Run command to start ollama</li>
<li>Ask a question and see the results</li>
<li>type /bye to exit ollama</li>
</ul>
<p>Hands-on experience with this tool? A breeze! Not only is it incredibly user-friendly, but the performance on my laptop has been impressive too. And what really stands out is the speed at which responses are delivered - no waiting around here! The unedited video itself
is a testament to its fast processing capabilities.</p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-05.gif" title="/ollama/ollama-05.gif" data-thumbnail="/ollama/ollama-05.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ollama run llama3
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; Who Created PowerShell
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; /bye</span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="ollama-real-world-examples">ollama &ldquo;Real World&rdquo; Examples:</h6>
<p>Now I will show some examples of how I use ollama everyday for coding and writing. They are my main uses cases for AI.</p>
<hr>
<h6 id="ollama-powershell-function">ollama PowerShell Function</h6>
<p>In my previous blogs, I&rsquo;ve highlighted the versatility of PowerShell in automating various tasks. In this blog, I&rsquo;ll show how to harness the power of PowerShell to interact with AI assistants like Ollama. To start, I created a custom function that enables you to ask Ollama questions directly from the PowerShell command line. Here&rsquo;s the sample code to get you started:</p>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Function to ask Ollama</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">ask-ollama</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Code to run when the function is called</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span><span class="nb">Parameter</span><span class="p">(</span><span class="na">Mandatory</span><span class="p">=</span><span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">      <span class="nv">$question</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="c"># Set request body</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$requestBody</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">model</span> <span class="p">=</span> <span class="s2">&#34;llama3&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">prompt</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$question</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">stream</span> <span class="p">=</span> <span class="vm">$false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># Set headers</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$headers</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">=</span><span class="s1">&#39;application/json&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$Body</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$requestBody</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># Send the request</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$request</span> <span class="p">=</span><span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s1">&#39;http://localhost:11434/api/generate&#39;</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$response</span> <span class="p">=</span><span class="nv">$request</span><span class="p">.</span><span class="py">Content</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Print response to console</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="nv">$response</span><span class="p">.</span><span class="py">response</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Copy response to clipboard</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Set-Clipboard</span> <span class="n">-Value</span> <span class="nv">$response</span><span class="p">.</span><span class="py">response</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Example Questions -----</span>
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;What is PowerCLI&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Create a PowerShell script to connect to a vCenter, Get a list of all VMs with a Snap&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Create a Salt State file to stop and disable a service with a name of Spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Show me how to copy a powershell variable value to the clipboard&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<p>If you are a PowerShell enthusiast, you&rsquo;re probably accustomed to the flexibility of functions within your scripts. Feel free to adapt this example to your own workflow and coding style, regardless of whether you prefer to use it as is or modify it to fit your needs.</p>
<hr>
<h6 id="ollama-prompt-engineering-examples">ollama Prompt Engineering Examples:</h6>
<h6 id="set-the-role-to-start">Set the &lsquo;Role&rsquo; to start:</h6>
<p>One of my habits when working with ollama, or ChatGPT, is setting a specific &lsquo;role&rsquo; for our conversations. By defining a clear context or persona, I&rsquo;ve found that I&rsquo;m able to receive more effective and insightful responses from the AI. This approach has been refined over time through experimentation and exploration of the product&rsquo;s capabilities, yielding better results and a more productive dialogue.</p>
<ul>
<li>Act as a PowerShell SME</li>
<li>Act as a PowerCLI SME</li>
<li>Act as a VMware SME</li>
<li>Act as a vRealize SME</li>
<li>Act as a Javascript SME to work with VMware Orchestrator</li>
<li>Act as a Technology Blogger</li>
</ul>
<hr>
<h6 id="questions-to-generate-code">Questions to generate code:</h6>
<ul>
<li>PowerCLI:
<ul>
<li>Act as a PowerCLI SME</li>
<li>Create a script to connect to a VMware vCenter. username is <a href="mailto:administrator@vsphere.local" rel="">administrator@vsphere.local</a>. password is Password123. vCenter name is vcenter8x.corp.local. List all VMs that have a snap. Export the list of VMs with a snap to c:\reports\vms-with-snaps.csv.</li>
</ul>
</li>
</ul>
<p><strong>Unedited Code Returned:</strong></p>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Set the connection settings</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcenter</span> <span class="p">=</span> <span class="s2">&#34;vcenter8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$username</span> <span class="p">=</span> <span class="s2">&#34;administrator@vsphere.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span> <span class="p">=</span> <span class="s2">&#34;Password123&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Connect to the vCenter using PowerCLI</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcenter</span> <span class="n">-User</span> <span class="nv">$username</span> <span class="n">-Password</span> <span class="nv">$password</span> <span class="n">-ErrorAction</span> <span class="n">Stop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Get a list of all VMs that have a snapshot</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmsWithSnaps</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-VM</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="n">HasSnapshot</span><span class="p">}</span> <span class="p">|</span> <span class="nb">ForEach-Object</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vm</span> <span class="p">=</span> <span class="nv">$_</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Found snapshot for VM: </span><span class="nv">$vm</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmsWithSnaps</span> <span class="p">+=</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Export the list of VMs with a snap to a CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmsWithSnaps</span> <span class="p">|</span> <span class="nb">Export-Csv</span> <span class="n">-Path</span> <span class="s2">&#34;C:\reports\vms-with-snaps.csv&#34;</span> <span class="n">-NoTypeInformation</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Disconnect from the vCenter</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl"><span class="p">```</span>
</span></span><span class="line"><span class="cl"><span class="n">Let</span> <span class="n">me</span> <span class="n">explain</span> <span class="n">what</span> <span class="n">each</span> <span class="n">part</span> <span class="n">of</span> <span class="n">the</span> <span class="n">script</span> <span class="n">does</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mf">1</span><span class="p">.</span> <span class="n">The</span> <span class="n">first</span> <span class="n">section</span> <span class="n">sets</span> <span class="n">the</span> <span class="n">connection</span> <span class="n">settings</span><span class="err">:</span> <span class="p">`</span><span class="n">vcenter</span><span class="p">`,</span> <span class="p">`</span><span class="n">username</span><span class="p">`,</span> <span class="n">and</span> <span class="p">`</span><span class="n">password</span><span class="p">`.</span>
</span></span><span class="line"><span class="cl"><span class="mf">2</span><span class="p">.</span> <span class="n">The</span> <span class="p">`</span><span class="nb">Connect-VIServer</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">connects</span> <span class="n">to</span> <span class="n">your</span> <span class="n">VMware</span> <span class="n">vCenter</span> <span class="n">using</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">credentials</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="mf">3</span><span class="p">.</span> <span class="n">The</span> <span class="p">`</span><span class="nb">Get-VM</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">retrieves</span> <span class="n">a</span> <span class="n">list</span> <span class="n">of</span> <span class="n">all</span> <span class="n">virtual</span> <span class="n">machines</span> <span class="k">in</span> <span class="n">the</span> <span class="n">vCenter</span><span class="p">.</span> <span class="n">We</span> <span class="n">then</span> <span class="n">use</span> <span class="n">the</span> <span class="p">`</span><span class="nb">Where-Object</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">to</span> <span class="kd">filter</span><span class="w"> </span><span class="nb">this</span> <span class="n">list</span> <span class="n">and</span> 
</span></span><span class="line"><span class="cl"><span class="n">only</span> <span class="n">include</span> <span class="n">VMs</span> <span class="n">that</span> <span class="n">have</span> <span class="n">at</span> <span class="n">least</span> <span class="n">one</span> <span class="n">snapshot</span> <span class="p">(`$</span><span class="n">_</span><span class="p">.</span><span class="n">HasSnapshot</span><span class="p">`).</span>
</span></span><span class="line"><span class="cl"><span class="mf">4</span><span class="p">.</span> <span class="n">We</span> <span class="n">loop</span> <span class="n">through</span> <span class="n">each</span> <span class="n">VM</span> <span class="n">that</span> <span class="n">has</span> <span class="n">a</span> <span class="n">snapshot</span> <span class="n">using</span> <span class="n">a</span> <span class="p">`</span><span class="nb">ForEach-Object</span><span class="p">`</span> <span class="n">cmdlet</span><span class="p">,</span> <span class="n">and</span> <span class="n">add</span> <span class="n">its</span> <span class="n">name</span> <span class="n">to</span> <span class="n">an</span> <span class="n">array</span> <span class="p">`$</span><span class="n">vmsWithSnaps</span><span class="p">`.</span>
</span></span><span class="line"><span class="cl"><span class="mf">5</span><span class="p">.</span> <span class="n">The</span> <span class="n">final</span> <span class="n">section</span> <span class="n">exports</span> <span class="n">the</span> <span class="n">array</span> <span class="n">of</span> <span class="n">VM</span> <span class="n">names</span> <span class="n">to</span> <span class="n">a</span> <span class="n">CSV</span> <span class="n">file</span> <span class="n">named</span> <span class="p">`</span><span class="nb">vms-with</span><span class="n">-snaps</span><span class="p">.</span><span class="n">csv</span><span class="p">`</span> <span class="k">in</span> <span class="n">the</span> <span class="p">`</span><span class="n">C:</span><span class="p">\</span><span class="n">reports</span><span class="p">`</span> <span class="n">directory</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="mf">6</span><span class="p">.</span> <span class="k">Finally</span><span class="p">,</span> <span class="n">we</span> <span class="n">disconnect</span> <span class="n">from</span> <span class="n">the</span> <span class="n">vCenter</span> <span class="n">using</span> <span class="n">the</span> <span class="p">`</span><span class="nb">Disconnect-VIServer</span><span class="p">`</span> <span class="n">cmdlet</span><span class="p">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Save</span> <span class="n">this</span> <span class="n">script</span> <span class="n">as</span> <span class="n">a</span> <span class="n">PowerShell</span> <span class="n">file</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="py">g</span><span class="p">.,</span> <span class="p">`</span><span class="n">vms_with_snaps</span><span class="p">.</span><span class="n">ps1</span><span class="p">`)</span> <span class="n">and</span> <span class="n">run</span> <span class="n">it</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">list</span> <span class="n">of</span> <span class="n">VMs</span> <span class="n">with</span> <span class="n">snapshots</span> <span class="n">exported</span> <span class="n">to</span> <span class="n">the</span> <span class="n">specified</span> 
</span></span><span class="line"><span class="cl"><span class="n">CSV</span> <span class="n">file</span><span class="p">!</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-07.gif" title="/ollama/ollama-07.gif" data-thumbnail="/ollama/ollama-07.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Code questions that I have used:</strong></p>
<ul>
<li>Convert this curl command to PowerShell</li>
<li>Create a html file that does&hellip; Amazing how advanced the code will be for a complete web page. Include a table that I can sort the columns, select the number of rows and have a search within the table. Awesome!</li>
<li>Convert this Python to PowerShell or convert this PowerShell to Python</li>
<li>Javascript that can be used with VMware Orchestrator Actions and Workflows</li>
<li>SQL commands</li>
<li>Linux commands</li>
<li>vi and nano help</li>
<li>salt state files</li>
</ul>
<hr>
<h6 id="questions-to-help-with-writing">Questions to help with writing:</h6>
<ul>
<li>My writing process in commands:
<ul>
<li>Act as a Technology Blogger</li>
<li>Reword &ldquo;Paste what I wrote within double quotes&rdquo;</li>
</ul>
</li>
<li>See what the results look like. If I want a second example I will type:
<ul>
<li>&ldquo;again&rdquo; or</li>
<li>&ldquo;another example&rdquo;</li>
</ul>
</li>
<li>For my writing style I will use this command a lot:
<ul>
<li>use less adjectives</li>
</ul>
</li>
</ul>
<p>Data for LLama3 is up to the year 2022. When asking VMware Aria questions I will still use vRealize a lot because of the name change.</p>
<ul>
<li>Other writing example questions:
<ul>
<li>I want to create a Technology presentation description &ldquo;Topic VMware vRealize Operations with a focus on Dashboards&rdquo;</li>
</ul>
</li>
</ul>
<hr>
<h6 id="ollama-commands">ollama commands:</h6>
<p>Two commands I use the most:</p>
<ul>
<li>&ldquo;ollama run llama3&rdquo; to start ollama</li>
<li>&ldquo;/bye&rdquo; to exit ollama</li>
</ul>
<figure><a class="lightgallery" href="/ollama/ollama-06.png" title="/ollama/ollama-06.png" data-thumbnail="/ollama/ollama-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="commonsense-rules">Commonsense Rules:</h6>
<p><strong>Rules I use when working with AI/LLMs:</strong></p>
<ul>
<li>Never use any code generated in a production environment without testing in a lab first</li>
<li>Always understand the code that is generated before even using in a lab</li>
<li>Read the text that is generated before using</li>
<li>Understand that AI/LLMs are to help you, not do the work for you.</li>
<li>You are responsible for anything generated that you use.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>ollama and llama3 are both available at no cost today (04/2024).</li>
<li>I pay $20 per month for ChatGPT. You get more with ChatGPT but ollama does a good job for a way to have a local LLM option.</li>
</ul>
<p><strong>Use Cases to use ollama local:</strong></p>
<ul>
<li>Traveling and no internet access for AI like ChatGPT.
<ul>
<li>Use ollama while flying. Nice way to get some help at 35,000 ft.</li>
</ul>
</li>
<li>Go to your family cabin off the grid and still use ollama on the MacBook.</li>
<li>Off the grid camping.</li>
<li>Basically, if the laptop has power, you have access to ollama AI, which is very cool in my mind. It is awesome to have the power of AI at your fingertips and not require the power of the internet to use it.</li>
</ul>
<hr>
<p><strong>Stream Deck and ollama commands together is a great time saver.</strong></p>
<ul>
<li>I assign commands I use the most with ollama to buttons.</li>
<li>When I have a prompt that works well, assigning the prompt to a stream deck button makes it easy to always run the command the same way. I should call them Prompt Engineering Buttons.</li>
</ul>
<figure><a class="lightgallery" href="/ollama/ollama-08.png" title="/ollama/ollama-08.png" data-thumbnail="/ollama/ollama-08.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<p>In this video, the ollama commands were run using a Stream Deck Button. Realtime speed, no video edits:</p>
<figure><a class="lightgallery" href="/ollama/ollama-09.gif" title="/ollama/ollama-09.gif" data-thumbnail="/ollama/ollama-09.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">ollama web site.</a></li>
</ul>
<hr>
<h6 id="product-versions-used-for-blog-post">Product Versions used for Blog Post:</h6>
<ul>
<li>ollama: 0.1.32 | Use this command at cli to show ollama version &ldquo;ollama -v&rdquo;</li>
<li>LLM: llama3</li>
</ul>
<hr>
<p><span style="font-size: 16px; color: red; font-weight: bold;">DO NOT EVER USE ANY CODE FROM A BLOG IN A PRODUCTION ENVIRONMENT! PLEASE TEST ANY CODE IN THIS BLOG IN A LAB!</span></p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware vExpert 2024 | Fifth Year</title>
    <link>https://www.vcrocs.info/vexpert-2024/</link>
    <pubDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vexpert-2024/</guid>
    <description><![CDATA[<p><strong>VMware vExpert 2024</strong></p>
<hr>
<h6 id="vmware-vexpert-2020---present">VMware vExpert 2020 - Present</h6>
<p>I have been included in (2) vExpert Subprograms in 2024.</p>
<h6 id="vexpert-subprograms">vExpert Subprograms:</h6>
<ul>
<li>vExpert Cloud Management</li>
<li>vExpert vSphere</li>
</ul>
<hr>
<p><a class="lightgallery" href="/vexpert-2024/2024-vexpert-cloud-management.png" title="/vexpert-2024/2024-vexpert-cloud-management.png" data-thumbnail="/vexpert-2024/2024-vexpert-cloud-management.png">
        
    </a><br>
<a class="lightgallery" href="/vexpert-2024/2024-vexpert-vsphere.png" title="/vexpert-2024/2024-vexpert-vsphere.png" data-thumbnail="/vexpert-2024/2024-vexpert-vsphere.png">
        
    </a></p>
<hr>
<p>2024 is the 4th year that I was accepted into the VMware vExpert Cloud Management subprogram and the 1st year for vExpert vSphere.</p>
<hr>
<p>I&rsquo;m immensely honored to be included in the VMware vExpert program once again, marking my fifth year of participation. The aspect of the vExpert program I find particularly commendable is its focus on acknowledging individuals for their contributions and dedication to &ldquo;Giving Back&rdquo;. Being chosen for the vExpert program signifies a commitment to sharing knowledge and a desire to elevate not just oneself but also those within the vCommunity.</p>
<p>As an employee of Broadcom By VMware, one of my primary ambitions is to contribute more significantly to the vCommunity than I could as a user of VMware products.</p>
<hr>
<p>I did more for the vCommunity in 2023 than any previous years.</p>
<ul>
<li>
<p><strong>VMware Explore 2023 Presentation</strong> | Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud) [CODE2501LV]</p>
</li>
<li>
<p><strong>Hackathon Team Captain</strong> (Finished in 2nd Place) | VMware Explore 2023</p>
</li>
<li>
<p><strong>Philly VMUG - 2023</strong> | VMware Aria Automation and Operations</p>
</li>
<li>
<p><strong>The PowerShell Podcast</strong> | “Using PowerCLI with Dale Hassinger”</p>
</li>
<li>
<p><strong>VMware Community Podcast</strong> #659</p>
</li>
<li>
<p><strong>Blogs:</strong> | More Blogs than any previous year</p>
</li>
</ul>
<hr>
<h6 id="what-is-the-vmware-vexpert-program">What is the VMware vExpert Program?</h6>
<h6 id="program-overview">Program Overview</h6>
<p>The VMware vExpert program is VMware&rsquo;s global evangelism and advocacy program. The program is designed to put VMware&rsquo;s marketing resources towards your advocacy efforts. Promotion of your articles, exposure at our global events, co-op advertising, traffic analysis, and early access to beta programs and VMware&rsquo;s roadmap. The awards are for individuals, not companies, and last for one year. Employees of both customers and partners can receive the awards. In the application, we consider various community activities from the previous year as well as the current year&rsquo;s (only for 2nd half applications) activities in determining who gets awards. We look to see that not only were you active but are still active in the path you chose to apply for.</p>
<h6 id="criteria">Criteria</h6>
<p>If you are interested in becoming a vExpert the criteria is simple. We are looking for IT Professionals who are sharing their VMware knowledge and contributing that back to the community. The term &ldquo;giving back&rdquo; is defined as going above and beyond your day job. There are several ways to share your knowledge and engage with the community. Some of those activities are blogging, book authoring, magazine articles, CloudCred task writing, active in Facebook groups, forum (VMTN as well as other non VMware) platforms, public speaking, VMUG leadership, videos and so on.</p>
<hr>
<h6 id="thanks">Thanks:</h6>
<p>I have worked with a great group of people at VMware, past and present. I would like to thank everyone that has helped me on my journey called a career.</p>
<hr>
<p>Email: <a href="mailto:Dale.Hassinger@vCrocs.info" rel="">Dale.Hassinger@vCrocs.info</a><br>
Location: Dillsburg, PA</p>
<blockquote>
<p>&ldquo;9 - 5 pays the bills, 5 - 10 advances your career&rdquo;</p>
</blockquote>]]></description>
</item>
<item>
    <title>VMware Aria Automation | How to send messages and updates</title>
    <link>https://www.vcrocs.info/aria-automation-messages-updates/</link>
    <pubDate>Sun, 17 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-automation-messages-updates/</guid>
    <description><![CDATA[<p><strong>How to send messages/updates to a Microsoft Teams Channel or Google Spaces.</strong></p>
<hr>
<blockquote>
<p>&ldquo;If everyone is moving forward together, then success takes care of itself.” - Henry Ford</p>
</blockquote>
<hr>
<h6 id="vmware-aria-automation">VMware Aria Automation</h6>
<p>Whenever new VMs are deployed or Day 2 operations are executed via the VMware Aria Automation Catalog, I find it crucial to update our team through a common messaging platform about the ongoing creations or modifications. In this blog, I&rsquo;ll demonstrate how to dispatch notifications to both Microsoft Teams and Google Spaces via a Webhook. This technique can be adapted for any messaging service such as Slack, Zoom, Discord, etc., by simply altering the JSON body formatting code and creating a Webhook for message delivery.</p>
<p>I will guide you through the process of sending alerts from VMware Aria Automation utilizing ABX Actions and Orchestrator Workflows. Though the procedure remains largely the same, there are minor variations in acquiring Property Values. Presenting both methods offers you, the Automation Specialists, the freedom to choose the approach that seamlessly integrates into your workflows. My philosophy in automation is that there are countless ways to achieve the same outcome.</p>
<hr>
<p>In this blog, I&rsquo;ll walk you through the creation of a new virtual machine (VM). At the onset of the build process, I have configured an Extensibility Subscription that triggers the sending of notifications to both Microsoft Teams and Google Spaces. This is accomplished through the use of an ABX Action and an Orchestrator Workflow.</p>
<hr>
<p>Besides notifying your team when a new VM is created, I&rsquo;ll demonstrate how to dispatch a message through an Orchestrator Workflow for a Day 2 Automation process.</p>
<hr>
<h6 id="create-a-new-vm-and-send-message">Create a New VM and Send Message</h6>
<p><strong>Steps:</strong></p>
<ol>
<li>Within the Design section of Aria Automation, create a template. For the purpose of this tutorial, we will construct a straightforward Rocky Linux VM. | Refer to <a href="#screen-shot-01">Screen Shot 1</a>.</li>
<li>Ensure that all properties you wish to include in your notification are incorporated into the template&rsquo;s YAML code. These property values will be transmitted to both ABX Actions and Orchestrator Workflows. | Refer to <a href="#screen-shot-02">Screen Shot 2</a>.
<ul>
<li>You have the flexibility to include any property in your messages, provided it is specified in the template&rsquo;s YAML code.</li>
</ul>
</li>
<li>Proceed to set up an Extensibility Action. | See <a href="#screen-shot-03">Screen Shot 3</a> and <a href="#screen-shot-04">Screen Shot 4</a>.</li>
<li>Establish an Extensibility Subscription that will initiate the ABX Action or Orchestrator Workflow as required. | Refer to <a href="#screen-shot-05">Screen Shot 5</a>.</li>
<li>Here&rsquo;s an example of how to define a subscription. | See <a href="#screen-shot-06">Screen Shot 6</a>.</li>
<li>Initiate the creation of an Orchestrator Workflow. | Refer to <a href="#screen-shot-07">Screen Shot 7</a>.
<ul>
<li>Incorporate an input property into the Orchestrator Workflow. | See <a href="#screen-shot-08">Screen Shot 8</a>.</li>
<li>Outline the schema within the Orchestrator Workflow. | Refer to <a href="#screen-shot-09">Screen Shot 9</a>.</li>
<li>Inject the necessary code into the Orchestrator Workflow. | See <a href="#screen-shot-10">Screen Shot 10</a> and <a href="#screen-shot-11">Screen Shot 11</a>.</li>
</ul>
</li>
<li>Deploy a new VM and confirm that the Extensibility Subscription successfully triggered the ABX Action you defined.</li>
<li>Check your preferred messaging system to ensure the notification was received.
<ul>
<li>Example of a Google Spaces Message | Refer to <a href="#screen-shot-12">Screen Shot 12</a>.</li>
<li>Example of a Microsoft Teams Message | See <a href="#screen-shot-13">Screen Shot 13</a>.</li>
</ul>
</li>
<li>If all steps were executed successfully, it&rsquo;s time for a celebration!</li>
<li><a href="#screen-shot-14">Screen Shot 14</a> illustrates the process of creating a Google Spaces Webhook.</li>
</ol>
<hr>
<h6 id="orchestrator-workflow-day-2-automation-and-send-message">Orchestrator Workflow Day 2 Automation and Send Message</h6>
<p><strong>Steps:</strong></p>
<ol>
<li>Initiate the creation of an Orchestrator Workflow. Creating a new Workflow is the same for Day 2 Automation Processes as when a Workflow was created for building a New VM. | Refer to <a href="#screen-shot-07">Screen Shot 7</a>.
<ul>
<li>Incorporate an input property into the Orchestrator Workflow for every question needed to complete the Day 2 Automation. | See <a href="#screen-shot-15">Screen Shot 15</a>.</li>
<li>Inject the necessary code into the Orchestrator Workflow. | See <a href="#screen-shot-16">Screen Shot 16</a>.</li>
</ul>
</li>
<li>Run the Workflow and confirm that the code successfully ran and created the message .</li>
<li>Check your preferred messaging system to ensure the notification was received. The Messages with look the same as when you created a New VM. YOU define what information is shown.
<ul>
<li>Example of a Google Spaces Message | Refer to <a href="#screen-shot-12">Screen Shot 12</a>.</li>
<li>Example of a Microsoft Teams Message | See <a href="#screen-shot-13">Screen Shot 13</a>.</li>
</ul>
</li>
<li>If all steps were executed successfully, it&rsquo;s time for a high five!</li>
<li>Example of a Day 2 Automation Microsoft Teams Message | See <a href="#screen-shot-17">Screen Shot 17</a>.</li>
</ol>
<hr>
<h6 id="screen-shots-of-the-steps">Screen Shots of the Steps:</h6>
<h6 id="screen-shot-01">Screen Shot 01:</h6>
<p>Design Template with YAML Code that has all the required Properties.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-01.png" title="/aria-automation-messages-updates/aria-automation-messages-01.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Design Template Example YAML Code:</strong></p>
<p>This YAML code shows all the Properties that I want to send to a ABX Action or Orchestrator Workflow.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-YAML" data-lang="YAML"><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Ubuntu-20-with-minion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">9</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">Customization-Ubuntu-22</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Customization Spec:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;VM Name:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">LINUX-U-16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.69.16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">BuildTime</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Build Time:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">format</span><span class="p">:</span><span class="w"> </span><span class="l">date-time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vCenterFolders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;vCenter Folder:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">Blogs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">$dynamicEnum</span><span class="p">:</span><span class="w"> </span><span class="l">/data/vro-actions/TAM/DBH_vCenter_Folders</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_vSphere_Machine_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.vSphere.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">vCenter-ubuntu-20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">vCenter-1CPU-2GB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">BuildTime</span><span class="p">:</span><span class="w"> </span><span class="l">${input.BuildTime}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">folderName</span><span class="p">:</span><span class="w"> </span><span class="l">${input.vCenterFolders}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">vmIP</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">Cluster:PROD</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_vSphere_Network_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_vSphere_Network_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.vSphere.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">Network:vCenter-VMs</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-02">Screen Shot 02:</h6>
<p>Highlight of YAML Code showing Properties.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-02.png" title="/aria-automation-messages-updates/aria-automation-messages-02.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-03">Screen Shot 03:</h6>
<p>Where to create Extensibility ABX Actions.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-03-1.png" title="/aria-automation-messages-updates/aria-automation-messages-03-1.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-03-1.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-04">Screen Shot 04:</h6>
<p>Example Extensibility ABX Action.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-03-2.png" title="/aria-automation-messages-updates/aria-automation-messages-03-2.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-03-2.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Extensibility ABX Action Code:</strong></p>
<p>Code Snippets.</p>
<ul>
<li>Each ABX Action starts with identical code to retrieve Property Values.</li>
<li>The variation arises in the methodology of dispatching this information to the respective messaging systems.</li>
</ul>
<p>Here&rsquo;s an example script for sending notifications to Microsoft Teams.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">resourceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">image</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">image</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">flavor</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">flavor</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">folderName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">folderName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">vmIP</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">vmIP</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="n">userName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="py">userName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---image:&#34;</span><span class="nv">$image</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--flavor:&#34;</span><span class="nv">$flavor</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--folder:&#34;</span><span class="nv">$folder</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;userName:&#34;</span><span class="nv">$userName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;----vmIP:&#34;</span><span class="nv">$vmIP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- [ Start Add Alert to Teams Channel ] ---</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://vcrocs.webhook.office.com/webhookb2/ac73a8c3-bd4572@015568c1-bbe7-hack-me-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2f-hack-you-12/925b-9960-4590-9251-65db25f05419&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Create the message card</span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageCard</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@type&#34;</span>    <span class="p">=</span> <span class="s2">&#34;MessageCard&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@context&#34;</span> <span class="p">=</span> <span class="s2">&#34;http://schema.org/extensions&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;summary&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Issue 176715375&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sections&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;activityTitle&#34;</span>    <span class="p">=</span> <span class="s2">&#34;vRA Automated VM Build:&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;facts&#34;</span>            <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM IP:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmIP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Created By:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$userName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Image:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$image</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;vCenter Folder:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$folder</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Flavor:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$flavor</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;markdown&#34;</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message card</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-ContentType</span> <span class="s1">&#39;application/json&#39;</span> <span class="n">-Body</span> <span class="nv">$messageCard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Done&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>This code is to send a message to Google Spaces.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">resourceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">image</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">image</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">flavor</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">flavor</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">folderName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">folderName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">vmIP</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">vmIP</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="n">userName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="py">userName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---image:&#34;</span><span class="nv">$image</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--flavor:&#34;</span><span class="nv">$flavor</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--folder:&#34;</span><span class="nv">$folder</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;userName:&#34;</span><span class="nv">$userName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;----vmIP:&#34;</span><span class="nv">$vmIP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- [ Start Add Alert to Google Chat ] ---</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># --- Create json body for Google Alert   </span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageBody</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cards</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">header</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">title</span>    <span class="p">=</span> <span class="s2">&#34;New VM Build&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">sections</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">widgets</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmname</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM IP:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmIP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;Created By:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$username</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM Image:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$image</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;vCenter Folder:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$folder</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM Flavor:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$flavor</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$jsonMessage</span> <span class="p">=</span> <span class="nv">$messageBody</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Output the JSON to verify</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$jsonMessage</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL (replace it with your actual webhook URL)</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://chat.googleapis.com/v1/spaces/AAAAvSYSmfg/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&amp;token=Vj-NoThfrmjLnkIW_iQRQw71qcE2CGxG1tkjs2ArM7o&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Body</span> <span class="nv">$jsonMessage</span> <span class="n">-ContentType</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c">#$outPut = &#34;WebHook Date/Time: &#34; + $results.createTime</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Write-Host $outPut</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Done&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-05">Screen Shot 05:</h6>
<p>Subscriptions used to start ABX Actions or Orchestrator Workflows.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-03.png" title="/aria-automation-messages-updates/aria-automation-messages-03.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-06">Screen Shot 06:</h6>
<p>Subscription definition example.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-04.png" title="/aria-automation-messages-updates/aria-automation-messages-04.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-07">Screen Shot 07:</h6>
<p>Create a new Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-07.png" title="/aria-automation-messages-updates/aria-automation-messages-07.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-08">Screen Shot 08:</h6>
<p>Add Input named &ldquo;inputProperties&rdquo; to the Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-08.png" title="/aria-automation-messages-updates/aria-automation-messages-08.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-08.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-09">Screen Shot 09:</h6>
<p>Create the Orchestrator Workflow Schema.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-09.png" title="/aria-automation-messages-updates/aria-automation-messages-09.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-09.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-10">Screen Shot 10:</h6>
<p>Add the code to the Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-10.png" title="/aria-automation-messages-updates/aria-automation-messages-10.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-10.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Orchestrator Workflow Code:</strong></p>
<p>Code Examples. At the start of each Orchestrator Workflow, the code for retrieving Property Values is consistent. The variation comes in how the information is sent to each messaging system.</p>
<ul>
<li>For sending messages to Microsoft Teams, use the following code.</li>
<li>To send a message to Google Spaces in a Workflow, apply the same Google Spaces code used in ABX Actions.</li>
<li>The Google Spaces code does not change between ABX Actions and Workflows.</li>
<li>The difference in ABX Actions and Workflows is in the method of obtaining Property Values.</li>
</ul>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="n">resourceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">image</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">image</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">flavor</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">flavor</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">folderName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">folderName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">vmIP</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">vmIP</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">__metadata_userName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata_userName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---image:&#34;</span><span class="nv">$image</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--flavor:&#34;</span><span class="nv">$flavor</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--folder:&#34;</span><span class="nv">$folder</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;userName:&#34;</span><span class="nv">$userName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;----vmIP:&#34;</span><span class="nv">$vmIP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://vcrocs.webhook.office.com/webhookb2/ac73a8c3-59a2-hack-me-bd4572@015568c1-bbe7-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2fcbd-hack-you-0212/925be554-9960-4590-9251-65db25f05419&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Create the message card</span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageCard</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@type&#34;</span>    <span class="p">=</span> <span class="s2">&#34;MessageCard&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@context&#34;</span> <span class="p">=</span> <span class="s2">&#34;http://schema.org/extensions&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;summary&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Issue 176715375&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sections&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;activityTitle&#34;</span>    <span class="p">=</span> <span class="s2">&#34;vRA Automated VM Build:&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;facts&#34;</span>            <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM IP:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmIP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Created By:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$userName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Image:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$image</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;vCenter Folder:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$folder</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Flavor:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$flavor</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;markdown&#34;</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message card</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-ContentType</span> <span class="s1">&#39;application/json&#39;</span> <span class="n">-Body</span> <span class="nv">$messageCard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span><span class="p">=</span><span class="vm">@</span><span class="p">{</span><span class="n">status</span> <span class="p">=</span> <span class="s1">&#39;done&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-11">Screen Shot 11:</h6>
<p>Code difference between a Orchestrator Workflow and a ABX Action.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-11.png" title="/aria-automation-messages-updates/aria-automation-messages-11.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-11.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="message-examples">Message Examples:</h6>
<h6 id="screen-shot-12">Screen Shot 12:</h6>
<p>When all is configured and functioning properly, the Google Space message containing the New VM Build Details will appear as follows. Quite impressive!</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-google-space.png" title="/aria-automation-messages-updates/aria-automation-messages-google-space.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-google-space.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-13">Screen Shot 13:</h6>
<p>Microsoft Teams Message with New VM Build Details. Very Cool!</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-teams-message.png" title="/aria-automation-messages-updates/aria-automation-messages-teams-message.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-teams-message.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-14">Screen Shot 14:</h6>
<p>How to create a Google Spaces Webhook. Link included below on how to create a Microsoft Teams Webhook.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-12.png" title="/aria-automation-messages-updates/aria-automation-messages-12.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-12.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="start-of-day-2-automation-screen-shots">Start of Day 2 Automation Screen Shots:</h6>
<h6 id="screen-shot-15">Screen Shot 15:</h6>
<p>Add all the required inputs to the Workflow for the Day 2 Automation process.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-15.png" title="/aria-automation-messages-updates/aria-automation-messages-15.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-15.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-16">Screen Shot 16:</h6>
<p>Add the code to the Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-16.png" title="/aria-automation-messages-updates/aria-automation-messages-16.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-16.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Orchestrator Workflow Code for Day 2 Automation:</strong></p>
<p>Code Example.</p>
<ul>
<li>The difference between this Workflow for day 2 Automation Code and when I used a Workflow to create a new VM is how you get the input values.</li>
<li>For sending messages to Microsoft Teams, use the following code.</li>
<li>To send a message to Google Spaces in a Workflow, apply the same Google Spaces code used in ABX Actions.</li>
<li>The Google Spaces code does not change between ABX Actions and Workflows.</li>
<li>The difference in ABX Actions and Workflows is in the method of obtaining Property Values.</li>
</ul>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">vmName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">vmName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">snapName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">snapName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">snapDescription</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapDescription</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapDescription</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">snapDescription</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---------vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;-------snapName:&#34;</span><span class="nv">$snapName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;snapDescription:&#34;</span><span class="nv">$snapDescription</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://vcrocs.webhook.office.com/webhookb2/ac73a8c3-hack-me-e2fbd4572@015568c1-bbe7-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2fcb-hack-you-2/925be554-9960-4590-9251-65db25f05419&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Create the message card</span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageCard</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@type&#34;</span>    <span class="p">=</span> <span class="s2">&#34;MessageCard&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@context&#34;</span> <span class="p">=</span> <span class="s2">&#34;http://schema.org/extensions&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;summary&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Issue 176715375&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sections&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;activityTitle&#34;</span>    <span class="p">=</span> <span class="s2">&#34;VM SNAP Shot:&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;facts&#34;</span>            <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Snap Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$snapName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Snap Description:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$snapDescription</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;markdown&#34;</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message card</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-ContentType</span> <span class="s1">&#39;application/json&#39;</span> <span class="n">-Body</span> <span class="nv">$messageCard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Use this section to add the code to do whatever day 2 process you want to run</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Start the Code</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- end the Code</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span><span class="p">=</span><span class="vm">@</span><span class="p">{</span><span class="n">status</span> <span class="p">=</span> <span class="s1">&#39;done&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-17">Screen Shot 17:</h6>
<p>Microsoft Teams Message with Day 2 Automation Details. Awesome!</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-17.png" title="/aria-automation-messages-updates/aria-automation-messages-17.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-17.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook?tabs=newteams%2Cdotnet" target="_blank" rel="noopener noreffer ">Link to learn how to create a Microsoft Teams Webhook.</a></li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/" target="_blank" rel="noopener noreffer ">Link to my GitHub Repository for sample code like what is included in this Blog Post.</a></li>
</ul>
<hr>
<h6 id="aria-automation-version-used-for-blog-post">Aria Automation Version used for Blog Post:</h6>
<p>VMware Aria Automation 8.16.0 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code or process may need to be changed.</p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>How to learn about VMware Products</title>
    <link>https://www.vcrocs.info/how-to-learn-about-vmware-products/</link>
    <pubDate>Sat, 09 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/how-to-learn-about-vmware-products/</guid>
    <description><![CDATA[<p><strong>How to learn about and use VMware Products in a Home Lab</strong></p>
<hr>
<p>I was inspired to create this Blog after VMware EOA (End of Availability) the free ESXi product. There were some articles saying that people just getting into IT Technology roles will now not be able to learn about VMware Products. This is <strong>NOT True</strong> and I wanted to share some examples of how people can still learn about Virtualization with VMware Products in a Home Lab environment.</p>
<hr>
<p>I have been in the IT Industry for many years and there is a quote that I use all the time for people that want to advance their IT skills. &ldquo;9 - 5 pay the bills but 5 - 10 advances your career&rdquo;.</p>
<p><strong>There are still many options to learn about VMware Products. Here are some items that can be used to advance your knowledge:</strong></p>
<ul>
<li>VMware Workstation | <a href="https://www.vmware.com/products/workstation-player.html" target="_blank" rel="noopener noreffer ">Link to Workstation Download site</a></li>
<li>VMware Fusion | <a href="https://www.vmware.com/products/fusion.html" target="_blank" rel="noopener noreffer ">Link to Fusion Download site</a></li>
<li>VMware ESXi  <a href="https://www.vmware.com/products/vsphere.html" target="_blank" rel="noopener noreffer ">Link to vSphere Download site</a></li>
<li>Vmware ESXi ARM Edition | <a href="https://communities.vmware.com/t5/ESXi-Arm-Fling-Documents/VMware-ESXi-Arm-Documentation/ta-p/2993062" target="_blank" rel="noopener noreffer ">Link to Documentation</a></li>
</ul>
<hr>
<p>You also don&rsquo;t need to have the newest, fastest, most advanced hardware if you just want to learn about the VMware Products.  The hardware I have to create this Blog Post is an older Apple MacBook Pro that is no longer supported and will not run the latest versions of MAC OS. I installed Ubuntu Desktop on this Apple Laptop and then installed VMware Workstation. This setup is OK for learning and testing. I have a Raspberry PI 4 with 8 GB memory to install ESXi ARM Edition.</p>
<hr>
<p><strong>Items to know when setting up a Home Lab environment:</strong></p>
<ul>
<li>VMware ESXi | Default Evaluation period is 60 days. This will enable you to have a full featured host to test anything you want to learn for 60 days.</li>
<li>VMware Workstation | Non-Commercial use is free to use</li>
<li>VMware Fusion | Non-Commercial use is free to use</li>
<li>Vmware ESXi ARM Edition | Default Evaluation period is 180 days</li>
</ul>
<hr>
<p><strong>To get access to additional VMware Software, Take a look at VMUG Advantage:</strong></p>
<ul>
<li><a href="https://www.vmug.com/membership/evalexperience/" target="_blank" rel="noopener noreffer ">Link to VMUG Advantage</a></li>
<li>You do have to purchase VMUG Advantage. If you attend a local VMUG event, you will often get coupons for a discount to purchase VMUG Advantage.</li>
<li>This is one of the best vCommunity Programs you can join and it will include licenses for many of the VMware solutions which are valid for a year.</li>
</ul>
<hr>
<h6 id="vmware-workstation">VMware Workstation</h6>
<p>Screen Shot of my MacBook Pro Resources. Doesn&rsquo;t need to be latest and greatest to learn.<br>
<figure><a class="lightgallery" href="/how-to-learn-about-vmware-products/learn-01.png" title="/how-to-learn-about-vmware-products/learn-01.png" data-thumbnail="/how-to-learn-about-vmware-products/learn-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<p>Screen Shot of VMware Workstation running a Ubuntu Server. Great way to learn.
<figure><a class="lightgallery" href="/how-to-learn-about-vmware-products/learn-02.png" title="/how-to-learn-about-vmware-products/learn-02.png" data-thumbnail="/how-to-learn-about-vmware-products/learn-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | VM console access with VMRC</title>
    <link>https://www.vcrocs.info/aria-operations-text-display-widget-vmrc/</link>
    <pubDate>Sun, 18 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-text-display-widget-vmrc/</guid>
    <description><![CDATA[<p><strong>How to use the VMware Aria Operations and a Text Display Widget to launch VMRC</strong></p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>I recently had the opportunity to work together on a Blog Post, <a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Launch VMRC from Aria Operations</a>, with <a href="https://www.brockpeterson.com/" target="_blank" rel="noopener noreffer ">Brock Peterson</a>.</p>
<hr>
<ul>
<li><a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Link to Blog Post</a></li>
</ul>
<hr>
<p>During my time as a VMware customer, I had the opportunity to connect with Brock through my account executive, <a href="https://www.linkedin.com/in/stevelieberson/" target="_blank" rel="noopener noreffer ">Steve Lieberson</a>. Whenever I sought an in-depth understanding of Aria Operations, Steve would arrange a session with Brock. These interactions left me aspiring for a similar position at VMware. My contributions to VMware included participating in customer reference calls, where I eagerly shared my expertise in the Aria Suite with Healthcare Organizations, aiding them in embarking on their journey in Automation, Monitoring, or Logging. Eventually, I secured a role at VMware, allowing me to collaborate daily with Brock and the incredible VMware Cloud Foundation Specialists team, focusing on Automation, Monitoring, and Logging. The camaraderie and collective expertise of this team is truly remarkable. Working within a team that boasts a variety of role models is an great experience.</p>
<p>The blog post begins with an intriguing scenario where Brock, responding to a customer&rsquo;s query about launching the VMRC client to display a VM&rsquo;s console within Aria Operations (a functionality not native to the product), highlighted the collaborative spirit of the team. Having previously created a similar dashboard as a customer, I offered to replicate it in my lab area for Brock, emphasizing the team&rsquo;s culture of sharing existing solutions and code. Brock liked what I created in my lab and suggested that we share this knowledge with the vCommunity by creating a Blog, recognizing the potential interest from other customers in implementing such a solution. This shows the team&rsquo;s commitment to collaboration and knowledge sharing.</p>
<p>Please explore the blog post to witness the exceptional outcomes a great team can achieve. Enjoy!</p>
<hr>
<figure><a class="lightgallery" href="/aria-operations-text-display-widget-vmrc/vmrc.gif" title="/aria-operations-text-display-widget-vmrc/vmrc.gif" data-thumbnail="/aria-operations-text-display-widget-vmrc/vmrc.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links below.</p>
<hr>
<h6 id="links-to-resources-for-this-blog-post">Links to resources for this Blog Post:</h6>
<ul>
<li><a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Brock Peterson Blog Post | Launch VMRC from Aria Operations</a>.</li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/vmrc" target="_blank" rel="noopener noreffer ">Source code used for this Blog Post.</a></li>
</ul>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Schedule RVTools Data Export</title>
    <link>https://www.vcrocs.info/schedule-rvtools/</link>
    <pubDate>Thu, 08 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/schedule-rvtools/</guid>
    <description><![CDATA[<p><strong>Export RVTools xlsx Files Everyday</strong></p>
<hr>
<hr>
<h6 id="powershell-code">PowerShell Code</h6>
<p>I like to create a Scheduled Task in vRealize Orchestrator to create RVTools files everyday.  Here is a sample PowerShell script that could be used. The script is also on a 7 day rotation of files and automatically deletes old files. On the 1st of every month a file will also be created for history that is not deleted.</p>
<p>Click arrow to expand the PowerShell Code:<br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Script to create RVTools files and delete files older than 7 Days.</span>
</span></span><span class="line"><span class="cl"><span class="c"># Also creates an Archive RVTools file on the first of every Month.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Set parameters for RVTools export ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vCenter</span>      <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$User</span>         <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Password</span>     <span class="p">=</span> <span class="s2">&#34;_RVToolsV2PWDe9yqxNV-HACKME-w5gkyxsCh5R1Kbg+hVYiKo=&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileLocation</span> <span class="p">=</span> <span class="s2">&#34;C:\RVTools&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileArchive</span>  <span class="p">=</span> <span class="s2">&#34;C:\RVTools\Archive&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileName</span>     <span class="p">=</span>  <span class="p">(</span><span class="nb">Get-Date</span> <span class="n">-Format</span> <span class="s2">&#34;MM-dd-yyyy-hh-mm&#34;</span><span class="p">)</span> <span class="p">+</span> <span class="s1">&#39;-&#39;</span> <span class="p">+</span> <span class="nv">$vCenter</span> <span class="p">+</span> <span class="s1">&#39;.xlsx&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$filePath</span>     <span class="p">=</span> <span class="s2">&#34;C:\Program Files (x86)\Robware\RVTools\RVtools.exe&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Starting Process to create an RVTools xlsx file...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Creating xlsx file for vCenter &#39;</span> <span class="p">+</span> <span class="nv">$vCenter</span> <span class="p">+</span> <span class="s1">&#39;...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$Password</span><span class="s2"> -s </span><span class="nv">$vCenter</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$fileLocation</span><span class="s2"> -f </span><span class="nv">$fileName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$Process</span><span class="p">.</span><span class="py">ExitCode</span> <span class="o">-eq</span> <span class="mf">-1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Error: Export failed! RVTools returned exitcode -1, probably a connection error! Script is stopped&#34;</span> <span class="n">-ForegroundColor</span> <span class="n">Red</span>
</span></span><span class="line"><span class="cl">    <span class="n">exit</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [Create a RVTools file that will not be deleted for history on the 1st of every month ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$DayofMonth</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-Format</span> <span class="s2">&#34;dd&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$DayofMonth</span> <span class="o">-eq</span> <span class="s1">&#39;01&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Day of the Month: &#34;</span> <span class="p">+</span> <span class="nv">$DayofMonth</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Starting Process to create an RVTools xlsx file for Archive that will not be deleted...&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$Password</span><span class="s2"> -s </span><span class="nv">$vCenter</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$fileArchive</span><span class="s2"> -f </span><span class="nv">$fileName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Clean up old RVTools Files ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Removing all XLSX files older than 7 days...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Delete all RVTools Files in older than 7 day(s) ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Daysback</span> <span class="p">=</span> <span class="s2">&#34;-7&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CurrentDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$DatetoDelete</span> <span class="p">=</span> <span class="nv">$CurrentDate</span><span class="p">.</span><span class="py">AddDays</span><span class="p">(</span><span class="nv">$Daysback</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Get-ChildItem</span> <span class="nv">$fileLocation</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">LastWriteTime</span> <span class="o">-lt</span> <span class="nv">$DatetoDelete</span> <span class="p">}</span> <span class="p">|</span> <span class="nb">Remove-Item</span> <span class="n">-Confirm:</span><span class="vm">$false</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm"># ----- [ Sample code to change a file last write date/time to test code for deleting files older than 7 days ] -----
</span></span></span><span class="line"><span class="cl"><span class="cm">$fileToChange = $fileLocation + &#39;\&#39; + $fileName
</span></span></span><span class="line"><span class="cl"><span class="cm">$fileToChange
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">(Get-Item $fileToChange).LastWriteTime = Get-Date &#34;02/01/2024 01:00&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<blockquote>
<p>Blog Updated: 02/08/2024<br>
Changes: Updated script to work with newest version of RVTools</p>
</blockquote>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | Use vCenter TAGS/Custom Groups/Super Metrics to get VM Details</title>
    <link>https://www.vcrocs.info/aria-operations-vcenter-tags-vm-info/</link>
    <pubDate>Fri, 26 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-vcenter-tags-vm-info/</guid>
    <description><![CDATA[<p><strong>How to group VMs together in VMware Aria Operations using vCenter TAGs and show resource usage totals across all VMs within the custom group</strong></p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>VMware Aria Operations 8.14.1 was used for this Blog Post. When new versions of VMware Aria Operations are released, the code or process may need to be changed.</p>
<hr>
<p>I was recently asked how to create a VMware Aria Operations Dashboard that groups VMs together by vCenter TAGs. IE: If there is 100 VMs in vCenter that have a TAG Named &ldquo;Servers-DB&rdquo;, they wanted to see the CPU, Memory, Disk Space, and Critical Alerts Totals for all VMs with that vCenter TAG. They have many vCenter TAGs and each TAG would be on a single line with only Total Values shown.</p>
<p>See the screenshot that shows the final Dashboard Design.</p>
<hr>
<h6 id="dashboard-design">Dashboard Design</h6>
<ul>
<li>The left side of the Dashboard shows all the Custom Groups that were created based on vCenter TAGs. The values shown on each row are the Metric Totals for all VMs that have the same vCenter TAG.</li>
<li>The left side is a View so that all the data can be exported as a CSV file.</li>
<li>The right side of the Dashboard is a view that shows the VM details. The right side is optional. I added the right side to show that the Super Metrics were calculating the metric totals correct.</li>
<li>Each metric shown requires a Super Metric to Sum the values within the Custom Group.</li>
<li>Each row shown requires a Custom Group to define which vCenter TAG to use.</li>
<li>Watch the videos below to see the details on how to create this Dashboard.</li>
</ul>
<hr>
<h6 id="screen-shot-of-dashboard">Screen Shot of Dashboard</h6>
<figure><a class="lightgallery" href="/aria-operations-vcenter-tags-vm-info/vm-info-vcenter-tags-02.png" title="/aria-operations-vcenter-tags-vm-info/vm-info-vcenter-tags-02.png" data-thumbnail="/aria-operations-vcenter-tags-vm-info/vm-info-vcenter-tags-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>To group VMs together in VMware Aria Operations based on vCenter TAGs, you use Custom Groups. Custom Groups have a group type. I created (2) new Group Types for this Dashboard. I named one Group Type &ldquo;Applications&rdquo; and one Group Type &ldquo;All-APPs&rdquo;. &ldquo;All-APPs&rdquo; is the Parent Group and &ldquo;Applications&rdquo; is the child group.</p>
<hr>
<p>Watch video to see how to define VMware Aria Operations Custom Group membership based on a vCenter TAG Name:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/gt099N3DpXU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>To show the Metric Totals of each Custom Group, we created Super Metrics to sum the value of all the VMs within the Custom Group. If you were only using one vCenter TAG and one Custom Group, you would not need to do this. We wanted to show the Metric Values of a 100+ vCenter TAGs and each vCenter TAG would be on a separate line. That is why we created the Super Metrics.</p>
<p>Watch video to see how to create VMware Aria Operations Super Metrics to total Virtual Machine Metrics:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/MpyVlj4whvc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>To show all the Custom Groups names and Super Metric values we created a View. Main reason to create the View was to be able to export the data as a CSV file.</p>
<p>Watch video to see how to create VMware Aria Operations View that shows the Custom Groups with VM metric totals:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/mqODM3-6LCA" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<h6 id="lessons-learned-and-acknowledgements">Lessons Learned and acknowledgements:</h6>
<ul>
<li>Thank You to <a href="https://www.BrockPeterson.com" target="_blank" rel="noopener noreffer ">Brock Peterson</a> on providing input on how to get metric value totals by using Super Metrics.</li>
<li>Thank You to my customer for the challenging question. I did not create a Dashboard like this before. I am glad we were able to create a Dashboard that answered your request and I am able to share the technique with the vCommunity.</li>
<li>You CAN group VMs in VMware Aria Operations together by using vCenter TAGs and total the Metric Values on a single line within a List View.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
</channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>PowerShell - Tag - vCROCS</title>
        <link>https://www.vcrocs.info/tags/powershell/</link>
        <description>PowerShell - Tag - vCROCS</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</managingEditor>
            <webMaster>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.vcrocs.info/tags/powershell/" rel="self" type="application/rss+xml" /><item>
    <title>Automation Code Creation with ollama</title>
    <link>https://www.vcrocs.info/ollama/</link>
    <pubDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/ollama/</guid>
    <description><![CDATA[<p><strong>My review on using ollama to help create code for Automation</strong></p>
<hr>
<blockquote>
<p>&ldquo;By harnessing the power of AI, I simplify my coding workflow, freeing up time to focus on creating blog posts that resonate with the vCommunity. With the help of AI, my writing becomes more precise, more creative, and more impactful.” - Dale Hassinger</p>
</blockquote>
<hr>
<h6 id="ollama">ollama</h6>
<figure><a class="lightgallery" href="/ollama/ollama-01.png" title="/ollama/ollama-01.png" data-thumbnail="/ollama/ollama-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<h6 id="ollama-web-site-link">ollama Web Site Link:</h6>
<p><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Link to ollama web site.</a></p>
<p>Building on my experience with ChatGPT, I decided to explore Ollama Local on my trusty Apple MacBook Pro M1. As a user-friendly AI enthusiast, I was eager to see how seamless the installation process would be. To my delight, setting up Ollama Local on Mac is incredibly straightforward.</p>
<p>To get started, simply head to the <a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Ollama website</a> and download the application as a zip file. Expand the contents of the archive and copy the Ollama Application file into your Applications folder. Double-clicking the icon will launch the app in no time – it&rsquo;s that easy!</p>
<p>For this review, I&rsquo;ll be using the Llama3 Large Language Model (LLM) to demonstrate Ollama Local&rsquo;s capabilities. The first time you run the application, it will automatically download the necessary LLM files for you. Like I said, very easy to use.</p>
<p>With Ollama Local up and running, let&rsquo;s dive into its features and see what kind of AI-powered magic it can create.</p>
<p>Go to a terminal and type &ldquo;ollama run llama3&rdquo; to get started.</p>
<hr>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ollama run llama3</span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-02.png" title="/ollama/ollama-02.png" data-thumbnail="/ollama/ollama-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="ollama-models">ollama Models:</h6>
<p><strong>There are many models to pick from to use with ollama&hellip;</strong></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-03.gif" title="/ollama/ollama-03.gif" data-thumbnail="/ollama/ollama-03.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Once you&rsquo;ve chosen the desired model, the web site will provide you with the necessary command prompts to get started. No need to dig through complex documentation or struggle with unfamiliar code - just follow the straightforward instructions and you&rsquo;re good to go!</p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-04.gif" title="/ollama/ollama-04.gif" data-thumbnail="/ollama/ollama-04.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="how-to-run-ollama-from-cli">How to run ollama from cli:</h6>
<p><strong>Here is a quick video to show how to get started from the CLI</strong></p>
<ul>
<li>Run command to start ollama</li>
<li>Ask a question and see the results</li>
<li>type /bye to exit ollama</li>
</ul>
<p>Hands-on experience with this tool? A breeze! Not only is it incredibly user-friendly, but the performance on my laptop has been impressive too. And what really stands out is the speed at which responses are delivered - no waiting around here! The unedited video itself
is a testament to its fast processing capabilities.</p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-05.gif" title="/ollama/ollama-05.gif" data-thumbnail="/ollama/ollama-05.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ollama run llama3
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; Who Created PowerShell
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; /bye</span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="ollama-real-world-examples">ollama &ldquo;Real World&rdquo; Examples:</h6>
<p>Now I will show some examples of how I use ollama everyday for coding and writing. They are my main uses cases for AI.</p>
<hr>
<h6 id="ollama-powershell-function">ollama PowerShell Function</h6>
<p>In my previous blogs, I&rsquo;ve highlighted the versatility of PowerShell in automating various tasks. In this blog, I&rsquo;ll show how to harness the power of PowerShell to interact with AI assistants like Ollama. To start, I created a custom function that enables you to ask Ollama questions directly from the PowerShell command line. Here&rsquo;s the sample code to get you started:</p>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Function to ask Ollama</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">ask-ollama</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Code to run when the function is called</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span><span class="nb">Parameter</span><span class="p">(</span><span class="na">Mandatory</span><span class="p">=</span><span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">      <span class="nv">$question</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="c"># Set request body</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$requestBody</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">model</span> <span class="p">=</span> <span class="s2">&#34;llama3&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">prompt</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$question</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">stream</span> <span class="p">=</span> <span class="vm">$false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># Set headers</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$headers</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">=</span><span class="s1">&#39;application/json&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$Body</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$requestBody</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># Send the request</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$request</span> <span class="p">=</span><span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s1">&#39;http://localhost:11434/api/generate&#39;</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$response</span> <span class="p">=</span><span class="nv">$request</span><span class="p">.</span><span class="py">Content</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Print response to console</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="nv">$response</span><span class="p">.</span><span class="py">response</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Copy response to clipboard</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Set-Clipboard</span> <span class="n">-Value</span> <span class="nv">$response</span><span class="p">.</span><span class="py">response</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Example Questions -----</span>
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;What is PowerCLI&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Create a PowerShell script to connect to a vCenter, Get a list of all VMs with a Snap&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Create a Salt State file to stop and disable a service with a name of Spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Show me how to copy a powershell variable value to the clipboard&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<p>If you are a PowerShell enthusiast, you&rsquo;re probably accustomed to the flexibility of functions within your scripts. Feel free to adapt this example to your own workflow and coding style, regardless of whether you prefer to use it as is or modify it to fit your needs.</p>
<hr>
<h6 id="ollama-prompt-engineering-examples">ollama Prompt Engineering Examples:</h6>
<h6 id="set-the-role-to-start">Set the &lsquo;Role&rsquo; to start:</h6>
<p>One of my habits when working with ollama, or ChatGPT, is setting a specific &lsquo;role&rsquo; for our conversations. By defining a clear context or persona, I&rsquo;ve found that I&rsquo;m able to receive more effective and insightful responses from the AI. This approach has been refined over time through experimentation and exploration of the product&rsquo;s capabilities, yielding better results and a more productive dialogue.</p>
<ul>
<li>Act as a PowerShell SME</li>
<li>Act as a PowerCLI SME</li>
<li>Act as a VMware SME</li>
<li>Act as a vRealize SME</li>
<li>Act as a Javascript SME to work with VMware Orchestrator</li>
<li>Act as a Technology Blogger</li>
</ul>
<hr>
<h6 id="questions-to-generate-code">Questions to generate code:</h6>
<ul>
<li>PowerCLI:
<ul>
<li>Act as a PowerCLI SME</li>
<li>Create a script to connect to a VMware vCenter. username is <a href="mailto:administrator@vsphere.local" rel="">administrator@vsphere.local</a>. password is Password123. vCenter name is vcenter8x.corp.local. List all VMs that have a snap. Export the list of VMs with a snap to c:\reports\vms-with-snaps.csv.</li>
</ul>
</li>
</ul>
<p><strong>Unedited Code Returned:</strong></p>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Set the connection settings</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcenter</span> <span class="p">=</span> <span class="s2">&#34;vcenter8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$username</span> <span class="p">=</span> <span class="s2">&#34;administrator@vsphere.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span> <span class="p">=</span> <span class="s2">&#34;Password123&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Connect to the vCenter using PowerCLI</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcenter</span> <span class="n">-User</span> <span class="nv">$username</span> <span class="n">-Password</span> <span class="nv">$password</span> <span class="n">-ErrorAction</span> <span class="n">Stop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Get a list of all VMs that have a snapshot</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmsWithSnaps</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-VM</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="n">HasSnapshot</span><span class="p">}</span> <span class="p">|</span> <span class="nb">ForEach-Object</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vm</span> <span class="p">=</span> <span class="nv">$_</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Found snapshot for VM: </span><span class="nv">$vm</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmsWithSnaps</span> <span class="p">+=</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Export the list of VMs with a snap to a CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmsWithSnaps</span> <span class="p">|</span> <span class="nb">Export-Csv</span> <span class="n">-Path</span> <span class="s2">&#34;C:\reports\vms-with-snaps.csv&#34;</span> <span class="n">-NoTypeInformation</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Disconnect from the vCenter</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl"><span class="p">```</span>
</span></span><span class="line"><span class="cl"><span class="n">Let</span> <span class="n">me</span> <span class="n">explain</span> <span class="n">what</span> <span class="n">each</span> <span class="n">part</span> <span class="n">of</span> <span class="n">the</span> <span class="n">script</span> <span class="n">does</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mf">1</span><span class="p">.</span> <span class="n">The</span> <span class="n">first</span> <span class="n">section</span> <span class="n">sets</span> <span class="n">the</span> <span class="n">connection</span> <span class="n">settings</span><span class="err">:</span> <span class="p">`</span><span class="n">vcenter</span><span class="p">`,</span> <span class="p">`</span><span class="n">username</span><span class="p">`,</span> <span class="n">and</span> <span class="p">`</span><span class="n">password</span><span class="p">`.</span>
</span></span><span class="line"><span class="cl"><span class="mf">2</span><span class="p">.</span> <span class="n">The</span> <span class="p">`</span><span class="nb">Connect-VIServer</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">connects</span> <span class="n">to</span> <span class="n">your</span> <span class="n">VMware</span> <span class="n">vCenter</span> <span class="n">using</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">credentials</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="mf">3</span><span class="p">.</span> <span class="n">The</span> <span class="p">`</span><span class="nb">Get-VM</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">retrieves</span> <span class="n">a</span> <span class="n">list</span> <span class="n">of</span> <span class="n">all</span> <span class="n">virtual</span> <span class="n">machines</span> <span class="k">in</span> <span class="n">the</span> <span class="n">vCenter</span><span class="p">.</span> <span class="n">We</span> <span class="n">then</span> <span class="n">use</span> <span class="n">the</span> <span class="p">`</span><span class="nb">Where-Object</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">to</span> <span class="kd">filter</span><span class="w"> </span><span class="nb">this</span> <span class="n">list</span> <span class="n">and</span> 
</span></span><span class="line"><span class="cl"><span class="n">only</span> <span class="n">include</span> <span class="n">VMs</span> <span class="n">that</span> <span class="n">have</span> <span class="n">at</span> <span class="n">least</span> <span class="n">one</span> <span class="n">snapshot</span> <span class="p">(`$</span><span class="n">_</span><span class="p">.</span><span class="n">HasSnapshot</span><span class="p">`).</span>
</span></span><span class="line"><span class="cl"><span class="mf">4</span><span class="p">.</span> <span class="n">We</span> <span class="n">loop</span> <span class="n">through</span> <span class="n">each</span> <span class="n">VM</span> <span class="n">that</span> <span class="n">has</span> <span class="n">a</span> <span class="n">snapshot</span> <span class="n">using</span> <span class="n">a</span> <span class="p">`</span><span class="nb">ForEach-Object</span><span class="p">`</span> <span class="n">cmdlet</span><span class="p">,</span> <span class="n">and</span> <span class="n">add</span> <span class="n">its</span> <span class="n">name</span> <span class="n">to</span> <span class="n">an</span> <span class="n">array</span> <span class="p">`$</span><span class="n">vmsWithSnaps</span><span class="p">`.</span>
</span></span><span class="line"><span class="cl"><span class="mf">5</span><span class="p">.</span> <span class="n">The</span> <span class="n">final</span> <span class="n">section</span> <span class="n">exports</span> <span class="n">the</span> <span class="n">array</span> <span class="n">of</span> <span class="n">VM</span> <span class="n">names</span> <span class="n">to</span> <span class="n">a</span> <span class="n">CSV</span> <span class="n">file</span> <span class="n">named</span> <span class="p">`</span><span class="nb">vms-with</span><span class="n">-snaps</span><span class="p">.</span><span class="n">csv</span><span class="p">`</span> <span class="k">in</span> <span class="n">the</span> <span class="p">`</span><span class="n">C:</span><span class="p">\</span><span class="n">reports</span><span class="p">`</span> <span class="n">directory</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="mf">6</span><span class="p">.</span> <span class="k">Finally</span><span class="p">,</span> <span class="n">we</span> <span class="n">disconnect</span> <span class="n">from</span> <span class="n">the</span> <span class="n">vCenter</span> <span class="n">using</span> <span class="n">the</span> <span class="p">`</span><span class="nb">Disconnect-VIServer</span><span class="p">`</span> <span class="n">cmdlet</span><span class="p">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Save</span> <span class="n">this</span> <span class="n">script</span> <span class="n">as</span> <span class="n">a</span> <span class="n">PowerShell</span> <span class="n">file</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="py">g</span><span class="p">.,</span> <span class="p">`</span><span class="n">vms_with_snaps</span><span class="p">.</span><span class="n">ps1</span><span class="p">`)</span> <span class="n">and</span> <span class="n">run</span> <span class="n">it</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">list</span> <span class="n">of</span> <span class="n">VMs</span> <span class="n">with</span> <span class="n">snapshots</span> <span class="n">exported</span> <span class="n">to</span> <span class="n">the</span> <span class="n">specified</span> 
</span></span><span class="line"><span class="cl"><span class="n">CSV</span> <span class="n">file</span><span class="p">!</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-07.gif" title="/ollama/ollama-07.gif" data-thumbnail="/ollama/ollama-07.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Code questions that I have used:</strong></p>
<ul>
<li>Convert this curl command to PowerShell</li>
<li>Create a html file that does&hellip; Amazing how advanced the code will be for a complete web page. Include a table that I can sort the columns, select the number of rows and have a search within the table. Awesome!</li>
<li>Convert this Python to PowerShell or convert this PowerShell to Python</li>
<li>Javascript that can be used with VMware Orchestrator Actions and Workflows</li>
<li>SQL commands</li>
<li>Linux commands</li>
<li>vi and nano help</li>
<li>salt state files</li>
</ul>
<hr>
<h6 id="questions-to-help-with-writing">Questions to help with writing:</h6>
<ul>
<li>My writing process in commands:
<ul>
<li>Act as a Technology Blogger</li>
<li>Reword &ldquo;Paste what I wrote within double quotes&rdquo;</li>
</ul>
</li>
<li>See what the results look like. If I want a second example I will type:
<ul>
<li>&ldquo;again&rdquo; or</li>
<li>&ldquo;another example&rdquo;</li>
</ul>
</li>
<li>For my writing style I will use this command a lot:
<ul>
<li>use less adjectives</li>
</ul>
</li>
</ul>
<p>Data for LLama3 is up to the year 2022. When asking VMware Aria questions I will still use vRealize a lot because of the name change.</p>
<ul>
<li>Other writing example questions:
<ul>
<li>I want to create a Technology presentation description &ldquo;Topic VMware vRealize Operations with a focus on Dashboards&rdquo;</li>
</ul>
</li>
</ul>
<hr>
<h6 id="ollama-commands">ollama commands:</h6>
<p>Two commands I use the most:</p>
<ul>
<li>&ldquo;ollama run llama3&rdquo; to start ollama</li>
<li>&ldquo;/bye&rdquo; to exit ollama</li>
</ul>
<figure><a class="lightgallery" href="/ollama/ollama-06.png" title="/ollama/ollama-06.png" data-thumbnail="/ollama/ollama-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="commonsense-rules">Commonsense Rules:</h6>
<p><strong>Rules I use when working with AI/LLMs:</strong></p>
<ul>
<li>Never use any code generated in a production environment without testing in a lab first</li>
<li>Always understand the code that is generated before even using in a lab</li>
<li>Read the text that is generated before using</li>
<li>Understand that AI/LLMs are to help you, not do the work for you.</li>
<li>You are responsible for anything generated that you use.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>ollama and llama3 are both available at no cost today (04/2024).</li>
<li>I pay $20 per month for ChatGPT. You get more with ChatGPT but ollama does a good job for a way to have a local LLM option.</li>
</ul>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">ollama web site.</a></li>
</ul>
<hr>
<h6 id="product-versions-used-for-blog-post">Product Versions used for Blog Post:</h6>
<ul>
<li>ollama: 0.1.32 | Use this command at cli to show ollama version &ldquo;ollama -v&rdquo;</li>
<li>LLM: llama3</li>
</ul>
<hr>
<p><span style="font-size: 16px; color: red; font-weight: bold;">DO NOT EVER USE ANY CODE FROM A BLOG IN A PRODUCTION ENVIRONMENT! PLEASE TEST ANY CODE IN THIS BLOG IN A LAB!</span></p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | VM console access with VMRC</title>
    <link>https://www.vcrocs.info/aria-operations-text-display-widget-vmrc/</link>
    <pubDate>Sun, 18 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-text-display-widget-vmrc/</guid>
    <description><![CDATA[<p><strong>How to use the VMware Aria Operations and a Text Display Widget to launch VMRC</strong></p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>I recently had the opportunity to work together on a Blog Post, <a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Launch VMRC from Aria Operations</a>, with <a href="https://www.brockpeterson.com/" target="_blank" rel="noopener noreffer ">Brock Peterson</a>.</p>
<hr>
<ul>
<li><a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Link to Blog Post</a></li>
</ul>
<hr>
<p>During my time as a VMware customer, I had the opportunity to connect with Brock through my account executive, <a href="https://www.linkedin.com/in/stevelieberson/" target="_blank" rel="noopener noreffer ">Steve Lieberson</a>. Whenever I sought an in-depth understanding of Aria Operations, Steve would arrange a session with Brock. These interactions left me aspiring for a similar position at VMware. My contributions to VMware included participating in customer reference calls, where I eagerly shared my expertise in the Aria Suite with Healthcare Organizations, aiding them in embarking on their journey in Automation, Monitoring, or Logging. Eventually, I secured a role at VMware, allowing me to collaborate daily with Brock and the incredible VMware Cloud Foundation Specialists team, focusing on Automation, Monitoring, and Logging. The camaraderie and collective expertise of this team is truly remarkable. Working within a team that boasts a variety of role models is an great experience.</p>
<p>The blog post begins with an intriguing scenario where Brock, responding to a customer&rsquo;s query about launching the VMRC client to display a VM&rsquo;s console within Aria Operations (a functionality not native to the product), highlighted the collaborative spirit of the team. Having previously created a similar dashboard as a customer, I offered to replicate it in my lab area for Brock, emphasizing the team&rsquo;s culture of sharing existing solutions and code. Brock liked what I created in my lab and suggested that we share this knowledge with the vCommunity by creating a Blog, recognizing the potential interest from other customers in implementing such a solution. This shows the team&rsquo;s commitment to collaboration and knowledge sharing.</p>
<p>Please explore the blog post to witness the exceptional outcomes a great team can achieve. Enjoy!</p>
<hr>
<figure><a class="lightgallery" href="/aria-operations-text-display-widget-vmrc/vmrc.gif" title="/aria-operations-text-display-widget-vmrc/vmrc.gif" data-thumbnail="/aria-operations-text-display-widget-vmrc/vmrc.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links below.</p>
<hr>
<h6 id="links-to-resources-for-this-blog-post">Links to resources for this Blog Post:</h6>
<ul>
<li><a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Brock Peterson Blog Post | Launch VMRC from Aria Operations</a>.</li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/vmrc" target="_blank" rel="noopener noreffer ">Source code used for this Blog Post.</a></li>
</ul>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Schedule RVTools Data Export</title>
    <link>https://www.vcrocs.info/schedule-rvtools/</link>
    <pubDate>Thu, 08 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/schedule-rvtools/</guid>
    <description><![CDATA[<p><strong>Export RVTools xlsx Files Everyday</strong></p>
<hr>
<hr>
<h6 id="powershell-code">PowerShell Code</h6>
<p>I like to create a Scheduled Task in vRealize Orchestrator to create RVTools files everyday.  Here is a sample PowerShell script that could be used. The script is also on a 7 day rotation of files and automatically deletes old files. On the 1st of every month a file will also be created for history that is not deleted.</p>
<p>Click arrow to expand the PowerShell Code:<br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Script to create RVTools files and delete files older than 7 Days.</span>
</span></span><span class="line"><span class="cl"><span class="c"># Also creates an Archive RVTools file on the first of every Month.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Set parameters for RVTools export ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vCenter</span>      <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$User</span>         <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Password</span>     <span class="p">=</span> <span class="s2">&#34;_RVToolsV2PWDe9yqxNV-HACKME-w5gkyxsCh5R1Kbg+hVYiKo=&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileLocation</span> <span class="p">=</span> <span class="s2">&#34;C:\RVTools&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileArchive</span>  <span class="p">=</span> <span class="s2">&#34;C:\RVTools\Archive&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileName</span>     <span class="p">=</span>  <span class="p">(</span><span class="nb">Get-Date</span> <span class="n">-Format</span> <span class="s2">&#34;MM-dd-yyyy-hh-mm&#34;</span><span class="p">)</span> <span class="p">+</span> <span class="s1">&#39;-&#39;</span> <span class="p">+</span> <span class="nv">$vCenter</span> <span class="p">+</span> <span class="s1">&#39;.xlsx&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$filePath</span>     <span class="p">=</span> <span class="s2">&#34;C:\Program Files (x86)\Robware\RVTools\RVtools.exe&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Starting Process to create an RVTools xlsx file...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Creating xlsx file for vCenter &#39;</span> <span class="p">+</span> <span class="nv">$vCenter</span> <span class="p">+</span> <span class="s1">&#39;...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$Password</span><span class="s2"> -s </span><span class="nv">$vCenter</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$fileLocation</span><span class="s2"> -f </span><span class="nv">$fileName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$Process</span><span class="p">.</span><span class="py">ExitCode</span> <span class="o">-eq</span> <span class="mf">-1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Error: Export failed! RVTools returned exitcode -1, probably a connection error! Script is stopped&#34;</span> <span class="n">-ForegroundColor</span> <span class="n">Red</span>
</span></span><span class="line"><span class="cl">    <span class="n">exit</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [Create a RVTools file that will not be deleted for history on the 1st of every month ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$DayofMonth</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-Format</span> <span class="s2">&#34;dd&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$DayofMonth</span> <span class="o">-eq</span> <span class="s1">&#39;01&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Day of the Month: &#34;</span> <span class="p">+</span> <span class="nv">$DayofMonth</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Starting Process to create an RVTools xlsx file for Archive that will not be deleted...&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$Password</span><span class="s2"> -s </span><span class="nv">$vCenter</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$fileArchive</span><span class="s2"> -f </span><span class="nv">$fileName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Clean up old RVTools Files ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Removing all XLSX files older than 7 days...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Delete all RVTools Files in older than 7 day(s) ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Daysback</span> <span class="p">=</span> <span class="s2">&#34;-7&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CurrentDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$DatetoDelete</span> <span class="p">=</span> <span class="nv">$CurrentDate</span><span class="p">.</span><span class="py">AddDays</span><span class="p">(</span><span class="nv">$Daysback</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Get-ChildItem</span> <span class="nv">$fileLocation</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">LastWriteTime</span> <span class="o">-lt</span> <span class="nv">$DatetoDelete</span> <span class="p">}</span> <span class="p">|</span> <span class="nb">Remove-Item</span> <span class="n">-Confirm:</span><span class="vm">$false</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm"># ----- [ Sample code to change a file last write date/time to test code for deleting files older than 7 days ] -----
</span></span></span><span class="line"><span class="cl"><span class="cm">$fileToChange = $fileLocation + &#39;\&#39; + $fileName
</span></span></span><span class="line"><span class="cl"><span class="cm">$fileToChange
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">(Get-Item $fileToChange).LastWriteTime = Get-Date &#34;02/01/2024 01:00&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<blockquote>
<p>Blog Updated: 02/08/2024<br>
Changes: Updated script to work with newest version of RVTools</p>
</blockquote>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | Servicenow | Management Pack</title>
    <link>https://www.vcrocs.info/aria-operations-servicenow-mp-cmdb/</link>
    <pubDate>Fri, 22 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-servicenow-mp-cmdb/</guid>
    <description><![CDATA[<p><strong>How to use the VMware Aria Operations | Servicenow | Management Pack to add information to the Servicenow CMDB</strong></p>
<hr>
<h6 id="blog-update">Blog Update:</h6>
<p>I presented the content from this Blog at a <strong>TECH BYTES</strong> session on February 9th, 2024. 150 people registered for the webinar and there was a lot of interest with the ServiceNow Management Pack (MP). We received good feedback from the attendees on the capabilities of the MP.</p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>VMware Aria Operations 8.14.1 and Servicenow MP (Management Pack) 9.0 was used for this Blog Post. When new versions of VMware Aria Operations or the MP are released, the code or process may need to be changed.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links within the blog to access the code.</p>
<hr>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-01.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-01.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>I wanted to share how I setup the Servicenow Management Pack in my lab to update a Servicenow CMDB (Configuration Management DataBase). The VMware Documentation covers the process well. I wanted to cover a couple of steps to help make the process easier.</p>
<hr>
<p>I followed the instructions exactly as listed in the PDF link below.</p>
<p><a href="/aria-operations-servicenow-mp-cmdb/servicenow-cmdb-sync-only-configuration.pdf" rel="">Instructions to setup Servicenow to allow the MP to send data to CMDB | Click Here to View PDF</a></p>
<p>For the Servicenow user permissions I did the following:</p>
<ul>
<li>Created a Servicenow user named LPU (Least Privilege User)</li>
<li>Created a Servicenow Role and named it vROPS_MP</li>
<li>Added the user to the role.</li>
<li>Added the role to all the Servicenow ACLs listed in the document. If there were more than one ACL with the same name with read permissions, I used the newest ACL. I did not add to all ACLs with the same name.</li>
<li>I gave the role “read” and “edit_ci_relations” to the tables listed in the document.</li>
<li>I used the moid_populate_only.json config that is OOTB (Out of the Box) with no changes to start to make sure everything was working correct.</li>
</ul>
<p>When I added the account to the management pack in Aria Operations, it did a good job to let me know if everything was set up correctly in Servicenow and if the json config file was setup correct. I had a permission wrong and it showed me what was wrong when I did a Validate Connection. I fixed the permission like it showed me and then everything worked. My lab data is now showing up in Servicenow CMDB.</p>
<hr>
<p>Management Pack Config screen:
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-05.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-05.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<p>Management Pack Config screen (Validate Connection | Failed). Shows the field name is incorrect:
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-06.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-06.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<p>Management Pack Config screen (Validate Connection | Success):
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-07.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-07.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p>OOTB, the config files can be found here on the VMware Aria Operations Appliance:<br>
The config file will go here: /usr/lib/vmware-vcops/user/plugins/inbound/servicenow_adapter3/work<br>
The templates are located at: /usr/lib/vmware-vcops/user/plugins/inbound/servicenow_adapter3/conf/config_samples</p>
<hr>
<p>Here is the moid_populate_only.json with no changes.</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cmdbSync&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;syncMode&#34;</span><span class="p">:</span> <span class="s2">&#34;POPULATE_ONLY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;objectIdentifierSource&#34;</span><span class="p">:</span> <span class="s2">&#34;MOID&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>After I verified everything was working with OOTB settings, I wanted to add some additional data to the Servicenow CMDB. The VM (virtual machine) IP address is not sent to Servicenow CMDB with default settings. Here is the json file I have in my lab to  send VM IP and Host CPU info.</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cmdbSync&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;syncMode&#34;</span><span class="p">:</span> <span class="s2">&#34;POPULATE_ONLY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;objectIdentifierSource&#34;</span><span class="p">:</span> <span class="s2">&#34;MOID&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;additionalColumns&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;builtInHostSystem&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;cmdbColumn&#34;</span><span class="p">:</span> <span class="s2">&#34;cpu_name&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;vropsType&#34;</span><span class="p">:</span> <span class="s2">&#34;PROPERTY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;vropsField&#34;</span><span class="p">:</span> <span class="s2">&#34;cpu|cpuModel&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;builtInVirtualMachine&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;cmdbColumn&#34;</span><span class="p">:</span> <span class="s2">&#34;guest_os_fullname&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsType&#34;</span><span class="p">:</span> <span class="s2">&#34;PROPERTY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsField&#34;</span><span class="p">:</span> <span class="s2">&#34;summary|guest|fullName&#34;</span>
</span></span><span class="line"><span class="cl">          <span class="p">},</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;cmdbColumn&#34;</span><span class="p">:</span> <span class="s2">&#34;ip_address&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsType&#34;</span><span class="p">:</span> <span class="s2">&#34;PROPERTY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsField&#34;</span><span class="p">:</span> <span class="s2">&#34;summary|guest|ipAddress&#34;</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>In the VMware documentation it says to use the vropsField name in the json config file but I did not see where it told you how to get the vropsField name. Here are some examples on how to get the vROPS field names.</p>
<hr>
<p>vROPS VM Field Names available (PowerShell Script):</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$opsURL</span>      <span class="p">=</span> <span class="s2">&#34;https://vao-ent.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsUsername</span> <span class="p">=</span> <span class="s2">&#34;admin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsPassword</span> <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmName</span>      <span class="p">=</span> <span class="s2">&#34;LINUX-U-170&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$authSource</span>  <span class="p">=</span> <span class="s2">&#34;local&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Aria Operations token</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/auth/token/acquire?_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bodyHashtable</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">username</span> <span class="p">=</span> <span class="nv">$opsUsername</span>
</span></span><span class="line"><span class="cl">    <span class="n">authSource</span> <span class="p">=</span> <span class="nv">$authSource</span>
</span></span><span class="line"><span class="cl">    <span class="n">password</span> <span class="p">=</span> <span class="nv">$opsPassword</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Convert the hashtable to a JSON string</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$bodyHashtable</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$token</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Content-Type&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-Body</span> <span class="nv">$body</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$token.token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$authorization</span> <span class="p">=</span> <span class="s2">&#34;OpsToken &#34;</span> <span class="p">+</span> <span class="nv">$token</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl"><span class="c">#$authorization</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get the VM Operations identifier</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri = &#34;$opsURL/suite-api/api/resources?maintenanceScheduleId=&amp;name=$vmName&amp;page=0&amp;pageSize=1000&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources?name=</span><span class="nv">$vmName</span><span class="s2">&amp;page=0&amp;pageSize=1000&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$identifier</span>
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nv">$identifier</span><span class="p">.</span><span class="py">resourceList</span>
</span></span><span class="line"><span class="cl"><span class="nv">$json</span> <span class="p">=</span> <span class="nv">$identifier</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl"><span class="c">#$json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Convert the JSON string to a PowerShell object</span>
</span></span><span class="line"><span class="cl"><span class="nv">$data</span> <span class="p">=</span> <span class="nv">$json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Search for the object where resourceKindKey is &#34;VirtualMachine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$targetResourceKindKey</span> <span class="p">=</span> <span class="s2">&#34;VirtualMachine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$matchedObject</span> <span class="p">=</span> <span class="nv">$data</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">resourceKey</span><span class="p">.</span><span class="py">resourceKindKey</span> <span class="o">-eq</span> <span class="nv">$targetResourceKindKey</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># If a matching object is found, output the identifier</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$matchedObject</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmIdentifier</span> <span class="p">=</span> <span class="vm">$</span><span class="p">(</span><span class="nv">$matchedObject</span><span class="p">.</span><span class="n">identifier</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Write-Output $($matchedObject.identifier)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="s2">&#34;No VirtualMachine resourceKindKey found&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Field Names and Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources/properties?resourceId=</span><span class="nv">$vmidentifier</span><span class="s2">&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$resourcePropertiesList</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="nv">$resourcePropertiesList</span><span class="p">.</span><span class="py">resourcePropertiesList</span><span class="p">.</span><span class="py">property</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>vROPS Host Field Names available (PowerShell Script):</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$opsURL</span>      <span class="p">=</span> <span class="s2">&#34;https://vao-ent.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsUsername</span> <span class="p">=</span> <span class="s2">&#34;admin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsPassword</span> <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostName</span>      <span class="p">=</span> <span class="s2">&#34;esxi8-04.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$authSource</span>  <span class="p">=</span> <span class="s2">&#34;local&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Aria Operations token</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/auth/token/acquire?_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bodyHashtable</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">username</span> <span class="p">=</span> <span class="nv">$opsUsername</span>
</span></span><span class="line"><span class="cl">    <span class="n">authSource</span> <span class="p">=</span> <span class="nv">$authSource</span>
</span></span><span class="line"><span class="cl">    <span class="n">password</span> <span class="p">=</span> <span class="nv">$opsPassword</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Convert the hashtable to a JSON string</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$bodyHashtable</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$token</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Content-Type&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-Body</span> <span class="nv">$body</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$token.token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$authorization</span> <span class="p">=</span> <span class="s2">&#34;OpsToken &#34;</span> <span class="p">+</span> <span class="nv">$token</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl"><span class="c">#$authorization</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get the VM Operations identifier</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources?name=</span><span class="nv">$hostName</span><span class="s2">&amp;page=0&amp;pageSize=1000&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$identifier</span>
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nv">$identifier</span><span class="p">.</span><span class="py">resourceList</span>
</span></span><span class="line"><span class="cl"><span class="nv">$json</span> <span class="p">=</span> <span class="nv">$identifier</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl"><span class="c">#$json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Convert the JSON string to a PowerShell object</span>
</span></span><span class="line"><span class="cl"><span class="nv">$data</span> <span class="p">=</span> <span class="nv">$json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="c">#$data</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Search for the object where resourceKindKey is &#34;VirtualMachine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$targetResourceKindKey</span> <span class="p">=</span> <span class="s2">&#34;Hostsystem&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$matchedObject</span> <span class="p">=</span> <span class="nv">$data</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">resourceKey</span><span class="p">.</span><span class="py">resourceKindKey</span> <span class="o">-eq</span> <span class="nv">$targetResourceKindKey</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># If a matching object is found, output the identifier</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$matchedObject</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmIdentifier</span> <span class="p">=</span> <span class="vm">$</span><span class="p">(</span><span class="nv">$matchedObject</span><span class="p">.</span><span class="n">identifier</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Write-Output $($matchedObject.identifier)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="s2">&#34;No VirtualMachine resourceKindKey found&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Field Names and Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources/properties?resourceId=</span><span class="nv">$vmidentifier</span><span class="s2">&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$resourcePropertiesList</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="nv">$resourcePropertiesList</span><span class="p">.</span><span class="py">resourcePropertiesList</span><span class="p">.</span><span class="py">property</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>Here is the results of running the PowerShell scripts to get the vropsField names. The column &ldquo;name&rdquo; is what you need to use in the json config file.</p>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-02.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-02.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>If you don&rsquo;t want to use the PowerSHell Scripts to get the VMware Aria Operations field names, watch this YouTube video to see the steps I used to get the field names using the VMware Aria Operations APIs.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/bGcDJ12lc0s" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>The cmdbColumn name info that needs included in the json config file is in Servicenow. Watch this YouTube video to see the steps I used to get the Servicenow column names to use with the json config file.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/Br4EVSJCLxE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>Example of how Servicenow CMDB will look with IP Address sent from VMware Aria Operation Management Pack.</p>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-03.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-03.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Another Example of how Servicenow CMDB will look with IP Address sent from VMware Aria Operation Management Pack.</p>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-04.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-04.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-about-vmware-aria-operations--servicenow--management-pack">Links to resources about VMware Aria Operations | Servicenow | Management Pack:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Management-Packs/Servicenow" target="_blank" rel="noopener noreffer ">Source code used in this Blog Post.</a></li>
<li><a href="https://www.brockpeterson.com/post/updated-vrtvs-management-pack-for-servicenow" target="_blank" rel="noopener noreffer ">Brock Peterson Blog Post | Updated vRTVS Management Pack for ServiceNow</a>. This Blog Post does a great job discussing how to send VMware Aria Operations Alerts to Servicenow.</li>
<li><a href="https://docs.vmware.com/en/VMware-Aria-Operations-for-Integrations/9.0/Management-Pack-for-ServiceNow/GUID-271D9F75-15C7-4395-96B1-EF024A1485C0.html" target="_blank" rel="noopener noreffer ">VMware Aria Operations Servicenow Management Pack documentation.</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Automation | ABX Action Constants and Secrets</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/</link>
    <pubDate>Tue, 14 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/</guid>
    <description><![CDATA[<p><strong>Using VMware Aria Automation Action Constants and Secrets</strong></p>
<hr>
<h6 id="vmware-aria-automation">VMware Aria Automation</h6>
<p>VMware Aria Automation 8.14 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code may need to be changed.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links within the blog to access the code.</p>
<hr>
<p>I wanted to share how I use <strong>Action Constants</strong> and <strong>Secrets</strong> within VMware Aria Automation. <strong>Action Constants</strong> are a great to have a variable that can be used with many Actions where the value may change. Instead of having to edit 10s or 100s of Actions, you change One Action Constant and all the Actions are updated instantly. Main reason to use <strong>Secrets</strong> is to keep the values of Passwords out of the code! Plus, like Action Constants, if a Password would change, all you need to do is change one Secret and all your Actions and Templates are automatically Updated. Secrets can also be used in the yaml code of Templates.</p>
<hr>
<h6 id="action-constants">Action Constants</h6>
<p><strong>Action Constants Use Cases:</strong></p>
<ul>
<li>vCenter Username</li>
<li>vCenter FQDN</li>
<li>VMware Aria Automation Config Username</li>
<li>VMware Aria Automation Config FQDN</li>
<li>salt master FQDN</li>
<li>Any value used in Actions that may change from time to time</li>
</ul>
<p><strong>To access Action Constants: Assembler/Extensibility/Actions/Actions Constants</strong></p>
<ul>
<li>You will see the Action Constants Names and Values.</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-02.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-02.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>How to use Action Constants and Secrets with an Action:</strong></p>
<ul>
<li>Add the Action Constants and Secrets used within the Action in the Default inputs section.</li>
<li>To use a Action Constant value within the Action PowerShell code use $inputs.&ldquo;Action Constant&rdquo;</li>
<li>To use a Secret value within the Action PowerShell code use $context.getSecret($inputs.&ldquo;Secret Name&rdquo;)</li>
<li>In the example code, review how I am connecting to the vCenter. No hard coded Username, Password or vCenter FQDN. If any of these values would change, I would never need to edit the Action, only the Action Constants and Secret.</li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Automation/Action-Constants-and-Secrets" target="_blank" rel="noopener noreffer ">Link to code | GitHub Repository</a></li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-01.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="secrets">Secrets</h6>
<p><strong>Secrets Use Cases:</strong></p>
<ul>
<li>Passwords</li>
<li>Any value you don&rsquo;t want displayed in plain text within your code</li>
</ul>
<p><strong>To access Secrets: Assembler/Infrastructure/Secrets/Secrets</strong></p>
<ul>
<li>You will see the Secret Names and Description only.</li>
<li>You can never see the Secret value after you create it. If you think the value is not correct you need to re-enter the value.</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-03.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-03.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>How to use Secrets with an Template:</strong></p>
<ul>
<li>Add code to the template yaml that is like this: password: &lsquo;${secret.UbuntuPassword}&rsquo;</li>
<li>See Screen Shot</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-04.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-04.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-about-actions-constants-and-secrets">Links to resources about Actions Constants and Secrets:</h6>
<ul>
<li><a href="https://docs.vmware.com/en/VMware-Aria-Automation/SaaS/Using-Automation-Assembler/GUID-895A8127-CC67-4A53-B633-879F373E7606.html" target="_blank" rel="noopener noreffer ">Secret Automation Assembler properties</a></li>
<li><a href="https://docs.vmware.com/en/VMware-Aria-Automation/SaaS/Using-Automation-Assembler/GUID-7E6145AB-74EC-492F-9FA9-8D07739519D4.html" target="_blank" rel="noopener noreffer ">How can I create extensibility action constants</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Automation Config API</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-config-api/</link>
    <pubDate>Sun, 12 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-config-api/</guid>
    <description><![CDATA[<p><strong>Using PowerShell with the VMware Aria Automation Config API</strong></p>
<hr>
<h6 id="vmware-aria-automation-config-api">VMware Aria Automation Config API:</h6>
<p>VMware Aria Automation 8.14 was used for this Blog Post. When new versions of VMware Aria Automation Config are released, the code may need to be changed.</p>
<p>There is a lot of Automation that I like to complete where I use the VMware Aria Automation Config API. The code that I am sharing is a PowerShell Script but the code could also be included in a VMware Aria Automation ABX Action, VMware Aria Automation Orchestrator Action or VMware Aria Automation Orchestrator Workflow.</p>
<p>All of my customers are 80% - 90% Microsoft Windows Servers. That is why you will see a lot of PowerShell code as examples in my Blog Posts. I like to share what my customers will use in their environments.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Please click on the link to see the code.</p>
<hr>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Automation-Config/Aria-Automation-Config-API" target="_blank" rel="noopener noreffer ">Link | vCROCS | GitHub Repository</a></li>
</ul>
<hr>
<ul>
<li>Added these PowerShell Scripts to use with the VMware Aria Automation Config APIs</li>
<li>These PowerShell Scripts are a good starting point to help you use the VMware Aria Automation Config APIs</li>
<li>You can modify the scripts to work with any of the salt functions.</li>
<li>The sample scripts show how to:<br>
[x] test.ping<br>
[x] grains.append<br>
[x] grains.remove<br>
[x] state.apply<br>
[x] key.delete</li>
<li>The scripts will show you how to authenticate with VMware Aria Automation Config to use the APIs.</li>
<li>The scripts will show you how to create the API Body to use with VMware Aria Automation Config.</li>
<li>The scripts will show you how to use the Job ID (JID) to get the status of the job so you know when the job is complete and if it was successful.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations for Logs (SaaS) | ESXi Host syslog setting</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/</link>
    <pubDate>Sat, 07 Oct 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/</guid>
    <description><![CDATA[<p><strong>How to Automate the ESXi Host &ldquo;Syslog.global.logHost&rdquo; setting, when using Cloud Proxies.</strong></p>
<hr>
<p>This blog post is part of a series of blog posts that will be created to help you &ldquo;Unlock the Potential&rdquo; of the VMware Aria Products. I want to give you some &ldquo;Real World&rdquo; examples that VMware admins could use everyday to help them with their daily tasks. Hopefully you will learn from my Tips and Tricks.</p>
<hr>
<h6 id="vmware-aria-operations-for-logs--saas-version">VMware Aria Operations for Logs | SaaS Version:</h6>
<p>The Details in this Blog Post were created in October 2023. New VMware Aria Operations for Logs updates are released every month, so the details shown in this Blog Post could change.</p>
<p>When you use VMware Aria Operations for Logs | SaaS Version, you need to have one or more Cloud Proxies to send the log info from your on-prem vCenter and ESXi Hosts to VMware Cloud Services.  If you have more than (1) Cloud Proxy, there is no automated way built into VMware Aria Operations for Logs to distribute the Cloud Proxy usage. One way to set the vCenter ESXi hosts to use a specific Cloud Proxy, is to use a PowerCLI script. I included some sample scripts in this blog post to help you get started.</p>
<p><strong>Logic of the PowerCLI script:</strong></p>
<ul>
<li>The script will count the number of VMware Cloud Services, Cloud Proxies Specified</li>
<li>The script will count the number of VMware vCenter ESXi Hosts in the vCenter Specified</li>
<li>The script will equally distribute the number of vCenter ESXi Hosts per Cloud Proxy</li>
<li>The script will set the Advanced System Setting &ldquo;Syslog.global.logHost&rdquo; on each ESXi Host</li>
</ul>
<hr>
<p><strong>ESXi Host Advanced System Settings:</strong></p>
<ul>
<li>This is how to manually set the &ldquo;Syslog.global.logHost&rdquo; on each ESXi Host</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-01.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Cloud Proxies:</strong></p>
<ul>
<li>Go to Configuration/Cloud Proxies to see all the Proxies added</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-04.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-04.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Cloud Proxy Information:</strong></p>
<ul>
<li>Cloud Proxy Details like State, CPU, Memory</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-03.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-03.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>vSphere Integration:</strong></p>
<ul>
<li>Go to Configuration/vSphere Integration to see all the vCenters added</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-05.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-05.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>vCenter Server Configuration:</strong></p>
<ul>
<li>vCenter Server Configuration</li>
<li>You can use this screen to set which Cloud Proxy to use but if you have 100s or 1000s of Hosts, I find it easier to use the script included in this Blog Post.</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-06.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-06.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="powershell-code">PowerShell Code:</h6>
<h6 id="set-sysloggloballoghost-value-on-all-hosts">Set “Syslog.global.logHost” value on all Hosts</h6>
<ul>
<li>Sample Script to set the &ldquo;Syslog.global.logHost&rdquo; value on each ESXi Host</li>
<li>The script will balance the usage of the Cloud Proxies</li>
<li>The script could be scheduled to run every day to maintain the correct settings.</li>
</ul>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Set Variable Values to use with Script</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcServer</span>     <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcUser</span>       <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcPassword</span>   <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (1) syslog setting for each host.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (2) syslog settings for each host.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip.corp.local:514,tcp://DBH-CP-VAOL-01.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (2) syslog settings divided equally between hosts.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip.corp.local:514;udp://vaol-01.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (3) syslog settings divided equally between hosts.</span>
</span></span><span class="line"><span class="cl"><span class="nv">$syslogServers</span> <span class="p">=</span> <span class="s2">&#34;udp://vaol-vip-03.corp.local:514;udp://vaol-vip-02.corp.local:514;udp://vaol-vip-01.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (4) syslog settings divided equally between hosts.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip-01.corp.local:514;udp://vaol-vip-02.corp.local:514;udp://vaol-vip-03.corp.local:514;udp://vaol-vip-04.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get list of syslog server specifed and seperated by semicolons. Semicolons were used in case you would want to specify (2) syslog servers seperated by commas.</span>
</span></span><span class="line"><span class="cl"><span class="nv">$syslogServerList</span> <span class="p">=</span> <span class="nv">$syslogServers</span><span class="p">.</span><span class="py">Split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$syslogServerList</span> <span class="p">=</span> <span class="nv">$syslogServerList</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;syslog Server List: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$syslogServerCount</span> <span class="p">=</span> <span class="nv">$syslogServerList</span><span class="p">.</span><span class="py">Count</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;syslog Server Count: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerCount</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Connect to the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-User</span> <span class="nv">$vcUser</span> <span class="n">-Password</span> <span class="nv">$vcPassword</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$syslogServerCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Get Number of Hosts</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$hostList</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$hostCount</span> <span class="p">=</span> <span class="nv">$hostList</span><span class="p">.</span><span class="py">Count</span>
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Total Number of Hosts</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Host Count: &#34;</span> <span class="p">+</span> <span class="nv">$hostCount</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Calculate how to divide the hosts</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$baseValue</span> <span class="p">=</span> <span class="p">[</span><span class="no">math</span><span class="p">]::</span><span class="n">Floor</span><span class="p">(</span><span class="nv">$hostCount</span> <span class="p">/</span> <span class="nv">$syslogServerCount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$remainder</span> <span class="p">=</span> <span class="nv">$hostCount</span> <span class="p">%</span> <span class="nv">$syslogServerCount</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Create an array to hold the results</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$syslogProxyNumber</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span><span class="mf">1</span><span class="p">..</span><span class="nv">$syslogServerCount</span> <span class="p">|</span> <span class="nb">ForEach-Object</span> <span class="p">{</span> <span class="nv">$baseValue</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$syslogProxyNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Distribute the remainder among the numbers</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="p">=</span> <span class="mf">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">-lt</span> <span class="nv">$syslogServerCount</span><span class="p">;</span> <span class="nv">$i</span><span class="p">++)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$remainder</span> <span class="o">-eq</span> <span class="mf">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$syslogProxyNumber</span><span class="p">[</span><span class="nv">$i</span><span class="p">]++</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$remainder</span><span class="p">--</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Hosts Per Syslog Group: &#34;</span> <span class="p">+</span> <span class="nv">$syslogProxyNumber</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Highest sysloggroup array value: &#34;</span> <span class="p">+</span> <span class="p">(</span><span class="nv">$syslogProxyNumber</span><span class="p">.</span><span class="py">Count</span> <span class="p">-</span> <span class="mf">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Syslog Group Count: &#34;</span> <span class="p">+</span> <span class="nv">$syslogProxyNumber</span><span class="p">.</span><span class="py">Count</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Calculate the sum</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$sum</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$syslogProxyNumber</span> <span class="p">|</span> <span class="nb">Measure-Object</span> <span class="n">-Sum</span><span class="p">).</span><span class="py">Sum</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Total Hosts to add syslog info: &#34;</span> <span class="p">+</span> <span class="nv">$sum</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$sum</span> <span class="o">-eq</span> <span class="nv">$hostCount</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="s2">&#34;Hosts were divided as equal as posible&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="s2">&#34;Hosts were NOT divided equal. TRY AGAIN!&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="s2">&#34;Only 1 syslog Server was specififed!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$syslogProxyNumberArrayValue</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl"><span class="nv">$servercountstart</span> <span class="p">=</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">$serverCountTotal</span> <span class="p">=</span> <span class="nv">$syslogProxyNumber</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Loop thru ESXi Hosts</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$esxiName</span> <span class="k">in</span> <span class="nv">$hostList</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Create Server Count Number</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$servercountstartstr</span> <span class="p">=</span> <span class="s1">&#39;0000&#39;</span> <span class="p">+</span> <span class="nv">$servercountstart</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$servercountstartstr</span> <span class="p">=</span> <span class="nv">$servercountstartstr</span><span class="p">[</span><span class="mf">-4</span><span class="p">..</span><span class="mf">-1</span><span class="p">]</span> <span class="n">-join</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Set the syslog Host value on Each ESXi Host</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$syslogServerCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Count: &#34;</span> <span class="p">+</span> <span class="nv">$servercountstartstr</span> <span class="p">+</span> <span class="s2">&#34; | ESXi Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$esxiName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | Proxy Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c"># ----- Set the Syslog.global.logHost value</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;------------- Get-VMHost &#34;</span> <span class="p">+</span> <span class="nv">$esxiName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | Get-AdvancedSetting -Name &#39;Syslog.Global.Loghost&#39; | Set-AdvancedSetting -Value &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span> <span class="p">+</span> <span class="s2">&#34; -Confirm:</span><span class="nv">$false</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">        <span class="c"># ----- The next line will make the changes. Remove the line comment after you test the script and make sure you are getting the results you want to use.</span>
</span></span><span class="line"><span class="cl">        <span class="c">#Get-VMHost $esxiName.Name | Get-AdvancedSetting -Name &#39;Syslog.Global.Loghost&#39; | Set-AdvancedSetting -Value $syslogServerList[$syslogProxyNumberArrayValue] -Confirm:$false</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">    <span class="k">elseif</span><span class="p">(</span><span class="nv">$syslogServerCount</span> <span class="o">-eq</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Count: &#34;</span> <span class="p">+</span> <span class="nv">$servercountstartstr</span> <span class="p">+</span> <span class="s2">&#34; | ESXi Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$esxiName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | Proxy Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">        <span class="c"># ----- The next line will make the changes. Remove the line comment after you test the script and make sure you are getting the results you want to use.</span>
</span></span><span class="line"><span class="cl">        <span class="c">#Get-VMHost $esxiName.Name | Get-AdvancedSetting -Name &#39;Syslog.Global.Loghost&#39; | Set-AdvancedSetting -Value $syslogServerList -Confirm:$false</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Elseif</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Increment Host Count and switch which Proxy to use based on count</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$servercountstart</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$servercountstart</span> <span class="o">-gt</span> <span class="nv">$serverCountTotal</span> <span class="o">-and</span> <span class="nv">$syslogServerCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$servercountstart</span> <span class="p">=</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$syslogProxyNumberArrayValue</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$serverCountTotal</span> <span class="p">=</span> <span class="nv">$syslogProxyNumber</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Disconnect from the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="get-current-sysloggloballoghost-value-on-all-hosts">Get current “Syslog.global.logHost” value on all Hosts</h6>
<ul>
<li>Here is a sample script that can be used to show the current &ldquo;Syslog.global.logHost&rdquo; values</li>
</ul>
<p><strong>Click arrow to expand the code:</strong><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Get current sysloghost value on all Hosts ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Set Variable Values to use with Script</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcServer</span>     <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcUser</span>       <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcPassword</span>   <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- File Name to store data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$filePath</span> <span class="p">=</span> <span class="s2">&#34;C:\Github\PS-TAM-Lab\syslog-current-info.csv&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Connect to the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-User</span> <span class="nv">$vcUser</span> <span class="n">-Password</span> <span class="nv">$vcPassword</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get list of all Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Create new CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nb">New-Item</span> <span class="n">-Path</span> <span class="nv">$filePath</span> <span class="n">-ItemType</span> <span class="n">File</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- add header to CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nb">Add-Content</span> <span class="n">-Path</span> <span class="nv">$filePath</span> <span class="n">-Value</span> <span class="s2">&#34;ServerName,syslogName&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get all ESXi Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Output Data to screen and the CSV file</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$hostName</span> <span class="k">in</span> <span class="nv">$hostList</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$syslogInfo</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="n">-Name</span> <span class="nv">$hostName</span><span class="p">.</span><span class="py">Name</span> <span class="p">|</span> <span class="nb">Get-AdvancedSetting</span> <span class="n">-Name</span> <span class="s2">&#34;Syslog.global.logHost&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Entity</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | syslog Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># ----- add info to csv file</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$addContentstr</span> <span class="p">=</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Entity</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34;,&#34;</span> <span class="p">+</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Add-Content</span> <span class="n">-Path</span> <span class="nv">$filePath</span> <span class="n">-Value</span> <span class="nv">$addContentstr</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Disconnect from the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<ul>
<li>Sample Output from script:</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-02.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-02.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="set-sysloggloballoghost-value-to-null-on-all-hosts">Set “Syslog.global.logHost” value to null on all Hosts</h6>
<ul>
<li>Sample script if you would ever want to set the &ldquo;Syslog.global.logHost&rdquo; values to null on all the ESXi Hosts.</li>
</ul>
<p><strong>Click arrow to expand the code:</strong><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Set sysloghost value to null on all Hosts ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Set Variable Values to use with Script</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcServer</span>     <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcUser</span>       <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcPassword</span>   <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Connect to the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-User</span> <span class="nv">$vcUser</span> <span class="n">-Password</span> <span class="nv">$vcPassword</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get list of all Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get all ESXi Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Output Data to screen and a CSV file.</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$hostName</span> <span class="k">in</span> <span class="nv">$hostList</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$hostName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | syslog Name: Set to null&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Set logserver address to null</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Set-VMHostSysLogServer</span> <span class="n">-SysLogServer</span> <span class="vm">$null</span> <span class="n">-VMHost</span> <span class="nv">$hostName</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Disconnect from the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="get-sysloggloballoghost-address-on-a-specific-host">Get “Syslog.global.logHost” address on a specific Host</h6>
<ul>
<li>Very simple script to get the &ldquo;Syslog.global.logHost&rdquo; values on a single ESXi host.</li>
</ul>
<p><strong>Click arrow to expand the code:</strong><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- Simple Get syslogserver address on a specific Host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-VMHostSysLogServer</span> <span class="n">-VMHost</span> <span class="s1">&#39;esxi8-05.corp.local&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>When you use VMware Aria Operations for Logs | SaaS Version, you may need more than one Cloud Proxy</li>
<li>If you have more than one Cloud Proxy, you will need a way to balance the usage between the Proxies</li>
<li>If you have 10s, 100s or 1000s of ESXi Hosts, using a script will be the easiest and quickest way to specify &ldquo;Syslog.global.logHost” values.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Explore 2023 | Presentation</title>
    <link>https://www.vcrocs.info/vmware-explore-2023-presentation/</link>
    <pubDate>Fri, 18 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2023-presentation/</guid>
    <description><![CDATA[<p><strong>Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)</strong></p>
<hr>
<p>I will be doing a VMware Explore 2023 Presentation. I did a virtual VMWorld presentation in 2021 but this will be my first VMware Explore Presentation that I will be doing &ldquo;Live&rdquo;. There will be many days going into this presentation so that the people attending will feel it was worth their time to learn about the topic. This is an awesome topic that I am very passionate about.</p>
<p>So register today for VMware Explore 2023 and attend my session.</p>
<hr>
<h6 id="session-name">Session Name:</h6>
<p>Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud) [CODE2501LV]</p>
<h6 id="description">Description:</h6>
<p>Learn how to create Windows Servers on-prem and in the cloud, see how to use the saltstack resource with the cloud template, add grain data with the cloud template, install software using the windows repo, add Windows Server roles and features with states, and use states to maintain your Windows Server configuration. After creating Windows Servers, you will also see how to monitor on-prem and cloud servers with VMware Aria Operations.</p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/code2501lv.png" title="/vmware-explore-2023-presentation/code2501lv.png" data-thumbnail="/vmware-explore-2023-presentation/code2501lv.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="presenters">Presenters:</h6>
<p>Dale Hassinger, Senior Cloud Solutions Architect, vExpert</p>
<p>Topic: Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)<br>
Session ID: CODE2501LV<br>
Track : Multi-Cloud<br>
Primary Products: VMware Aria Automation | VMware Aria Automation Config | VMware Aria Operations<br>
Session Type: VMware {code} Theater Session<br>
VMware Explore Conference: 08/21/2023-08/24/2023</p>
<hr>
<h6 id="link-to-my-session">Link to My Session:</h6>
<p><a href="https://event.vmware.com/flow/vmware/explore2023lv/content/page/catalog?search=Hassinger" target="_blank">My Session | Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)</a></p>
<hr>
<h6 id="link-to-vmware-explore-2023-content-catalog">Link to VMware Explore 2023 Content Catalog:</h6>
<p><a href="https://event.vmware.com/flow/vmware/explore2023lv/content/page/catalog" target="_blank">VMware Explore 2023 | Content Catalog</a></p>
<hr>
<h6 id="source-code">Source Code:</h6>
<p>All the code from my Presentation is in my GitHub Repository.</p>
<p>Here is the link:</p>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">vCROCS | GitHub Repository</a></li>
</ul>
<hr>
<h6 id="pics-of-the-presentation-at-vmware-explore-2023">PICs of the Presentation at VMware Explore 2023.</h6>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/presenting-01.jpg" title="/vmware-explore-2023-presentation/presenting-01.jpg" data-thumbnail="/vmware-explore-2023-presentation/presenting-01.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/presenting-02.jpg" title="/vmware-explore-2023-presentation/presenting-02.jpg" data-thumbnail="/vmware-explore-2023-presentation/presenting-02.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="video-of-the-presentation-at-vmware-explore-2023">Video of the Presentation at VMware Explore 2023.</h6>
<hr>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/k_BLvRb2SI4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>The presentation was well attended. There was some good discussions with some of the attendees after the presentation. Thank You to everyone that took the time from their schedule to attend my presentation.</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware Explore 2023 | Hackathon</title>
    <link>https://www.vcrocs.info/vmware-explore-2023-hackathon/</link>
    <pubDate>Tue, 15 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2023-hackathon/</guid>
    <description><![CDATA[<p><strong>VMware Explore 2023 | Hackathon Team Captain</strong></p>
<hr>
<h6 id="vmware-explore-2023-hackathon">VMware Explore 2023 Hackathon:</h6>
<p>I will be participating in the VMware Explore 2023 Hackathon. I am the Team Captain for the &ldquo;Well Spoken&rdquo; Team. This Blog Post will be documenting the journey of the &ldquo;Well Spoken&rdquo; Team.</p>
<p>I want to thank Senior Staff TAM, <a href="https://twitter.com/arielsanchezmor" target="_blank" rel="noopener noreffer ">Ariel Sanchez</a>, for organizing the Team. Originally we were going to be part of Ariel&rsquo;s Team but there were too many people, so we split the Team in half. Ariel asked me to be the Captain of the 2nd Team. If you know Ariel, you know why he had too many people on his team.  Ariel is very active in the #vCommunity and does a great job promoting the #vCommunity. So when he asked on social platforms for people to join his team, there was instantly interest from a lot of people. Ariel has done a lot for me personally since I started working at VMware and I can&rsquo;t wait to meet him in person at the Hackathon.</p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/twitter.jpeg" title="/vmware-explore-2023-hackathon/twitter.jpeg" data-thumbnail="/vmware-explore-2023-hackathon/twitter.jpeg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="team-name">Team Name:</h6>
<p>&ldquo;Well Spoken&rdquo;</p>
<h6 id="team-hack">Team Hack:</h6>
<p>&ldquo;How to use Generative AI to create new Automation or Convert Existing.</p>
<h6 id="team-description">Team Description:</h6>
<p>&ldquo;Be prepared as they unveil their approach to transforming ordinary conversations into mind-boggling automation scripts. From novices to seasoned professionals, the team will unlock the secrets of this cutting-edge technology. Together, we shall revolutionize the way we automate VMware Products.&rdquo;</p>
<h6 id="team-members">Team Members:</h6>
<p><a href="https://www.linkedin.com/in/tinakrogull/" target="_blank" rel="noopener noreffer ">Tina Krogull</a> | Senior Technical Adoption Manager | Germany<br>
<a href="https://www.linkedin.com/in/wesmilliron/" target="_blank" rel="noopener noreffer ">Wes Milliron</a> | Technical Adoption Manager | Pennsylvania<br>
<a href="https://www.linkedin.com/in/viviana-miranda-cubero/" target="_blank" rel="noopener noreffer ">Viviana Miranda</a> | Senior Technical Marketing Architect | Costa Rica<br>
<a href="https://www.linkedin.com/in/madisonwelsch/" target="_blank" rel="noopener noreffer ">Madison Welsch</a> | Technical Adoption Manager | Ohio<br>
<a href="https://www.linkedin.com/in/edgar-sanchez-90439920/" target="_blank" rel="noopener noreffer ">Edgar Sanchez</a> | Systems Engineer II-VR/Windows at UMB | Alabama<br>
<a href="https://www.linkedin.com/in/dale-hassinger-5712301b/" target="_blank" rel="noopener noreffer ">Dale Hassinger</a> | Technical Adoption Manager | Pennsylvania</p>
<p>This is an AWESOME Team! I think it is great how we will be able to work together as an International Team. There is a lot of great experience and backgrounds on this Team.</p>
<hr>
<h6 id="update-07072023">Update 07/07/2023:</h6>
<p>Come back often to check for updates on how the &ldquo;Hacking&rdquo; is proceeding!</p>
<hr>
<h6 id="update-08152023">Update 08/15/2023:</h6>
<p>The &ldquo;Well-Spoken&rdquo; Team:</p>
<p>The Team is almost ready. We are looking forward to doing our presentation to the Hackathon Judges.</p>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/well-spoken-hackathon-logo.jpeg" title="/vmware-explore-2023-hackathon/well-spoken-hackathon-logo.jpeg" data-thumbnail="/vmware-explore-2023-hackathon/well-spoken-hackathon-logo.jpeg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hackathon-team-01.png" title="/vmware-explore-2023-hackathon/hackathon-team-01.png" data-thumbnail="/vmware-explore-2023-hackathon/hackathon-team-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hackathon-team-02.png" title="/vmware-explore-2023-hackathon/hackathon-team-02.png" data-thumbnail="/vmware-explore-2023-hackathon/hackathon-team-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Here is a Sneak Peak at what we are working on. We will make it easier for anyone to get started with Automation.</p>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/sneak-peak.png" title="/vmware-explore-2023-hackathon/sneak-peak.png" data-thumbnail="/vmware-explore-2023-hackathon/sneak-peak.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="update-08252023">Update 08/25/2023:</h6>
<p>The &ldquo;Well-Spoken&rdquo; Team got 2nd place at the VMware Explore Hackathon! There was a total of 9 Teams.</p>
<p>I am so proud of what the &ldquo;Well-Spoken&rdquo; Team created together. There was great collaboration throughout the whole process.</p>
<p>The Team created a custom form in VMware Aria Automation that will help you build a chat question that would be sent to ChatGPT and return complete usable scripts to use with Automation.  The Scirpt returned could then be saved into a Teams/Slack Channel, GitHub Repository or a VMwaqre Aria Operations Dashboard.</p>
<p>This custom form will help customers get started with Automation and also convert existing Automation, like an Ansible Playbook, into a salt state file.</p>
<hr>
<p><strong>Award:</strong>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/award.jpg" title="/vmware-explore-2023-hackathon/award.jpg" data-thumbnail="/vmware-explore-2023-hackathon/award.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-01.jpg" title="/vmware-explore-2023-hackathon/hack-01.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-01.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Great discussion with Alan Renouf and William Lam:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-02.jpg" title="/vmware-explore-2023-hackathon/hack-02.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-02.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>All Participates and Judges:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-03.jpg" title="/vmware-explore-2023-hackathon/hack-03.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-03.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Ed Sanchez and I:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-04.jpg" title="/vmware-explore-2023-hackathon/hack-04.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-04.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Viviana Miranda and I:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-05.jpg" title="/vmware-explore-2023-hackathon/hack-05.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-05.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p>It would have been nice if the Whole Hackathon Team would have been able to attend the Hackathon. Maybe next year. Fingers crossed&hellip;</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>GitHub Repository | Code and Examples to help you get started</title>
    <link>https://www.vcrocs.info/github-repository/</link>
    <pubDate>Sat, 24 Jun 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/github-repository/</guid>
    <description><![CDATA[<p><strong>GitHub Repository | Code and Examples to help you get started</strong></p>
<hr>
<p>Creating a Blog Post every time I want to share a new code example or a new Dashboard Design can take a lot of time. To keep it simple for some items I want to share, I created a <a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository</a>. This will be a nice way for me to quickly add code more often. So go take a look at the <a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository</a>, and check back often. I will continue to do the more detailed Blog Posts, but I will also add a lot of snippets of code to the repository to share with the vCommunity.</p>
<h6 id="github-repository-name-unlocking-the-potential">GitHub Repository Name: &ldquo;Unlocking The Potential&rdquo;</h6>
<p>Collection of items for the VMware Aria Admin and Automation | Monitoring | Logging Enthusiast.</p>
<ul>
<li>VMware Aria Automation | vRA
<ul>
<li>Templates</li>
<li>abx scripts</li>
<li>Workflows</li>
</ul>
</li>
<li>VMware Aria Automation Config | SaltStack Config
<ul>
<li>state files</li>
<li>jobs</li>
</ul>
</li>
<li>VMware Aria Operations | vROPS
<ul>
<li>Dashboards</li>
<li>Views</li>
<li>Super Metrics</li>
<li>Metric Search Examples</li>
</ul>
</li>
<li>VMware Aria Operations for Logs | Log Insight</li>
<li>PowerShell
<ul>
<li>Scripts</li>
</ul>
</li>
<li>PowerCLI
<ul>
<li>Scripts</li>
</ul>
</li>
<li>Ansible
<ul>
<li>Playbooks</li>
</ul>
</li>
</ul>
<hr>
<h6 id="link-to-github-repository">Link to GitHub Repository:</h6>
<p><a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository | &ldquo;Unlocking The Potential&rdquo;</a>.</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
</channel>
</rss>

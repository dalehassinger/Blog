<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on vCROCS.info</title>
    <link>https://www.vcrocs.info/tags/powershell/</link>
    <description>Recent content in PowerShell on vCROCS.info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.vcrocs.info/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Open Ports - Zero Trust</title>
      <link>https://www.vcrocs.info/2021/04/open-ports-zero-trust/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/2021/04/open-ports-zero-trust/</guid>
      <description>PowerShell Code Use PowerShell to see if ports are open to a remote server.
Living in a zero trust environment can be challenging. Here is some code that I have been using to test for open ports from a Windows server to any type of destination. Just change PortNumber and Destination for your use case.
 $PortNumber = &#39;443&#39; $Destination = &#39;Server.vCrocs.info&#39; $socket = New-Object Net.Sockets.TcpClient $socket.Connect($Destination,$PortNumber) if($socket.Connected){ $PortOpened = &#39;Port: &#39; + $PortNumber + &#39; to &#39; + $Destination +&#39; is Open!</description>
    </item>
    
    <item>
      <title>Schedule RVTools Data Export</title>
      <link>https://www.vcrocs.info/2021/04/schedule-rvtools-data-export/</link>
      <pubDate>Sat, 24 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/2021/04/schedule-rvtools-data-export/</guid>
      <description>PowerShell Code I like to create a Scheduled Task in vRealize Orchestrator to create RVTools files everyday. Here is a sample script that could be used. The script is also on a 7 day rotation of files and automatically deletes old files.
 Start-Process -FilePath &amp;quot;C:\Program Files (x86)\Robware\RVTools\RVtools.exe&amp;quot; -ArgumentList &#39;-s vCenter01.vCrocs.info -u administrator@vsphere.local -p &amp;quot;Enter RVTools encrypted Password between the double quotes&amp;quot; -c Exportall2xls -d &amp;quot;G:\RVTools\vCenter01&amp;quot;&#39; -Wait Start-Process -FilePath &amp;quot;C:\Program Files (x86)\Robware\RVTools\RVtools.</description>
    </item>
    
    <item>
      <title>Automating Automation</title>
      <link>https://www.vcrocs.info/2021/03/automating-automation/</link>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/2021/03/automating-automation/</guid>
      <description>I recently had a use case where I wanted to execute a vRealize Orchestrator Workflow by using REST API. There is some documentation available but not a lot of details on how to get and use variables, sdk-objects and bearer token for permission. Here is how I made the vRO REST API calls with PowerShell using vRealize Orchestrator built-into vRA.
 Steps:
 Permission:  Need to get a Bearer Token from vRO to make REST API Call to execute Workflow.</description>
    </item>
    
    <item>
      <title>How to use PowerShell Modules with vRA 8.2</title>
      <link>https://www.vcrocs.info/2021/01/how-to-use-powershell-modules-with-vra-8.2/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/2021/01/how-to-use-powershell-modules-with-vra-8.2/</guid>
      <description>I like to review VMware vRA (vRealize Automation) 8.2 as a Microsoft Windows Server Admin. Most of the reviews you see are creating Linux VMs and customizing the OS using tools for Linux. I create Windows/Linux VMs and customize the OS using a new feature added to vRA 8.x, Action Based Extensibility (ABX) with PowerShell.
In my vRA 7.6 environment I use a PowerShell Host to run processes and on the PowerShell Host is where I install all the PS Modules that I use.</description>
    </item>
    
    <item>
      <title>What is vRealize Automation - Episode 21</title>
      <link>https://www.vcrocs.info/2020/05/what-is-vrealize-automation-episode-21/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/2020/05/what-is-vrealize-automation-episode-21/</guid>
      <description>I have been listening to Podcasts for many years. Everyday while driving to and from work I would listen to a Podcast. Anytime I traveled to a conference I would download hours worth of Podcasts to listen to while flying. Most of the Podcasts I listen to are Technology related. Here are some of my favorites:
 IT Reality Virtual Speaking Podcast Develop Great Managers vBrown Bag Automators Mac Power Users Twit Network of Podcasts  I have had an interest to be a guest on a Podcast for several years.</description>
    </item>
    
    <item>
      <title>vRealize Automation 8.1 - PowerShell ABX</title>
      <link>https://www.vcrocs.info/2020/05/vrealize-automation-8.1-powershell-abx/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/2020/05/vrealize-automation-8.1-powershell-abx/</guid>
      <description>I wanted to review VMware vRA (vRealize Automation) 8.x as a Microsoft Windows Server Admin. Most of the reviews you see are creating Linux VMs and customizing the OS using tools for Linux. I am going to create Windows Server VMs and customize the OS using a new feature added to vRA 8.1, Action Based Extensibility (ABX) with PowerShell. No vRO (Orchestrator) Workflows will be used. This is completely different compared to how I create Windows Servers with vRA 7.</description>
    </item>
    
  </channel>
</rss>

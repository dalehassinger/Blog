<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Windows Server - Tag - vCROCS</title>
        <link>https://www.vcrocs.info/tags/windows-server/</link>
        <description>Windows Server - Tag - vCROCS</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</managingEditor>
            <webMaster>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 18 Aug 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.vcrocs.info/tags/windows-server/" rel="self" type="application/rss+xml" /><item>
    <title>VMware Explore 2023 | Presentation</title>
    <link>https://www.vcrocs.info/vmware-explore-2023-presentation/</link>
    <pubDate>Fri, 18 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2023-presentation/</guid>
    <description><![CDATA[<p><strong>Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)</strong></p>
<hr>
<p>I will be doing a VMware Explore 2023 Presentation. I did a virtual VMWorld presentation in 2021 but this will be my first VMware Explore Presentation that I will be doing &ldquo;Live&rdquo;. There will be many days going into this presentation so that the people attending will feel it was worth their time to learn about the topic. This is an awesome topic that I am very passionate about.</p>
<p>So register today for VMware Explore 2023 and attend my session.</p>
<hr>
<h6 id="session-name">Session Name:</h6>
<p>Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud) [CODE2501LV]</p>
<h6 id="description">Description:</h6>
<p>Learn how to create Windows Servers on-prem and in the cloud, see how to use the saltstack resource with the cloud template, add grain data with the cloud template, install software using the windows repo, add Windows Server roles and features with states, and use states to maintain your Windows Server configuration. After creating Windows Servers, you will also see how to monitor on-prem and cloud servers with VMware Aria Operations.</p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/code2501lv.png" title="/vmware-explore-2023-presentation/code2501lv.png" data-thumbnail="/vmware-explore-2023-presentation/code2501lv.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="presenters">Presenters:</h6>
<p>Dale Hassinger, Senior Cloud Solutions Architect, vExpert</p>
<p>Topic: Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)<br>
Session ID: CODE2501LV<br>
Track : Multi-Cloud<br>
Primary Products: VMware Aria Automation | VMware Aria Automation Config | VMware Aria Operations<br>
Session Type: VMware {code} Theater Session<br>
VMware Explore Conference: 08/21/2023-08/24/2023</p>
<hr>
<h6 id="link-to-my-session">Link to My Session:</h6>
<p><a href="https://event.vmware.com/flow/vmware/explore2023lv/content/page/catalog?search=Hassinger" target="_blank">My Session | Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)</a></p>
<hr>
<h6 id="link-to-vmware-explore-2023-content-catalog">Link to VMware Explore 2023 Content Catalog:</h6>
<p><a href="https://event.vmware.com/flow/vmware/explore2023lv/content/page/catalog" target="_blank">VMware Explore 2023 | Content Catalog</a></p>
<hr>
<h6 id="source-code">Source Code:</h6>
<p>All the code from my Presentation is in my GitHub Repository.</p>
<p>Here is the link:</p>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">vCROCS | GitHub Repository</a></li>
</ul>
<hr>
<h6 id="pics-of-the-presentation-at-vmware-explore-2023">PICs of the Presentation at VMware Explore 2023.</h6>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/presenting-01.jpg" title="/vmware-explore-2023-presentation/presenting-01.jpg" data-thumbnail="/vmware-explore-2023-presentation/presenting-01.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/presenting-02.jpg" title="/vmware-explore-2023-presentation/presenting-02.jpg" data-thumbnail="/vmware-explore-2023-presentation/presenting-02.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="video-of-the-presentation-at-vmware-explore-2023">Video of the Presentation at VMware Explore 2023.</h6>
<hr>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/k_BLvRb2SI4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>The presentation was well attended. There was some good discussions with some of the attendees after the presentation. Thank You to everyone that took the time from their schedule to attend my presentation.</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>GitHub Repository | Code and Examples to help you get started</title>
    <link>https://www.vcrocs.info/github-repository/</link>
    <pubDate>Sat, 24 Jun 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/github-repository/</guid>
    <description><![CDATA[<p><strong>GitHub Repository | Code and Examples to help you get started</strong></p>
<hr>
<p>Creating a Blog Post every time I want to share a new code example or a new Dashboard Design can take a lot of time. To keep it simple for some items I want to share, I created a <a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository</a>. This will be a nice way for me to quickly add code more often. So go take a look at the <a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository</a>, and check back often. I will continue to do the more detailed Blog Posts, but I will also add a lot of snippets of code to the repository to share with the vCommunity.</p>
<h6 id="github-repository-name-unlocking-the-potential">GitHub Repository Name: &ldquo;Unlocking The Potential&rdquo;</h6>
<p>Collection of items for the VMware Aria Admin and Automation | Monitoring | Logging Enthusiast.</p>
<ul>
<li>VMware Aria Automation | vRA
<ul>
<li>Templates</li>
<li>abx scripts</li>
<li>Workflows</li>
</ul>
</li>
<li>VMware Aria Automation Config | SaltStack Config
<ul>
<li>state files</li>
<li>jobs</li>
</ul>
</li>
<li>VMware Aria Operations | vROPS
<ul>
<li>Dashboards</li>
<li>Views</li>
<li>Super Metrics</li>
<li>Metric Search Examples</li>
</ul>
</li>
<li>VMware Aria Operations for Logs | Log Insight</li>
<li>PowerShell
<ul>
<li>Scripts</li>
</ul>
</li>
<li>PowerCLI
<ul>
<li>Scripts</li>
</ul>
</li>
<li>Ansible
<ul>
<li>Playbooks</li>
</ul>
</li>
</ul>
<hr>
<h6 id="link-to-github-repository">Link to GitHub Repository:</h6>
<p><a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository | &ldquo;Unlocking The Potential&rdquo;</a>.</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Automation | Working with Windows Server Drives</title>
    <link>https://www.vcrocs.info/vmware-aria-automation-config-windows-server-drives/</link>
    <pubDate>Sat, 18 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-aria-automation-config-windows-server-drives/</guid>
    <description><![CDATA[<p><strong>How to add Windows Server Drives to VMware Aria Automation Cloud Templates.</strong></p>
<hr>
<p>I want to create new Windows Servers in VMware Aria Automation that will be production ready when the server build process is complete. One item when building new Windows Servers is adding drives. I want a way to add additional drives and have the drive be online and formatted properly. Non SQL Windows Servers will have data drives formatted with 4k allocation unit size and Windows SQL Servers will have the data drives formatted with 64k allocation unit size. VMware Aria Automation provides a way to add drives OOTB (Out of the Box) but does not automatically format the drives. That is why I use a Salt state in my example. I use the salt state to bring the new drive online and format. This Blog post shows one way to accomplish these tasks. I always say, with automation there a 100 ways to do the same process. Hopefully this Blog gives you some ideas and options.</p>
<h6 id="use-case">Use Case</h6>
<ul>
<li>Add Cloud Agnostic Volumes to a VMware Aria Automation Cloud Template.</li>
<li>To make New Windows Server Builds consistent I show the drives that are available on the Catalog Item Custom Form. You don&rsquo;t need to add any additional drives. Keep the drive sizes at the default size of &ldquo;0&rdquo; and the drives DO NOT get created.</li>
<li>At the end of the new server build I want the new Windows Server drives to be online and formatted properly. Be production ready!</li>
</ul>
<hr>
<h6 id="steps-to-complete-the-process">Steps to complete the process:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Automated Salt minion installation. See the Blog Post I wrote that completes this step. <a href="https://www.vcrocs.info/vmware-aria-automation-saltstack-config-resource/" target="_blank" rel="noopener noreffer ">Click Here</a></li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Add grains data about the drives to minion when the minion installation completes. See example yaml code.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Run a state file when the minion installation completes that brings the new drive online and formats the drive so that it is ready to use immediately. See example yaml code.</li>
</ul>
<hr>
<h6 id="requirements">Requirements:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> This blog was created using VMware Aria Automation and VMware Aria Automation Config version 8.11.0 (Salt version 3005.1). The process may vary for different versions of VMware Aria Automation and Salt.</li>
</ul>
<hr>
<h6 id="cloud-template--windows-2019-server">Cloud Template | Windows 2019 Server:</h6>
<ul>
<li>There are (3) Cloud Agnostic Volumes on the Cloud Template for my use case. You can have as many as you want for your environment.</li>
<li>The SaltStack Config Resource is added to the Cloud Template.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-01.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-01.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="vmware-aria-automation-cloud-template-file">VMware Aria Automation Cloud Template file:</h6>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-09.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-09.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-09.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>Key elements to review in the yaml code:
<ul>
<li>The yaml code includes grains that saves the drive information. These values are based on input from the Catalog custom form.</li>
<li>the yaml code includes stateFiles to run.</li>
<li>If the drive size input specified is equal to &ldquo;0&rdquo; then the drive count will be &ldquo;0&rdquo;. Drive will NOT be created.</li>
</ul>
</li>
<li><strong>Click to expand yaml code</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">DBH-194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">EDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">E-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">LDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">L-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">TDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">T-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">SQL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Selecting SQL will format all DATA drives with 64k allocation.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;True&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Network</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Virtual_Machine</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">medium</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Network.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">attachedDisks</span><span class="p">:</span><span class="w"> </span><span class="l">${map_to_object(resource.Cloud_Volume_E[*].id + resource.Cloud_Volume_L[*].id + resource.Cloud_Volume_T[*].id , &#34;source&#34;)}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">edrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ldrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.LDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tdrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.TDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">sql</span><span class="p">:</span><span class="w"> </span><span class="l">${input.SQL}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max SCSI Controllers is 4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max Unit per SCSI Controllers is 15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_E</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.EDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_L</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.LDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.LDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_T</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.TDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.TDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_SaltStack_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.SaltStack</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${resource.Virtual_Machine.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">masterId</span><span class="p">:</span><span class="w"> </span><span class="l">saltstack_enterprise_installer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stateFiles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/windows-server-services.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/windows-server-new-drives.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">saltEnvironment</span><span class="p">:</span><span class="w"> </span><span class="l">base</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">additionalMinionParams</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Roles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">database</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Drive_E_Size</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Drive_L_Size</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.LDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Drive_T_Size</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.TDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.SQL}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="service-broker-catalog-item">Service Broker Catalog item:</h6>
<ul>
<li>Show the (3) drives that are available as a Standard Windows Server Build.</li>
<li>To create the drives is an option. Make drive size a &ldquo;0&rdquo; (default Value) and the drive will NOT be created.</li>
<li>Select SQL &ldquo;True&rdquo; will make the data drives be formatted with 64k allocation unit size, &ldquo;false&rdquo; will be 4k allocation unit size.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-03.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-03.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="completed-windows-server-deployment">Completed Windows Server Deployment:</h6>
<ul>
<li>Shows which salt states were used with the deployment.</li>
<li>You can view the grains data that was added to the minion.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-02.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-02.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="vmware-aria-automation-config-state-file">VMware Aria Automation Config State file:</h6>
<ul>
<li>Screen shot shows the state file in SaltTack Config File Server.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-04.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-04.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>The state file is very simple. Tells the minion which PowerShell script to run.</li>
<li><strong>Click to expand yaml code</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">onlinenewdrives</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cmd.script</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">newdrives</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">source</span><span class="p">:</span><span class="w"> </span><span class="l">salt://scripts/windows-server-new-drives-ps.ps1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">shell</span><span class="p">:</span><span class="w"> </span><span class="l">PowerShell</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="powershell-script-to-online-and-format-new-drives">PowerShell Script to online and format new drives:</h6>
<ul>
<li>The PowerShell file is saved within the VMware Aria Automation Config file server.</li>
</ul>
<p><figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-05.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-05.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure><br>
 </p>
<ul>
<li>The PowerShell script gets the grain data and stores it as variables.</li>
<li>If the drive letter capacity is greater than &ldquo;0&rdquo; it will execute.</li>
<li>Script will only run on new drives in offline mode as a safety feature. Will not do anything with existing online drives. If state is run by accident after server is in production nothing will change.</li>
<li>Script uses the grain data SQL to determine how to format the drives. If grains value SQL is equal to &ldquo;True&rdquo; the it will use 64k allocation unit size, otherwise it uses 4k allocation unit size.</li>
<li><strong>Click to expand PowerShell code</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Get minion data ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$eDrive</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_Drive_E_Size</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$eDrive</span> <span class="p">=</span> <span class="nv">$eDrive</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;E-Drive: &#39;</span> <span class="p">+</span> <span class="nv">$eDrive</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$lDrive</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_Drive_L_Size</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$lDrive</span> <span class="p">=</span> <span class="nv">$lDrive</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;L-Drive: &#39;</span> <span class="p">+</span><span class="nv">$lDrive</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$tDrive</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_Drive_T_Size</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$tDrive</span> <span class="p">=</span> <span class="nv">$tDrive</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;T-Drive: &#39;</span> <span class="p">+</span> <span class="nv">$tDrive</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$SQL</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_SQL</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$SQL</span> <span class="p">=</span> <span class="nv">$SQL</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;SQL: &#39;</span> <span class="p">+</span> <span class="nv">$SQL</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Function to bring drive online and format ] -----</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">set-driveOnline</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$driveLetter</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$diskNumber</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$diskOnline</span> <span class="p">=</span> <span class="nb">Get-Disk</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Number</span> <span class="o">-EQ</span> <span class="nv">$diskNumber</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$diskOnline</span><span class="p">.</span><span class="py">OperationalStatus</span> <span class="o">-eq</span> <span class="s1">&#39;offline&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Get-Disk</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Number</span> <span class="o">-EQ</span> <span class="nv">$diskNumber</span> <span class="p">|</span> <span class="nb">Set-Disk</span> <span class="n">-IsOffline</span> <span class="vm">$False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$disksize</span> <span class="p">=</span> <span class="nb">Get-Disk</span> <span class="n">-Number</span> <span class="nv">$diskNumber</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">size</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$disksize</span> <span class="p">=</span> <span class="nv">$disksize</span><span class="p">.</span><span class="py">size</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$disksize</span> <span class="p">=</span> <span class="nv">$disksize</span><span class="p">/</span><span class="mf">1073741824</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Disk &#39;</span> <span class="p">+</span> <span class="nv">$diskNumber</span> <span class="p">+</span> <span class="s1">&#39; Size: &#39;</span> <span class="p">+</span> <span class="nv">$disksize</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$disksize</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Initialize-Disk</span> <span class="nv">$diskNumber</span> <span class="n">-PartitionStyle</span> <span class="n">GPT</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="c"># End if</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="nb">New-Partition</span> <span class="n">-DiskNumber</span> <span class="nv">$diskNumber</span> <span class="n">-UseMaximumSize</span> <span class="n">-DriveLetter</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$SQL</span> <span class="o">-eq</span> <span class="s1">&#39;True&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Format-Volume</span> <span class="n">-DriveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-FileSystem</span> <span class="n">NTFS</span> <span class="n">-NewFileSystemLabel</span> <span class="s2">&#34;SQL Data&#34;</span> <span class="n">-AllocationUnitSize</span> <span class="mf">65536</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Format-Volume</span> <span class="n">-DriveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-FileSystem</span> <span class="n">NTFS</span> <span class="n">-NewFileSystemLabel</span> <span class="s2">&#34;APP Data&#34;</span> <span class="n">-AllocationUnitSize</span> <span class="mf">4096</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$global:diskNumber</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Disk Number: &#39;</span> <span class="p">+</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># end if offline</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$global:diskNumber</span> <span class="p">=</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Disk Number: &#39;</span> <span class="p">+</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$eDrive</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$driveLetter</span> <span class="p">=</span> <span class="s1">&#39;E&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Drive Letter: &#39;</span> <span class="p">+</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># run function</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set-driveOnline</span> <span class="n">-driveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-diskNumber</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$lDrive</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$driveLetter</span> <span class="p">=</span> <span class="s1">&#39;L&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Drive Letter: &#39;</span> <span class="p">+</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># run function</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set-driveOnline</span> <span class="n">-driveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-diskNumber</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$tDrive</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$driveLetter</span> <span class="p">=</span> <span class="s1">&#39;T&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Drive Letter: &#39;</span> <span class="p">+</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># run function</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set-driveOnline</span> <span class="n">-driveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-diskNumber</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end if</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<ul>
<li>This screen shot shows how the drives status will be in the Windows Server Disk Management when the New Server Build is Complete. No additional steps are required to start using the drives.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-06.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-06.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>This screen shot shows where the grains file is saved.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-07.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-07.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>This screen shot shows the grains file contents.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-08.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-08.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-08.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>Saving information as grains data is a great way to save input data when creating new servers.</li>
<li>The combination of having Salt State files run PowerShell scripts is very powerful when creating new Windows Servers with VMware Aria Automation.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>When I write about <b>VMware Aria Automation</b>, I always say there are many ways to accomplish the same task.  <b>VMware Aria Automation Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your VMware Aria Suite Advanced/Enterprise license. If you own the VMware Aria Suite, you own VMware Aria Automation Config.</p>
<ul>
<li>VMware Aria Automation = vRealize Automation</li>
<li>VMware Aria Automation Config = SaltStack Config</li>
</ul></div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Automation and SaltStack Config Resource</title>
    <link>https://www.vcrocs.info/vmware-aria-automation-saltstack-config-resource/</link>
    <pubDate>Sat, 11 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-aria-automation-saltstack-config-resource/</guid>
    <description><![CDATA[<p><strong>How to start using the SaltStack Config Resource with VMware Aria Automation Cloud Templates.</strong></p>
<hr>
<h6 id="use-case">Use Case</h6>
<p>VMware Aria Automation Config has been the Configuration Management tool that I like to use with Servers, Windows and Linux. The first process to use salt with new servers is to install the salt minion, which is an agent that needs installed on the Server. There are many different ways to install the salt minion agent and what I wanted to show in this blog post is how to use the SaltStack Config Resource with the VMware Automation Cloud Template. When creating a Cloud Template in VMware Aria Automation, one of the options is to add the SaltStack Config Resource.</p>
<hr>
<p>What the SaltStack Config Resource provides:</p>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Automated Salt minion installation</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Ability to add grains data to minion when the minion installation completes. See example yaml code.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> The minion key is auto-accepted in SaltStack Config</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> If you delete the VM deployment in VMware Aria Automation, the minion key will be automatically removed from VMware Aria Automation Config. Built-in decommission.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Ability to run a state file when the minion installation completes. See example yaml code.</li>
</ul>
<hr>
<p>Requirements:</p>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> This blog was created using VMware Aria Automation version 8.11.0. The process may vary for different version of VMware Aria Automation.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> TCP Port 445 needs to be open between VMware Aria Automation Config server and the new Server that the minion is being installed on.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Check the VMware Aria Automation Config server. The OS that you are using for the new server must have an agent file in the /etc/salt/cloud.deploy.d folder.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Check the VMware Aria Automation Config server. The version of the agent files in the /etc/salt/cloud.deploy.d folder must match the version of the salt master.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> The script that creates the grains file when using the SaltStack Config Resource and VMware Aria cloud templates with Windows Servers needs to be manually replaced on the VMware Aria Automation Config Server (salt master). Future VMware Aria Automation Config installs with LCM (VMware Aria Suite LifeCycle) will include this fix. The script creates the grains file in the incorrect folder.
<ul>
<li>Location of script on salt master: /lib64/python3.7/site-packages/salt/utils/cloud.py</li>
<li>Make a copy of the original cloud.py before replacing with updated version.</li>
<li>Where to get new script: <a href="https://github.com/saltstack/salt/blob/master/salt/utils/cloud.py" target="_blank" rel="noopener noreffer ">https://github.com/saltstack/salt/blob/master/salt/utils/cloud.py</a></li>
<li>The grains file will be created in &ldquo;C:\ProgramData\Salt Project\Salt\conf&rdquo; after the script is updated.</li>
<li><strong>Update:</strong> When I installed VMware Aria Automation Config 8.12, 8.13 and 8.14 I still needed to update the cloud.py file for the grains to be created properly.</li>
</ul>
</li>
</ul>
<hr>
<h6 id="current-os-support">Current OS support:</h6>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-03.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-03.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<p>Any OS not listed is currently not supported at this time.</p>
<hr>
<h6 id="cloud-template--windows-2019-server">Cloud Template | Windows 2019 Server:</h6>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-02.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-02.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>Windows 2019 Server cloud template yaml code:</li>
<li>You <strong>MUST</strong> add the remoteAccess code in the Virtual_Machine section for minion installation.</li>
<li>grains data is added in the additionalMinionParams section of the yaml code.</li>
<li>When the minion agent installation is complete, you will see the new minion listed in the targets automatically. You do not need to accept the minion key.</li>
<li>click to expand yaml code</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span><span class="lnt">97
</span><span class="lnt">98
</span><span class="lnt">99
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">FEformatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">DBH-194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">EDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">E-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">FDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">F-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">SQL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Selecting SQL will format all DATA drives with 64k allocation.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;True&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Network</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Virtual_Machine</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">medium</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Network.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">attachedDisks</span><span class="p">:</span><span class="w"> </span><span class="l">${map_to_object(resource.Cloud_Volume_E[*].id + resource.Cloud_Volume_F[*].id , &#34;source&#34;)}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">edrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">fdrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.FDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">sql</span><span class="p">:</span><span class="w"> </span><span class="l">${input.SQL}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max SCSI Controllers is 4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max Unit per SCSI Controllers is 15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_E</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.EDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_F</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.FDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.FDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_SaltStack_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.SaltStack</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${resource.Virtual_Machine.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">masterId</span><span class="p">:</span><span class="w"> </span><span class="l">saltstack_enterprise_installer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stateFiles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/windows.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">saltEnvironment</span><span class="p">:</span><span class="w"> </span><span class="l">base</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># - This is how you add grains data to the minion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">additionalMinionParams</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Roles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">database</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_E_Drive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_F_Drive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.FDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.SQL}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="cloud-template--ubuntu-20-server">Cloud Template | Ubuntu 20 Server:</h6>
<ul>
<li>Ubuntu 20 Server cloud template yaml code:</li>
<li>You <strong>MUST</strong> add the remoteAccess code in the Virtual_Machine section for minion installation.</li>
<li>grains data is added in the additionalMinionParams section of the yaml code.</li>
<li>When the minion agent installation is complete, you will see the new minion listed in the targets automatically. You do not need to accept the minion key.</li>
<li>click to expand yaml code</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">DBH-197</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.197</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Network_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Machine_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">small</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">env:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_Network_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_SaltStack_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.SaltStack</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${resource.Cloud_Machine_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">masterId</span><span class="p">:</span><span class="w"> </span><span class="l">saltstack_enterprise_installer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stateFiles</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/ubuntu.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">saltEnvironment</span><span class="p">:</span><span class="w"> </span><span class="l">base</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">additionalMinionParams</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">roles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">webserver</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<ul>
<li>This screen shot shows how to get the &ldquo;masterId&rdquo; to use in the Cloud Template yaml code.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-05.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-05.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>This screen shot shows how to see the SaltMaster version.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-06.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-06.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="completed-deployment">Completed Deployment</h6>
<ul>
<li>This shows what the deployment looks like after it is completed.</li>
<li>Grain data is shown within the Salt Configuration section.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-01.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-01.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="custom-form-to-create-the-windows-server-deployment">Custom Form to create the Windows Server Deployment</h6>
<ul>
<li>Example of a Custom Form for Windows Server Builds</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-04.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-04.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>See &ldquo;Requirements&rdquo; listed above</li>
<li>See &ldquo;What the SaltStack Config Resource provides&rdquo; above</li>
<li>If you need to update the minion agent files on the salt master server, in folder /etc/salt/cloud.deploy.d, you will have to have your VMware account team download the files for you or open an SR. The files are not public facing.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="helpful-links">Helpful Links</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>VMware Aria Automation | Ansible Links I found to be very helpful:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><a href="https://docs.vmware.com/en/vRealize-Automation/8.11/Using-and-Managing-Cloud-Assembly/GUID-5555BD8D-506C-40C9-8CE9-138297FB8F30.html#GUID-5555BD8D-506C-40C9-8CE9-138297FB8F30" target="_blank" rel="noopener noreffer ">Configure a SaltStack Config integration in vRealize Automation</a></li>
<li><a href="https://docs.vmware.com/en/vRealize-Automation/8.11/Using-and-Managing-Cloud-Assembly/GUID-70F29C74-848F-41F2-91B1-8E96A918DD93.html" target="_blank" rel="noopener noreffer ">Add the SaltStack Config resource to the cloud template</a></li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>When I write about <b>VMware Aria Automation</b>, I always say there are many ways to accomplish the same task.  <b>VMware Aria Automation Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your VMware Aria Suite Advanced/Enterprise license. If you own the VMware Aria Suite, you own VMware Aria Automation Config.</p>
<ul>
<li>VMware Aria Automation = vRealize Automation</li>
<li>VMware Aria Automation Config = SaltStack Config</li>
</ul></div>
        </div>
    </div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 9</title>
    <link>https://www.vcrocs.info/saltstack-config-part-09/</link>
    <pubDate>Fri, 10 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-09/</guid>
    <description><![CDATA[<p>Part 9: Using salt-api with PowerShell for Windows Server Automation</p>
<hr>
<p><strong>Update: It was brought to my attention that adding cherypy will break the salt master. After a quick test in my lab I had the same issue with the newest version of SaltStack Config. DO NOT use this blog post until I get a working version in my lab.</strong></p>
<p><strong>If you want to work with the VMware Aria Automation Config API please use this newer Blog Post that I created:</strong></p>
<ul>
<li><a href="https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-config-api/" target="_blank" rel="noopener noreffer ">Unlocking the Potential | VMware Aria Automation Config API</a></li>
</ul>
<hr>
<p>This post is to show how to use PowerShell to make RESTful API calls to SaltStack Config. This is something that I have wanted to do for awhile. I could never find any examples in my Google searches, so I took the time to learn how the examples that use curl work and translated that into PowerShell Code. I hope some Windows Server Admins will find this post helpful. I like using salt to do Windows Server Configuration Management more than remote PowerShell. You can run changes against many servers at the exact same time instead of looping thru a list of servers names.</p>
<p>I am also going to look at use salt-api with vRealize Automation ABX action scripts.</p>
<p>In some previous posts I used the POSH-SSH module but when you use the salt-api, the PowerShell Module POSH-SSH is no longer needed.</p>
<hr>
<h6 id="configuration-changes-to-the--saltstack-config-server">Configuration Changes to the  SaltStack Config Server:</h6>
<div>
  <b>My SaltStack Config Server (SSC) is what VMware provides when using Life Cycle Manager (LCM) running Photon OS.</b>
</div>
<div>
  <b>The following steps are what I needed to do in my Lab environment from the SSC CLI to enable salt-api:</b>
</div>
<div>
  <br>
</div>
<div>
  <b> * Always make sure you have a good snap | backup before making any changes to SSC Server</b>
</div>
<div>
  <br>
</div>
<ul>
<li>Install CherryPy:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">pip3</span> <span class="n">install</span> <span class="n">cherrypy</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Install the PyOpenSSL package:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyopenssl</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Generate a self-signed certificate:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="p">-</span><span class="n">-local</span> <span class="n">tls</span><span class="p">.</span><span class="n">create_self_signed_cert</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>open firewall port 8000:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">iptables</span> <span class="n">-A</span> <span class="n">INPUT</span> <span class="n">-i</span> <span class="n">eth0</span> <span class="n">-p</span> <span class="n">tcp</span> <span class="p">-</span><span class="n">-dport</span> <span class="mf">8000</span> <span class="n">-j</span> <span class="n">ACCEPT</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Edit /etc/salt/master file:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">vi</span> <span class="p">/</span><span class="n">etc</span><span class="p">/</span><span class="n">salt</span><span class="p">/</span><span class="n">master</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>Add these lines to the /etc/salt/master file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">external_auth</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">pam</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">root</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="p">.*</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">rest_cherrypy</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">port</span><span class="err">:</span> <span class="mf">8000</span>
</span></span><span class="line"><span class="cl">  <span class="n">ssl_crt</span><span class="err">:</span> <span class="p">/</span><span class="n">etc</span><span class="p">/</span><span class="n">pki</span><span class="p">/</span><span class="n">tls</span><span class="p">/</span><span class="n">certs</span><span class="p">/</span><span class="n">localhost</span><span class="p">.</span><span class="py">crt</span>
</span></span><span class="line"><span class="cl">  <span class="n">ssl_key</span><span class="err">:</span> <span class="p">/</span><span class="n">etc</span><span class="p">/</span><span class="n">pki</span><span class="p">/</span><span class="n">tls</span><span class="p">/</span><span class="n">certs</span><span class="p">/</span><span class="n">localhost</span><span class="p">.</span><span class="n">key</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Restart salt-master and check service status for any errors:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">restart</span> <span class="nb">salt-master</span>
</span></span><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">status</span> <span class="nb">salt-master</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Enable | Start salt-api and check service status for any errors:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">enable</span> <span class="nb">salt-api</span>
</span></span><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="nb">start salt-api</span>
</span></span><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">status</span> <span class="nb">salt-api</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="tests-to-make-sure-saltstack-config-changes-are-working">Tests to make sure SaltStack Config Changes are working:</h6>
<ul>
<li>I did all this PowerShell code from my mac.  To use self-signed certs I use -SkipCertificateCheck. On a Windows OS the code is different.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s1">&#39;https://192.168.86.141:8000&#39;</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Results</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">StatusCode</span>        <span class="err">:</span> <span class="mf">200</span>
</span></span><span class="line"><span class="cl"><span class="n">StatusDescription</span> <span class="err">:</span> <span class="n">OK</span>
</span></span><span class="line"><span class="cl"><span class="n">Content</span>           <span class="err">:</span> <span class="p">{</span><span class="s2">&#34;return&#34;</span><span class="err">:</span> <span class="s2">&#34;Welcome&#34;</span><span class="p">,</span> <span class="s2">&#34;clients&#34;</span><span class="err">:</span> <span class="p">[</span><span class="s2">&#34;local&#34;</span><span class="p">,</span> <span class="s2">&#34;local_async&#34;</span><span class="p">,</span> <span class="s2">&#34;local_batch&#34;</span><span class="p">,</span> <span class="s2">&#34;local_subset&#34;</span><span class="p">,</span> <span class="s2">&#34;runner&#34;</span><span class="p">,</span> <span class="s2">&#34;runner_async&#34;</span><span class="p">,</span> <span class="s2">&#34;ssh&#34;</span><span class="p">,</span> <span class="s2">&#34;wheel&#34;</span><span class="p">,</span> <span class="s2">&#34;wheel_async&#34;</span><span class="p">]}</span>
</span></span><span class="line"><span class="cl"><span class="n">RawContent</span>        <span class="err">:</span> <span class="n">HTTP</span><span class="p">/</span><span class="mf">1.1</span> <span class="mf">200</span> <span class="n">OK</span>
</span></span><span class="line"><span class="cl">                    <span class="n">Server</span><span class="err">:</span> <span class="n">CherryPy</span><span class="p">/</span><span class="mf">8.9</span><span class="p">.</span><span class="py">1</span>
</span></span><span class="line"><span class="cl">                    <span class="n">Date</span><span class="err">:</span> <span class="n">Sat</span><span class="p">,</span> <span class="mf">11</span> <span class="n">Jun</span> <span class="mf">2022</span> <span class="mf">20</span><span class="err">:</span><span class="mf">57</span><span class="err">:</span><span class="mf">46</span> <span class="n">GMT</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Access-Control</span><span class="n">-Allow-Origin:</span> <span class="p">*</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Access-Control</span><span class="n">-Expose-Headers:</span> <span class="n">GET</span><span class="p">,</span> <span class="n">POST</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Access-Control</span><span class="n">-Allow-Credentials:</span> <span class="n">true</span>
</span></span><span class="line"><span class="cl">                    <span class="n">Vary</span><span class="err">:</span> <span class="nb">Accept-E</span><span class="err">…</span>
</span></span><span class="line"><span class="cl"><span class="n">Headers</span>           <span class="err">:</span> <span class="p">{[</span><span class="no">Server, System.String[]], [Date, System.String[]</span><span class="p">],</span> <span class="p">[</span><span class="nb">Access-Control</span><span class="n">-Allow-Origin</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">String</span><span class="p">[]],</span> <span class="p">[</span><span class="nb">Access-Control</span><span class="n">-Expose-Headers</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">                    <span class="n">System</span><span class="p">.</span><span class="n">String</span><span class="p">[]]</span><span class="err">…</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">Images</span>            <span class="err">:</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">InputFields</span>       <span class="err">:</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">Links</span>             <span class="err">:</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">RawContentLength</span>  <span class="err">:</span> <span class="mf">146</span>
</span></span><span class="line"><span class="cl"><span class="n">RelationLink</span>      <span class="err">:</span> <span class="p">{}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>
<p>Make sure you see StatusCode: 200</p>
</li>
<li>
<p>Next step is to make sure you get a token:</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="c"># --- In my code I show the PassWord. In Production DO NOT DO THIS.</span>
</span></span><span class="line"><span class="cl"><span class="c"># --- There are so many different ways to include encrypted PWs in the code. </span>
</span></span><span class="line"><span class="cl"><span class="c"># --- Use what works best in your environment.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{ &#34;username&#34;: &#34;root&#34;,&#34;password&#34;: &#34;HackMe!&#34;,&#34;eauth&#34;: &#34;pam&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Fetch New Token from salt master</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/login&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Results</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">return</span>
</span></span><span class="line"><span class="cl"><span class="p">------</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="vm">@</span><span class="p">{</span><span class="n">token</span><span class="p">=</span><span class="n">6696846c802f78d5326a69b79d36e95015d37f5a</span><span class="p">;</span> <span class="n">expire</span><span class="p">=</span><span class="mf">1655025071.22838</span><span class="p">;</span> <span class="n">start</span><span class="p">=</span><span class="mf">1654981871.22838</span><span class="p">;</span> <span class="n">user</span><span class="p">=</span><span class="n">root</span><span class="p">;</span> <span class="n">eauth</span><span class="p">=</span><span class="n">pam</span><span class="p">;</span> <span class="n">perms</span><span class="p">=</span><span class="n">System</span><span class="p">.</span><span class="n">Object</span><span class="p">[]}}</span>
</span></span><span class="line"><span class="cl"><span class="n">6696846c802f78d5326a69b79d36e95015d37f5a</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>You will see &ldquo;token=&rdquo; in the return data</li>
</ul>
<hr>
<h6 id="powershell-api-code-examples">PowerShell API Code Examples:</h6>
<ul>
<li>Run a test.ping</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;test.ping&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{ &#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Showing different ways to show the return data</span>
</span></span><span class="line"><span class="cl"><span class="c">#$fetch</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Check disk.usage</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;disk.usage&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{ &#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Showing different ways to show the return data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span><span class="p">.</span><span class="s1">&#39;C:\&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span><span class="p">.</span><span class="s1">&#39;C:\&#39;</span><span class="p">.</span><span class="n">capacity</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Check Service Status</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;service.status&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$arg</span>               <span class="p">=</span> <span class="s1">&#39;spooler&#39;</span> <span class="c"># -Service Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{&#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;arg&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$arg</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Service Status | True = Running | False = Stopped</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Stop Service</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;service.stop&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$arg</span>               <span class="p">=</span> <span class="s1">&#39;spooler&#39;</span> <span class="c"># -Service Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{&#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;arg&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$arg</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Service Stopped | True = Stopped | False = Not Stopped</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Disable Service</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;service.disable&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$arg</span>               <span class="p">=</span> <span class="s1">&#39;spooler&#39;</span> <span class="c"># -Service Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{&#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;arg&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$arg</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Service Disabled | True = Disabled | False = Not Disabled</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>I hope the code was helpful to get started.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>OOTB (Out of the Box) a SaltStack Config Server is NOT setup to use CherryPY to use api calls.</li>
<li>Using PowerShell Invoke-RestMethod is a great way to automate SaltStack Config.</li>
<li>The more I use salt with Windows Servers the more I like how it works.  So fast. Many different ways to do automation | configuration Management.</li>
<li>To get the proper args for a salt function I always test from the CLI.</li>
<li><a href="https://docs.saltproject.io/en/latest/ref/netapi/all/salt.netapi.rest_cherrypy.html" target="_blank">SaltStack REST_CHERRYPY Documentation</a></li>
<li><a href="https://docs.saltproject.io/en/latest/topics/eauth/index.html"                       target="_blank">SaltStack EXTERNAL AUTHENTICATION SYSTEM Documentation</a></li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 8</title>
    <link>https://www.vcrocs.info/saltstack-config-part-08/</link>
    <pubDate>Sat, 12 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-08/</guid>
    <description><![CDATA[<p>Part 8: Pouring the salt grains</p>
<hr>
<p>My previous posts about grain data were to show how to add minion grain data during the creation of a new server with vRA using PowerShell. This post I want to show how I&rsquo;m going to maintain the grain data that is not default out of the box grain data.</p>
<hr>
<p>Windows Server grain data not available out of the of box that I want to add to every minion AND make sure the grain data stays up to date:</p>
<ul>
<li>Windows Server Features | Roles</li>
<li>Windows Server Installed Software</li>
<li>Windows Server Running Services</li>
</ul>
<hr>
<p>These are the steps that I use to maintain custom grain data with a Windows Server:</p>
<ul>
<li>Create a PowerShell Script that can run locally on a minion. Add the script to the SaltStack Config File Manager. Use salt-call to run salt.functions locally on a minion. See screen shot and my code examples below.</li>
<li>Create a SaltStack Config Job to execute the PowerShell Script remotely on the minion. See Screen Shot.</li>
<li>Create a SaltStack Config Schedule to run the job that you create. The job can run every day, once a week, every 4 hours. Whatever makes sense for your use case. See Screen Shot.</li>
</ul>
<hr>
<p>If you want to run a script locally on a minion and use salt functions that is where you use the salt-call command. After you learn the salt-functions and are logged into a Windows Server locally, you can still use salt commands by using salt-call.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- example code</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="p">-</span><span class="n">-version</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">test</span><span class="p">.</span><span class="py">ping</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Show Disk Usage</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">disk</span><span class="p">.</span><span class="py">usage</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Show Installed Features|Roles</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">win_servermanager</span><span class="p">.</span><span class="py">list_installed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Show Installed Sofwtare</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">pkg</span><span class="p">.</span><span class="n">list_pkgs</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p><a href="https://docs.saltproject.io/en/latest/ref/cli/salt-call.html" target="_blank" rel="noopener noreffer ">Link to salt-call Documentation</a></p>
<hr>
<h6 id="step-1---add-script-to-saltstack-config-file-manager">Step 1 - Add script to SaltStack Config File Manager:</h6>
<p>See code examples below to add Windows Server Features|Roles, Installed Software, and Runnings Services as grain data.</p>
<p><figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-49.PNG" title="/saltstack-config-part-08/Salt-49.PNG" data-thumbnail="/saltstack-config-part-08/Salt-49.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-50.PNG" title="/saltstack-config-part-08/Salt-50.PNG" data-thumbnail="/saltstack-config-part-08/Salt-50.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure></p>
<h6 id="step-3---create-saltstack-config-schedule">Step 3 - Create SaltStack Config Schedule:</h6>
<figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-51.PNG" title="/saltstack-config-part-08/Salt-51.PNG" data-thumbnail="/saltstack-config-part-08/Salt-51.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<h6 id="code-examples">Code Examples:</h6>
<h6 id="--add-windows-features--roles-as-grain-data">- Add Windows Features | Roles as grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  This Script is used to Get Windows Servers Features and add as Grain Data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Windows Servers Features
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">PARAMETER</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No Parameters
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">INPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No inputs
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">OUTPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  salt grain data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.00
</span></span></span><span class="line"><span class="cl"><span class="cm">  Author:         Dale Hassinger
</span></span></span><span class="line"><span class="cl"><span class="cm">  Creation Date:  04/20/2022
</span></span></span><span class="line"><span class="cl"><span class="cm">  Purpose/Change: Initial script development
</span></span></span><span class="line"><span class="cl"><span class="cm">  Revisions:
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    N/A
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start of Code ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Minion Get Windows Server Features Installed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains features data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_Windows_Feature force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call win_servermanager.list_installed --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl"><span class="c">#$results</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$results</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="c">#$features</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="c">#$features</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;@{&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;}&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span><span class="p">.</span><span class="py">trim</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;=&#34;</span><span class="p">,</span><span class="s2">&#34; | &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl"><span class="c">#$features</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$feature</span> <span class="k">in</span> <span class="nv">$features</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_Windows_Feature &#34;&#39;</span> <span class="p">+</span> <span class="nv">$feature</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains last update data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_last_grains_update force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add a Date that grains last updated</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy | hh:mm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$grainsupdateDate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_last_grains_update &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsupdateDate</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Sync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="--add-windows-server-installed-packagessoftware-as-grain-data">- Add Windows Server Installed Packages|Software as grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  This Script is used to Get Windows Installed Packages and add as Grain Data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Windows Servers Installed Packages
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">PARAMETER</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No Parameters
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">INPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No inputs
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">OUTPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  salt grain data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.00
</span></span></span><span class="line"><span class="cl"><span class="cm">  Author:         Dale Hassinger
</span></span></span><span class="line"><span class="cl"><span class="cm">  Creation Date:  04/20/2022
</span></span></span><span class="line"><span class="cl"><span class="cm">  Purpose/Change: Initial script development
</span></span></span><span class="line"><span class="cl"><span class="cm">  Revisions:
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    N/A
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start of Code ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Minion Get Windows Server Installed Packages|Software</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains features data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_Windows_Installed_Software force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call pkg.list_pkgs --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl"><span class="c">#$results</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$results</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;@{&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;}&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">trim</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;=&#34;</span><span class="p">,</span><span class="s2">&#34; | &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl"><span class="c">#$installedPackages</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$installedPackage</span> <span class="k">in</span> <span class="nv">$installedPackages</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_Windows_Installed_Software &#34;&#39;</span> <span class="p">+</span> <span class="nv">$installedPackage</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains last update data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_last_grains_update force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add a Date that grains last updated</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy | hh:mm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$grainsupdateDate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_last_grains_update &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsupdateDate</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Sync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="--add-windows-running-services-as-grain-data">- Add Windows Running Services as grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  This Script is used to Get Windows Servers Running Services and add as Grain Data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Windows Servers Running Services
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">PARAMETER</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No Parameters
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">INPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No inputs
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">OUTPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  salt grain data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.00
</span></span></span><span class="line"><span class="cl"><span class="cm">  Author:         Dale Hassinger
</span></span></span><span class="line"><span class="cl"><span class="cm">  Creation Date:  04/20/2022
</span></span></span><span class="line"><span class="cl"><span class="cm">  Purpose/Change: Initial script development
</span></span></span><span class="line"><span class="cl"><span class="cm">  Revisions:
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    N/A
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start of Code ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Minion Get Windows Server Running Services</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains running services data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_Windows_Services_Running force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Get all Running Services</span>
</span></span><span class="line"><span class="cl"><span class="nv">$serviceNames</span> <span class="p">=</span> <span class="nb">Get-Service</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="py">Status</span> <span class="o">-eq</span> <span class="s1">&#39;Running&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create Array</span>
</span></span><span class="line"><span class="cl"><span class="nv">$servicesGrains</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add Service data to the array</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$serviceName</span> <span class="k">in</span> <span class="nv">$serviceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$grainString</span> <span class="p">=</span> <span class="nv">$serviceName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39; | &#39;</span> <span class="p">+</span> <span class="nv">$serviceName</span><span class="p">.</span><span class="py">DisplayName</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$servicesGrains</span> <span class="p">=</span> <span class="nv">$servicesGrains</span> <span class="p">+</span> <span class="nv">$grainString</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl"><span class="c">#$servicesGrains</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add Windows Running Services as Grain Data</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$servicesGrain</span> <span class="k">in</span> <span class="nv">$servicesGrains</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_Windows_Services_Running &#34;&#39;</span> <span class="p">+</span> <span class="nv">$servicesGrain</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains last update data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_last_grains_update force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add a Date that grains last updated</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy | hh:mm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$grainsupdateDate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_last_grains_update &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsupdateDate</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Sync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="saltstack-config-target-using-windows-server-running-service-sql-server">SaltStack Config Target using Windows Server Running Service (SQL Server):</h6>
<figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-52.PNG" title="/saltstack-config-part-08/Salt-52.PNG" data-thumbnail="/saltstack-config-part-08/Salt-52.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Windows Server Features|Roles make a great way to target minions.</li>
<li>Windows Server installed software also makes a great way to target minions.</li>
<li>Windows Server Running Services is a good way to target minions.</li>
<li>If you add custom grain data when the server is created you also need a way to maintain the grain data so it stays up to date and is current.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 7</title>
    <link>https://www.vcrocs.info/saltstack-config-part-07/</link>
    <pubDate>Fri, 14 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-07/</guid>
    <description><![CDATA[<p>VMware vRealize SaltStack Config as a Windows Server Admin - Part 7</p>
<hr>
<div>
The more I use <b>VMware vRealize SaltStack Config</b> as a <b>Windows Server Admin</b> the more I see the importance of having grain information added to the minion to be able to target servers many different ways. During a recent discussion it was suggested to have the ability to target Windows Server minions by the Windows server Features|Roles that were installed on the server and by which software was installed on a server.  There are built-in salt functions to get Features|Roles and installed software.  Here is the code I used to get the information and add to the minion grain file using PowerShell.  
</div>
<p>This will allow you to create targets to:</p>
<ul>
<li>minions with specific VMware Tools Versions</li>
<li>minion with Web Server Feature|Role enabled</li>
<li>etc&hellip;</li>
</ul>
<hr>
<h6 id="salt-functions">Salt Functions:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># The POSH-SSH PowerShell module MUST be installed to use this code.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Name of Minion that you want to add grain data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minion</span> <span class="p">=</span> <span class="s1">&#39;DBH-210&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ SSH Connection to SalStack Config Server ] ------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Making SSH Connection to SaltStack Config Server...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Server</span>   <span class="p">=</span> <span class="s1">&#39;ssc.vCROCS.local&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span> <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Password</span> <span class="p">=</span> <span class="s1">&#39;VMware#1&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># The next line is how to create the encrypted password</span>
</span></span><span class="line"><span class="cl"><span class="nv">$psPassword</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="n">-String</span> <span class="nv">$Password</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl"><span class="nv">$creds</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">-typename</span> <span class="n">System</span><span class="p">.</span><span class="py">Management</span><span class="p">.</span><span class="py">Automation</span><span class="p">.</span><span class="py">PSCredential</span> <span class="n">-argumentlist</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$psPassword</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;ComputerName&#34;</span> <span class="p">=</span> <span class="nv">$Server</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Credential&#34;</span>   <span class="p">=</span> <span class="nv">$creds</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># SSH Connection to SaltStack Server</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshSession</span> <span class="p">=</span> <span class="nb">Get-SSHSession</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$sshSession</span><span class="p">.</span><span class="py">SessionId</span> <span class="o">-eq</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s1">&#39;SSH Connection to SSC Server already completed&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s1">&#39;Creating new SSH Connection to SSC Server&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">New-SSHSession</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start Adding Grain Data ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion Get Windows Server Features|Roles Installed ] ------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Getting Windows Server Features|Roles Installed...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; win_servermanager.list_installed --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span><span class="p">.</span><span class="py">PsObject</span><span class="p">.</span><span class="py">Properties</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="p">|</span> <span class="nb">ConvertTo-Xml</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Append Each Feature|Role information to grains</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Appending Windows Server Features|Roles Installed to grains...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$grainsKey</span> <span class="p">=</span> <span class="s1">&#39;vCROCS_Windows_Feature&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$feature</span> <span class="k">in</span> <span class="nv">$features</span><span class="p">.</span><span class="py">Objects</span><span class="p">.</span><span class="py">Object</span><span class="p">.</span><span class="n">Property</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$grainsValue</span> <span class="p">=</span> <span class="nv">$feature</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39; | &#39;</span> <span class="p">+</span> <span class="nv">$feature</span><span class="p">.</span><span class="s1">&#39;#text&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#39;</span> <span class="p">+</span> <span class="nv">$grainsKey</span> <span class="p">+</span> <span class="s1">&#39; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsValue</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion Get Windows Server Installed Software ] ------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Getting Windows Server Installed Software...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Get Installed Software</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; pkg.list_pkgs --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">PsObject</span><span class="p">.</span><span class="py">Properties</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="p">|</span> <span class="nb">ConvertTo-Xml</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$grainsKey</span> <span class="p">=</span> <span class="s1">&#39;vCROCS_Windows_Installed_Software&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Append Windows Server Installed Software to grains</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Appending Windows Server Installed Software to grains...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$installedPackage</span> <span class="k">in</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">Objects</span><span class="p">.</span><span class="py">Object</span><span class="p">.</span><span class="n">Property</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$grainsValue</span> <span class="p">=</span> <span class="nv">$installedPackage</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39; | &#39;</span> <span class="p">+</span> <span class="nv">$installedPackage</span><span class="p">.</span><span class="s1">&#39;#text&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#39;</span> <span class="p">+</span> <span class="nv">$grainsKey</span> <span class="p">+</span> <span class="s1">&#39; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsValue</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Add a Date that grains last updated ] ----------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsValue</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsKey</span> <span class="p">=</span> <span class="s1">&#39;vCROCS_last_grains_update&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#39;</span> <span class="p">+</span> <span class="nv">$grainsKey</span> <span class="p">+</span> <span class="s1">&#39; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsValue</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Adding Grain Data ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Sync minion Grain Data ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Syncing Minion Grain Data...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c"># Sync Grains Data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Disconnect from SaltStack Config Server ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Disconnecting from SaltStack Config Server...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Remove-SSHSession</span> <span class="n">-SessionId</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="example-grains-file-after-running-script">Example grains file after running script</h6>
<p>The default location of the grains file is in directory “C:\salt\conf&quot;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">vCROCS_Windows_Feature</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">FileAndStorage-Services</span> <span class="p">|</span> <span class="n">File</span> <span class="n">and</span> <span class="n">Storage</span> <span class="n">Services</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="p">-</span><span class="mf">45</span><span class="n">-Core</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">4.7</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="p">-</span><span class="mf">45</span><span class="n">-Features</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">4.7</span> <span class="n">Features</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="n">-Core</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">3.5</span> <span class="p">(</span><span class="n">includes</span> <span class="p">.</span><span class="py">NET</span> <span class="mf">2.0</span> <span class="n">and</span> <span class="mf">3.0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="n">-Features</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">3.5</span> <span class="n">Features</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-WCF</span><span class="n">-Services45</span> <span class="p">|</span> <span class="n">WCF</span> <span class="n">Services</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-WCF</span><span class="n">-TCP-PortSharing45</span> <span class="p">|</span> <span class="n">TCP</span> <span class="n">Port</span> <span class="n">Sharing</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">PowerShell</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span> <span class="mf">5.1</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">PowerShell-ISE</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span> <span class="nb">ISE
</span></span></span><span class="line"><span class="cl"><span class="nb"></span><span class="p">-</span> <span class="n">PowerShellRoot</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">PowerShell-V2</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span> <span class="mf">2.0</span> <span class="n">Engine</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">RSAT</span> <span class="p">|</span> <span class="n">Remote</span> <span class="n">Server</span> <span class="n">Administration</span> <span class="n">Tools</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">RSAT-Feature</span><span class="n">-Tools</span> <span class="p">|</span> <span class="n">Feature</span> <span class="n">Administration</span> <span class="n">Tools</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">RSAT-SNMP</span> <span class="p">|</span> <span class="n">SNMP</span> <span class="n">Tools</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">SNMP-Service</span> <span class="p">|</span> <span class="n">SNMP</span> <span class="n">Service</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">SNMP-WMI</span><span class="n">-Provider</span> <span class="p">|</span> <span class="n">SNMP</span> <span class="n">WMI</span> <span class="n">Provider</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">Storage-Services</span> <span class="p">|</span> <span class="n">Storage</span> <span class="n">Services</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">System-DataArchiver</span> <span class="p">|</span> <span class="n">System</span> <span class="n">Data</span> <span class="n">Archiver</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">Telnet-Client</span> <span class="p">|</span> <span class="n">Telnet</span> <span class="n">Client</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">WoW64-Support</span> <span class="p">|</span> <span class="n">WoW64</span> <span class="n">Support</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">XPS-Viewer</span> <span class="p">|</span> <span class="n">XPS</span> <span class="n">Viewer</span>
</span></span><span class="line"><span class="cl"><span class="n">vCROCS_Windows_Installed_Software</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Silverlight</span> <span class="p">|</span> <span class="mf">5.1</span><span class="p">.</span><span class="py">50918</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2013</span> <span class="n">Redistributable</span> <span class="p">(</span><span class="n">x64</span><span class="p">)</span> <span class="p">-</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span> <span class="p">|</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2013</span> <span class="n">x64</span> <span class="n">Additional</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span> <span class="p">|</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2013</span> <span class="n">x64</span> <span class="n">Minimum</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span> <span class="p">|</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2015</span><span class="p">-</span><span class="mf">2022</span> <span class="n">Redistributable</span> <span class="p">(</span><span class="n">x64</span><span class="p">)</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2015</span><span class="p">-</span><span class="mf">2022</span> <span class="n">Redistributable</span> <span class="p">(</span><span class="n">x86</span><span class="p">)</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X64</span> <span class="n">Additional</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X64</span> <span class="n">Minimum</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X86</span> <span class="n">Additional</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X86</span> <span class="n">Minimum</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Salt</span> <span class="n">Minion</span> <span class="mf">3003.1</span> <span class="p">(</span><span class="n">Python</span> <span class="mf">3</span><span class="p">)</span> <span class="p">|</span> <span class="mf">3003.1</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">UniversalForwarder</span> <span class="p">|</span> <span class="mf">8.2</span><span class="p">.</span><span class="py">4</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">VMware</span> <span class="n">Tools</span> <span class="p">|</span> <span class="mf">11.3</span><span class="p">.</span><span class="py">5</span><span class="p">.</span><span class="py">18557794</span>
</span></span><span class="line"><span class="cl"><span class="n">vCROCS_last_grains_update</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="mf">01</span><span class="p">/</span><span class="mf">14</span><span class="p">/</span><span class="mf">2022</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="saltstack-target-using-windows-server-software-installed">SaltStack Target using Windows Server Software Installed:</h6>
<p>Show all minions that have VMware Tools | 11.3.5.18557794 installed</p>
<figure><a class="lightgallery" href="/saltstack-config-part-07/Salt-48.PNG" title="/saltstack-config-part-07/Salt-48.PNG" data-thumbnail="/saltstack-config-part-07/Salt-48.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Windows Server Features|Roles make a great way to target minions.</li>
<li>Windows Server installed software also makes a great way to target minions.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 6</title>
    <link>https://www.vcrocs.info/saltstack-config-part-06/</link>
    <pubDate>Sat, 09 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-06/</guid>
    <description><![CDATA[<p>Part 6: How to use SaltStack Config with Windows Server and PowerShell</p>
<hr>
<p><a class="lightgallery" href="/saltstack-config-part-06/ps.png" title="/saltstack-config-part-06/ps.png" data-thumbnail="/saltstack-config-part-06/ps.png">
        
    </a><br>
<a class="lightgallery" href="/saltstack-config-part-06/powercli.png" title="/saltstack-config-part-06/powercli.png" data-thumbnail="/saltstack-config-part-06/powercli.png">
        
    </a></p>
<div>
The latest item on my journey with <b>VMware vRealize SaltStack Config</b> as a <b>Windows Server Admin</b> is going to be a lot PowerShell. I use PowerShell for a lot of Automation, Windows Server and Linux Server. When working with <b>VMware vRealize SaltStack Config</b> I constantly found myself going to the CLI to test and learn how the salt functions work.  
<p>In the <a href="https://www.vcrocs.info/2021/10/vmware-vrealize-saltstack-config-as-a-windows-server-admin-part-5/" target="_blank">Part 5 Blog</a> of this series I showed how I am using the PowerShell module POSH-SSH to connect to the <b>VMware vRealize SaltStack Config</b> Server to run salt commands remotely. So I started writing some PowerShell functions to run remote salt commands on the Salt Master. The end goal might be to turn this script into a Salt PowerShell Module. To start it will only have the functions that I find myself using the most. I could turn this into a community Github Project and see if there would be any interest. If anyone reading this blog post has any interest please reach out to me. (<a href="mailto:Dale.Hassinger@vCROCS.info" rel="">Dale.Hassinger@vCROCS.info</a>)</p>
<p>My goal is to make all these PowerShell Salt functions work with <b>VMware vRealize SaltStack Config</b> like PowerCLI works with <b>VMware vCenter</b>. Use same verb/noun terminology. I use PowerCLI for all my VMware Automation. Works awesome! So to create these PowerShell Functions to work with my existing automation scripts is a win win in my book.</p>
<p>Normally I will use a Products APIs to do all these types of processes. I looked at <b>VMware vRealize SaltStack Config</b> APIs and to the best of my knowledge I can not use them like I can the PS functions that I created. That may change in a future release of <b>VMware vRealize SaltStack Config</b>. Fingers crossed.</p>
</div>
<hr>
<h6 id="salt-powershell-functions">Salt PowerShell Functions:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># ----- [ Start of Functions ] --------------------------------------------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="c"># The POSH-SSH PS module MUST be installed to use these functions.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Function to Connect to SSC Server</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Connect-SSCServer</span> 
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$Server</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$userName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$Password</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="c"># End Parameters</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># The next line is how to create the encrypted password</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$psPassword</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="n">-String</span> <span class="nv">$global:HashiPW</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$creds</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">-typename</span> <span class="n">System</span><span class="p">.</span><span class="py">Management</span><span class="p">.</span><span class="py">Automation</span><span class="p">.</span><span class="py">PSCredential</span> <span class="n">-argumentlist</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$psPassword</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;ComputerName&#34;</span> <span class="p">=</span> <span class="nv">$Server</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Credential&#34;</span>   <span class="p">=</span> <span class="nv">$creds</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># SSH Connection to SaltStack Server</span>
</span></span><span class="line"><span class="cl">    <span class="nb">New-SSHSession</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Function to Disconnect from SSC Server</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Disconnect-SSCServer</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Remove-SSHSession</span> <span class="n">-SessionId</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Sync Minion grains</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">invoke-SSC.sync.grains</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$minion</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Sync Grains after adding new grain information</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; saltutil.sync_grains --output=json&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Minion Grain Append</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">set-SSC.grains.append</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$minion</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$grainkey</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$grainval</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="c"># End Parameters</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainkey</span> <span class="p">+</span> <span class="s1">&#39;&#34; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainval</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Minion Grain DelKey</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">set-SSC.grains.delkey</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$minion</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$grainkey</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="c"># End Parameters</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.delkey &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainkey</span> <span class="p">+</span> <span class="s1">&#39;&#34; force=True&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Minion Test Ping</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">invoke-SSC.test.ping</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$minion</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span> <span class="c"># End Parameters</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; test.ping --output=json&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="n">-SessionId</span> <span class="mf">0</span> <span class="n">-Command</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$results</span><span class="p">.</span><span class="n">Output</span><span class="p">[</span><span class="mf">1</span><span class="p">].</span><span class="py">Trim</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Functions ] --------------------------------------------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<h6 id="examples-to-show-how-to-use-the-salt-powershell-functions-above">Examples to show how to use the Salt PowerShell Functions above:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># ----- [ Connect to SSC Server ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># DO NOT use plain text PW&#39;s in your Code. I am only showing PW to make it easier to understand the code. </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Set Parameter Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Server</span>   <span class="p">=</span> <span class="s1">&#39;SaltMaster.vCROCS.local&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$User</span>     <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Password</span> <span class="p">=</span> <span class="s1">&#39;VMware1!&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Server&#34;</span>   <span class="p">=</span> <span class="nv">$Server</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;User&#34;</span>     <span class="p">=</span> <span class="nv">$User</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Password&#34;</span> <span class="p">=</span> <span class="nv">$Password</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Connect to SSC</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-SSCServer</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Disconnect to SSC Server ] -----------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-SSCServer</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Sync Minion grains ] -------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="c"># Set Parameter Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minion</span> <span class="p">=</span> <span class="s1">&#39;DBH-211&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;minion&#34;</span> <span class="p">=</span> <span class="nv">$minion</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Run Function</span>
</span></span><span class="line"><span class="cl"><span class="nb">invoke-SSC</span><span class="p">.</span><span class="py">sync</span><span class="p">.</span><span class="py">grains</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion grain append ] ----------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="c"># Set Parameter Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minion</span> <span class="p">=</span> <span class="s1">&#39;DBH-211&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainkey</span> <span class="p">=</span> <span class="s1">&#39;PS_Module&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainval</span> <span class="p">=</span> <span class="s1">&#39;Works great for Windows Server&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;minion&#34;</span>   <span class="p">=</span> <span class="nv">$minion</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;grainkey&#34;</span> <span class="p">=</span> <span class="nv">$grainkey</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;grainval&#34;</span> <span class="p">=</span> <span class="nv">$grainval</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Run Function</span>
</span></span><span class="line"><span class="cl"><span class="nb">set-SSC</span><span class="p">.</span><span class="py">grains</span><span class="p">.</span><span class="py">append</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;minion&#34;</span> <span class="p">=</span> <span class="nv">$minion</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Run Function</span>
</span></span><span class="line"><span class="cl"><span class="nb">invoke-SSC</span><span class="p">.</span><span class="py">sync</span><span class="p">.</span><span class="py">grains</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion grain DelKey ] ----------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="c"># Set Parameter Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minion</span> <span class="p">=</span> <span class="s1">&#39;DBH-211&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainkey</span> <span class="p">=</span> <span class="s1">&#39;PS_Module&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">minion</span>   <span class="p">=</span> <span class="nv">$minion</span>
</span></span><span class="line"><span class="cl">    <span class="n">grainkey</span> <span class="p">=</span> <span class="nv">$grainkey</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Run Function</span>
</span></span><span class="line"><span class="cl"><span class="nb">set-SSC</span><span class="p">.</span><span class="py">grains</span><span class="p">.</span><span class="py">delkey</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;minion&#34;</span> <span class="p">=</span> <span class="nv">$minion</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Run Function</span>
</span></span><span class="line"><span class="cl"><span class="nb">invoke-SSC</span><span class="p">.</span><span class="py">sync</span><span class="p">.</span><span class="py">grains</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion test.ping ] ----------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="c"># Set Paramter Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minion</span> <span class="p">=</span> <span class="s1">&#39;DBH-211&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Define Parameters (Splatting)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;minion&#34;</span> <span class="p">=</span> <span class="nv">$minion</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Run Function</span>
</span></span><span class="line"><span class="cl"><span class="nb">invoke-SSC</span><span class="p">.</span><span class="py">test</span><span class="p">.</span><span class="py">ping</span> <span class="nv">@Params</span></span></span></code></pre></td></tr></table>
</div>
</div>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Adding the POSH-SSH PowerShell module so you can create a SSH connection to the salt master opens up a lot of possibilities for your PowerShell Automation as a Windows Server Admin.</li>
<li>Using the PowerShell Functions above as a Windows admin makes it very easy to add this code to existing scripts and use the Power of SaltStack without completely changing your processes.</li>
<li>Creating a SSH Connection to a remote Salt Master and running commands works well in a &ldquo;Zero Trust&rdquo; environment. With NSX-T all you need to do is setup allow rules between the minions and the master on ports 4505,4506.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>SaltConf 2021 | SaltStack Config Session</title>
    <link>https://www.vcrocs.info/saltconf-2021/</link>
    <pubDate>Sat, 02 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltconf-2021/</guid>
    <description><![CDATA[<p><strong>SaltConf 2021 | SaltStack Config Session</strong></p>
<hr>
<p>I will be doing a SaltConf presentation for the first time at SaltConf 2021. I attended SaltConf 2020 for the first time after VMware purchased SaltStack Config.  This past year I have spent a lot of time reviewing SaltStack Config as a Windows Server Admin and I am excited to share what I have learned, to hopefully help some Windows Server Admins get started.</p>
<p>I wanted to learn one of the configuration Management products for a couple of years and after VMware purchased SaltStack Config, the decision became obvious to me which one I should learn since I live in VMware vRealize Products all day, every day.</p>
<p>So register today for SaltConf 2021 and attend my session.</p>
<h6 id="a-hrefhttpssaltconfcom-target_blank--link-to-saltconf21--a"><a href="https://saltconf.com" target="_blank">- Link to SaltConf21 -</a></h6>
<hr>
<h6 id="session-details">Session Details:</h6>
<ul>
<li>Date: November 4th.</li>
<li>Time: 10:00 am - 10:50 am</li>
<li>Details: Track 1 - Managing Windows with SaltStack Config</li>
<li>Presenters: Vincent Riccio and Dale Hassinger</li>
</ul>
<h6 id="a-hrefhttpssaltconfcomsaltconf21agenda-target_blank--link-to-saltconf21-agenda--a"><a href="https://saltconf.com/saltconf21/agenda/" target="_blank">- Link to SaltConf21 Agenda -</a></h6>
<figure><a class="lightgallery" href="/saltconf-2021/saltconf21-03.png" title="/saltconf-2021/saltconf21-03.png" data-thumbnail="/saltconf-2021/saltconf21-03.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<p>In our Presentation we will show you how to use SaltStack Config to manage Microsoft Windows Servers. How to use Salt to install software, work with Windows Services, make Registry changes, configuration management, how to quickly respond to Zero-Day Security patching, how to add vCenter TAGs/NSX-T TAGS/ Active Directory OUs as minion grain information, how to target minions, minion beacons, salt reactors and other normal day to day Windows Server administration.</p>
<hr>
<h6 id="a-hrefhttpsyoutubepngg_vxo8s8-target_blanklink-to-watch-saltconf21-presentationa"><a href="https://youtu.be/PNgG_vXo8S8" target="_blank">Link to watch SaltConf21 Presentation</a></h6>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 5</title>
    <link>https://www.vcrocs.info/saltstack-config-part-05/</link>
    <pubDate>Fri, 01 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-05/</guid>
    <description><![CDATA[<p><strong>Part 5: How to use SaltStack Config with Windows Server and PowerShell</strong></p>
<hr>
<p>The latest item on my journey with <b>VMware vRealize SaltStack Config</b> as a <b>Windows Server Admin</b> will be an update to some items that I have talked about in previous posts. I have been spending more time with <b>VMware vRealize SaltStack Config</b> and I have learned some better ways to do some of the processes that I have talked about already. My goal to to learn and use the built-in functions that are already in the product. I found that using the salt functions require less coding and better logging.</p>
<p>First example of changing how I am going to use <b>VMware vRealize SaltStack Config</b>. When I first started looking at grains I thought I would edit the grains file with PowerShell and add the grains content to the file.  What I did worked but I think I learned a better way. There is a function grains.append that will append grains data to the grains file on the minion. This works much better and when I run a job to add grains information it is listed in Activity Completed within <b>VMware vRealize SaltStack Config</b>. I like to be able to see when changes are made by the jobs that are run.</p>
<p>The code that I have listed below to get vCenter TAGs assigned to a VM and add the information to the minion is using PowerShell. To use this script you <b>MUST</b> install the PowerShell Module POSH-SSH. The process I am showing connects to a vCenter, creates a SSH Connection to the Salt Server, gets all assigned vCenter TAGs for a VM, , runs salt commands to add grain information to the grains file of a minion, and then runs a minion grains sync. This concept can be used for a lot of different systems. If you want to add NSX-T Security TAGs as grain information (Thanks Karl Hauck for this idea), AD (Active Directory) OU of the Windows Server, or anything you think would be useful to Target minions within <b>VMware vRealize SaltStack Config</b>.</p>
<p>I really like the idea of using POSH-SSH to make the SSH connection to the Salt Master Server and running commands. I do a lot of Automation within vRA (vRealize Automation) with PowerShell and I can use this same concept to use <b>VMware vRealize SaltStack Config</b> to complete the processes that need run. I can also create Catalog items within vRA that you can make available to APP Teams to use. The Catalog item could be running salt jobs in  <b>VMware vRealize SaltStack Config</b>. Cool Stuff!</p>
<hr>
<h6 id="grains-file">Grains File:</h6>
<p>This is what I learned about salt grains when using with a Windows OS.</p>
<ul>
<li>The default location of the grains file is in directory &ldquo;C:\salt\conf&quot;.</li>
<li>The grains file is named grains with no extension.</li>
</ul>
<h6 id="example-grains-file">Example grains file:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">NSXSecurityTAGs</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">vCROCS</span><span class="p">.</span><span class="py">Apps</span><span class="p">.</span><span class="py">VMware</span><span class="p">.</span><span class="py">SaltStack</span><span class="p">.</span><span class="py">Minion</span>
</span></span><span class="line"><span class="cl"><span class="n">vCenterTAGs</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">TAG-VM</span><span class="n">-WebServer</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">TAG-VM</span><span class="n">-vCROCS</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">TAG-App</span><span class="n">-Hugo</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>&ldquo;Grain Name&rdquo;: &ldquo;The value of the grain&rdquo;.</li>
<li>In my example I wanted the grain to be named &ldquo;vCenterTags&rdquo; and the values will be the vCenter TAG names &ldquo;TAG-VM-vCROCS, TAG-VM-WebServer, TAG-App-Hugo&rdquo;. I have (3) vCenter TAGs assigned to this VM.  I will be able to create a SaltStack Config Target based on any of the TAGs.</li>
<li>I like the formatting that is used for the grains file by using the function grains.append.</li>
</ul>
<hr>
<h6 id="saltstack-config-targets">SaltStack Config Targets:</h6>
<p>When I add the vCenter TAG information to the grains file I am then able to create SaltStack Config Targets based on the grain &ldquo;vCenterTags&rdquo;.</p>
<h6 id="saltstack-config-targets-1">SaltStack Config Targets:</h6>
<figure><a class="lightgallery" href="/saltstack-config-part-05/Salt-42.PNG" title="/saltstack-config-part-05/Salt-42.PNG" data-thumbnail="/saltstack-config-part-05/Salt-42.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<h6 id="saltstack-config-target-definition">SaltStack Config Target Definition:</h6>
<figure><a class="lightgallery" href="/saltstack-config-part-05/Salt-41.PNG" title="/saltstack-config-part-05/Salt-41.PNG" data-thumbnail="/saltstack-config-part-05/Salt-41.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>How to add the vCenter TAGs to the grains file on all your VMs in SaltStack Config:</p>
<p>Get the VM Names and All Assigned vCenter TAGs</p>
<p>PowerShell Script:
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># ----- [ SSH SaltStack Config Server - Add vCenter TAGs to Minion Grains ] --------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Connect to vCenter before running this code</span>
</span></span><span class="line"><span class="cl"><span class="c"># Define your Credentials</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># SSH to SaltStack Server - MUST HAVE POSH-SSH PowerShell Module Installed </span>
</span></span><span class="line"><span class="cl"><span class="nb">New-SSHSession</span> <span class="n">-ComputerName</span> <span class="s1">&#39;SaltServer.vCROCS.info&#39;</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Test SSH Connection</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CheckSSHConnection</span> <span class="p">=</span> <span class="nb">Get-SSHSession</span> <span class="n">-SessionId</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CheckSSHConnection</span><span class="p">.</span><span class="py">Connected</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$vmNames</span> <span class="p">=</span> <span class="nb">Get-VM</span> <span class="n">-Name</span> <span class="nb">vCROCS-VM</span><span class="p">-*</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmNames</span> <span class="p">=</span> <span class="nv">$vmNames</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$vmName</span> <span class="k">in</span> <span class="nv">$VMNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmName</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c">#Get VM Tag(s)</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$VMTags</span> <span class="p">=</span> <span class="nb">Get-TagAssignment</span> <span class="n">-Entity</span> <span class="nv">$vmName</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$VMTags</span><span class="p">.</span><span class="py">Tag</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">foreach</span><span class="p">(</span><span class="nv">$vmTAG</span> <span class="k">in</span> <span class="nv">$VMTags</span><span class="p">.</span><span class="py">Tag</span><span class="p">.</span><span class="n">Name</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$vmName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append vCenterTAGs &#34;&#39;</span> <span class="p">+</span> <span class="nv">$vmTAG</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="n">-SessionId</span> <span class="mf">0</span> <span class="n">-Command</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Sync Grains after adding new grain information</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$vmName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39;&#34; saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="n">-SessionId</span> <span class="mf">0</span> <span class="n">-Command</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Terminate SSH Session ] -----------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Remove-SSHSession</span> <span class="n">-SessionId</span> <span class="mf">0</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Adding the POSH-SSH PowerShell module so you can create a SSH connection to the salt master opens up a lot of possibilities for your PowerShell Automation as a Windows Server Admin.</li>
<li>Grains are a good way to create SaltStack Config Targets. Allows you to group VMs together the same way you can in vCenter.</li>
<li>The Grains file is basically a Database that can be any information that you want to show about your VMs. In this Blog post I am adding vCenter TAGs to the minions but the information could be anything that helps you target VMs.</li>
<li>If the default list of grains OOTB doesn&rsquo;t show the information you want to see, you can easily add your own gains with a little bit of code.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
</channel>
</rss>

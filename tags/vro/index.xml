<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>VRO - Tag - vCROCS</title>
        <link>https://www.vcrocs.info/tags/vro/</link>
        <description>VRO - Tag - vCROCS</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</managingEditor>
            <webMaster>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 29 Apr 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.vcrocs.info/tags/vro/" rel="self" type="application/rss+xml" /><item>
    <title>Automating Automation (Updated)</title>
    <link>https://www.vcrocs.info/automating-automation/</link>
    <pubDate>Thu, 29 Apr 2021 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/automating-automation/</guid>
    <description><![CDATA[<p><strong>Using vRO REST API. - (Updated for vRA 8.4)</strong></p>
<hr>
<p>I recently had a use case where I wanted to execute a vRealize Orchestrator Workflow by using REST API. There is some documentation available but not a lot of details on how to get and use variables, sdk-objects and bearer token for permission. Here is how I made the vRO REST API calls with PowerShell using vRealize Orchestrator built-into vRA.</p>
<hr>
<p>Steps:</p>
<ol>
<li>Permission:
<ul>
<li>Need to get a Bearer Token from vRO to make REST API Call to execute Workflow.</li>
<li>To get a Bearer Token you need to make an REST API Call with username/password. See example code.</li>
</ul>
</li>
<li>Workflow Information:
<ul>
<li>Get Workflow ID.</li>
<li>Get Workflow variable inputs.</li>
<li>Get sdk-object names from a successful Workflow run.</li>
<li>See Screen Shots and sample code.</li>
</ul>
</li>
<li>Run the Workflow you want to use REST API with manually at least one time successfully. When you look at the variables of a successful Workflow run it shows you what the Workflow is expecting for variables and sdk-objects. See Screen Shots.</li>
</ol>
<hr>
<h6 id="code-to-get-bearer-token-powershell">Code to get bearer Token (PowerShell):</h6>
<p>You can&rsquo;t use vRO REST API without getting bearer token first.</p>
<h6 id="note-when-vrealize-automation-84-was-released-there-was-a-small-change-to-api-to-get-bearer-token--see-the-changes-in-the-code-area-everything-else-has-stayed-the-same-for-my-processes">(Note: When vRealize Automation 8.4 was released there was a small change to api to get Bearer Token.  See the changes in the code area. Everything else has stayed the same for my processes.)</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Get Bearer Token from vRA REST API Call</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Some of the commented lines are in the code for testing.  I use to check variable</span>
</span></span><span class="line"><span class="cl"><span class="c"># values when building the Automation.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># I am showing password in this example. In Production I get the Password from a Hashi</span>
</span></span><span class="line"><span class="cl"><span class="c"># Secret Server and DO NOT have the password Hard Coded.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- [ Variables ] ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span> <span class="p">=</span> <span class="s1">&#39;VMware1&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- [ Headers ] ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$headers</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="s2">&#34;System.Collections.Generic.Dictionary[[String],[String]]&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$headers</span><span class="p">.</span><span class="py">Add</span><span class="p">(</span><span class="s2">&#34;Content-Type&#34;</span><span class="p">,</span> <span class="s2">&#34;application/json&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$headers</span><span class="p">.</span><span class="py">Add</span><span class="p">(</span><span class="s2">&#34;Accept&#34;</span><span class="p">,</span> <span class="s2">&#34;application/json&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- [ Body ] ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s2">&#34;{
</span></span></span><span class="line"><span class="cl"><span class="s2"></span><span class="se">`n</span><span class="s2">    </span><span class="se">`&#34;</span><span class="s2">password</span><span class="se">`&#34;</span><span class="s2">:  </span><span class="se">`&#34;</span><span class="s2">passwordString</span><span class="se">`&#34;</span><span class="s2">,
</span></span></span><span class="line"><span class="cl"><span class="s2"></span><span class="se">`n</span><span class="s2">    </span><span class="se">`&#34;</span><span class="s2">username</span><span class="se">`&#34;</span><span class="s2">:  </span><span class="se">`&#34;</span><span class="s2">administrator</span><span class="se">`&#34;</span><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2"></span><span class="se">`n</span><span class="s2">}&#34;</span>
</span></span><span class="line"><span class="cl">   
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$body</span> <span class="o">-Replace</span><span class="p">(</span><span class="s2">&#34;passwordString&#34;</span><span class="p">,</span><span class="nv">$password</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$body</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- [ Invoke REST API ] ---</span>
</span></span><span class="line"><span class="cl"><span class="c"># vRA 8.3 Use next line</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-SkipCertificateCheck</span> <span class="s1">&#39;https://vRA-FQDN.domain.name/csp/gateway/am/api/login?access_token&#39;</span> <span class="n">-Method</span> <span class="s1">&#39;POST&#39;</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$body</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># vRA 8.4 Use next line</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-SkipCertificateCheck</span> <span class="s1">&#39;https://vRA-FQDN.domain.name/csp/gateway/am/api/login?cspAuthToken&#39;</span> <span class="n">-Method</span> <span class="s1">&#39;POST&#39;</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$body</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span>
</span></span><span class="line"><span class="cl"><span class="c">#$response</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># vRA 8.3 Use next line</span>
</span></span><span class="line"><span class="cl"><span class="c">#$response.access_token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># vRA 8.4 Use next line</span>
</span></span><span class="line"><span class="cl"><span class="c">#$response.cspAuthToken</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># vRA 8.3 Use next line</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bearer_token</span> <span class="p">=</span> <span class="s2">&#34;Bearer &#34;</span> <span class="p">+</span> <span class="nv">$response</span><span class="p">.</span><span class="py">access_token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># vRA 8.4 Use next line</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bearer_token</span> <span class="p">=</span> <span class="s2">&#34;Bearer &#34;</span> <span class="p">+</span> <span class="nv">$response</span><span class="p">.</span><span class="py">cspAuthToken</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># $bearer_token</span></span></span></code></pre></td></tr></table>
</div>
</div>
<h6 id="code-to-get-execute-a-vro-workflow-using-api-call-powershell">Code to get execute a vRO Workflow using API Call (PowerShell):</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Run vRA Workflow using API Call</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- [ Variables ] ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmName</span> <span class="p">=</span> <span class="s1">&#39;DBH-1234&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$emailAddress</span> <span class="p">=</span> <span class="n">Dale</span><span class="p">.</span><span class="n">Hassinger</span><span class="nv">@vCROCS</span><span class="p">.</span><span class="n">info</span><span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">$OSVersion = &#39;</span><span class="n">Ubuntu18044</span><span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">$PSText = &#39;</span><span class="n">G:</span><span class="p">\</span><span class="n">Scripts</span><span class="p">\</span><span class="nb">Create-Linux</span><span class="n">-Server-Step</span><span class="p">-</span><span class="mf">1</span><span class="n">-v01-PROD</span><span class="p">.</span><span class="py">ps1</span> <span class="n">-vmNAME</span> <span class="nv">$vmName</span> <span class="n">-emailAddress</span> <span class="nv">$emailAddress</span> <span class="n">-OSVersion</span> <span class="nv">$OSVersion</span><span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1"># --- [ Headers ] ---
</span></span></span><span class="line"><span class="cl"><span class="s1">$headers = New-Object &#34;System.Collections.Generic.Dictionary[[String],[String]]&#34;
</span></span></span><span class="line"><span class="cl"><span class="s1">$headers.Add(&#34;Content-Type&#34;, &#34;application/xml&#34;)
</span></span></span><span class="line"><span class="cl"><span class="s1">$headers.Add(&#34;Authorization&#34;, $bearer_token)
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1"># --- [ Body ] ---
</span></span></span><span class="line"><span class="cl"><span class="s1">$body = &#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nb">execution-context</span> <span class="n">xmlns</span><span class="p">=</span><span class="s2">&#34;http://www.vmware.com/vco&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="p">&lt;</span><span class="n">parameters</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;vm&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;VC:VirtualMachine&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">         <span class="p">&lt;</span><span class="nb">sdk-object</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;VC:VirtualMachine&#34;</span> <span class="n">id</span><span class="p">=</span><span class="s2">&#34;vCenter.FQDN,id:vm-12345&#34;</span><span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;vmUsername&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;string&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">         <span class="p">&lt;</span><span class="n">string</span><span class="p">&gt;</span><span class="n">username</span><span class="nv">@domain</span><span class="p">.</span><span class="n">name</span><span class="p">&lt;/</span><span class="n">string</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;vmPassword&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;SecureString&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">         <span class="p">&lt;</span><span class="n">string</span><span class="p">&gt;</span><span class="n">vmPassword_string</span><span class="p">&lt;/</span><span class="n">string</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;programPath&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;string&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">         <span class="p">&lt;</span><span class="n">string</span><span class="p">&gt;</span><span class="n">C:</span><span class="p">\</span><span class="n">Windows</span><span class="p">\</span><span class="n">System32</span><span class="p">\</span><span class="n">WindowsPowerShell</span><span class="p">\</span><span class="n">v1</span><span class="p">.</span><span class="mf">0</span><span class="p">\</span><span class="n">powershell</span><span class="p">.</span><span class="n">exe</span><span class="p">&lt;/</span><span class="n">string</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;arguments&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;string&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">         <span class="p">&lt;</span><span class="n">string</span><span class="p">&gt;</span><span class="n">arguments_string</span><span class="p">&lt;/</span><span class="n">string</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;workingDirectory&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;string&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">         <span class="p">&lt;</span><span class="n">string</span><span class="p">&gt;</span><span class="n">G:</span><span class="p">\</span><span class="n">Scripts</span><span class="p">&lt;/</span><span class="n">string</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="p">&lt;/</span><span class="n">parameters</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nb">execution-context</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1"># $body
</span></span></span><span class="line"><span class="cl"><span class="s1"># I define the Body format and then replace strings of text that I define with variables
</span></span></span><span class="line"><span class="cl"><span class="s1"># in the code.
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1">$body = $body -Replace(&#34;vmPassword_string&#34;,$password)
</span></span></span><span class="line"><span class="cl"><span class="s1">$body = $body -Replace(&#34;arguments_string&#34;,$PSText)
</span></span></span><span class="line"><span class="cl"><span class="s1">
</span></span></span><span class="line"><span class="cl"><span class="s1"># --- [ Invoke REST API ] ---
</span></span></span><span class="line"><span class="cl"><span class="s1">$response = Invoke-RestMethod -SkipCertificateCheck &#39;</span><span class="n">https</span><span class="err">:</span><span class="p">//</span><span class="nb">vRA-FQDN</span><span class="p">.</span><span class="py">domain</span><span class="p">.</span><span class="n">name</span><span class="p">/</span><span class="n">vco</span><span class="p">/</span><span class="n">api</span><span class="p">/</span><span class="n">workflows</span><span class="p">/</span><span class="n">9cc3ac9d</span><span class="p">-</span><span class="n">062b</span><span class="p">-</span><span class="mf">4e98</span><span class="n">-aa9d-e781e47f1234</span><span class="p">/</span><span class="n">executions</span><span class="s1">&#39; -Method &#39;</span><span class="n">POST</span><span class="err">&#39;</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$response</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span>
</span></span><span class="line"><span class="cl"><span class="c">#$response</span></span></span></code></pre></td></tr></table>
</div>
</div>
<h6 id="orchestrator-workflow">Orchestrator Workflow:</h6>
<p>This is where you get the Workflow ID value. See highlighted area.:</p>
<figure><a class="lightgallery" href="/automating-automation/vro-ss-01.png" title="/automating-automation/vro-ss-01.png" data-thumbnail="/automating-automation/vro-ss-01.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>Sample Code to use Workflow ID:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nv">$response</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-SkipCertificateCheck</span> <span class="s1">&#39;https://vRA-FQDN.domain.name/vco/api/workflows/7452cce6-c715-482d-9127-1f3aa11523ba/executions&#39;</span> <span class="n">-Method</span> <span class="s1">&#39;POST&#39;</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$body</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>This is where you get the input variable values. See highlighted area.:</p>
<figure><a class="lightgallery" href="/automating-automation/vro-ss-02.png" title="/automating-automation/vro-ss-02.png" data-thumbnail="/automating-automation/vro-ss-02.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>This is where you get the sdk-object variable values. See highlighted area.:</p>
<figure><a class="lightgallery" href="/automating-automation/vro-ss-03.png" title="/automating-automation/vro-ss-03.png" data-thumbnail="/automating-automation/vro-ss-03.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>This is where you get the sdk-object/input variable values. See highlighted area.:</p>
<figure><a class="lightgallery" href="/automating-automation/vro-ss-04.png" title="/automating-automation/vro-ss-04.png" data-thumbnail="/automating-automation/vro-ss-04.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<figure><a class="lightgallery" href="/automating-automation/vro-ss-05.png" title="/automating-automation/vro-ss-05.png" data-thumbnail="/automating-automation/vro-ss-05.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>Sample Code to specify &ldquo;VC:HostSystem&rdquo; and ID value:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;vm&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;VC:HostSystem&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="p">&lt;</span><span class="nb">sdk-object</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;VC:VirtualMachine&#34;</span> <span class="n">id</span><span class="p">=</span><span class="s2">&#34;192.168.86.200,id:host-14&#34;</span><span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p><strong></strong></p>
<h6 id="click-here-to-see-larger-image-of-screen-shotimgvro-ss-06png"><a href="/img/vro-ss-06.png" rel="">Click Here to see Larger Image of Screen Shot</a></h6>
<p>Sample Code to specify &ldquo;VC:VirtualMachine&rdquo; and ID value (VM.ExtensionData.MoRef.Value):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nb">parameter</span> <span class="n">name</span><span class="p">=</span><span class="s2">&#34;vm&#34;</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;VC:VirtualMachine&#34;</span> <span class="n">scope</span><span class="p">=</span><span class="s2">&#34;local&#34;</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">   <span class="p">&lt;</span><span class="nb">sdk-object</span> <span class="n">type</span><span class="p">=</span><span class="s2">&#34;VC:VirtualMachine&#34;</span> <span class="n">id</span><span class="p">=</span><span class="s2">&#34;192.168.86.200,id:vm-3006&#34;</span><span class="p">/&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nb">parameter</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Example of how to build the body. </span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$vCenter</span> <span class="p">=</span> <span class="s1">&#39;192.168.86.200&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmInfo</span> <span class="p">=</span> <span class="nb">Get-VM</span> <span class="n">-Name</span> <span class="s1">&#39;administrator-904&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmMoref</span> <span class="p">=</span> <span class="nv">$vmInfo</span><span class="p">.</span><span class="py">ExtensionData</span><span class="p">.</span><span class="py">MoRef</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- [ Body ] ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;
</span></span></span><span class="line"><span class="cl"><span class="s1">&lt;execution-context xmlns=&#34;http://www.vmware.com/vco&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">   &lt;parameters&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">      &lt;parameter name=&#34;vm&#34; type=&#34;VC:VirtualMachine&#34; scope=&#34;local&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">         &lt;sdk-object type=&#34;VC:VirtualMachine&#34; id=&#34;vCenterString,id:vmString&#34;/&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">      &lt;/parameter&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">   &lt;/parameters&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">&lt;/execution-context&gt;
</span></span></span><span class="line"><span class="cl"><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$body</span>
</span></span><span class="line"><span class="cl"><span class="c"># I define the Body format and then replace strings of text that I define with variables</span>
</span></span><span class="line"><span class="cl"><span class="c"># in the code.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$body</span> <span class="o">-Replace</span><span class="p">(</span><span class="s2">&#34;vmstring&#34;</span><span class="p">,</span><span class="nv">$vmMoref</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$body</span> <span class="o">-Replace</span><span class="p">(</span><span class="s2">&#34;vCenterstring&#34;</span><span class="p">,</span><span class="nv">$vCenter</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$body</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>I hope this helps you understand how to automate running vRO Workflows using REST API with PowerShell.</p>
<p>Happy Automating&hellip;</p>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
</channel>
</rss>

<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>ABX - Tag - vCROCS</title>
        <link>https://www.vcrocs.info/tags/abx/</link>
        <description>ABX - Tag - vCROCS</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</managingEditor>
            <webMaster>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 18 Jan 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.vcrocs.info/tags/abx/" rel="self" type="application/rss+xml" /><item>
    <title>How to use PowerShell Modules with vRA 8.2</title>
    <link>https://www.vcrocs.info/vra-82-powershell-host/</link>
    <pubDate>Mon, 18 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vra-82-powershell-host/</guid>
    <description><![CDATA[<p><strong>Options to use PowerShell Modules</strong></p>
<hr>
<p>I like to review VMware vRA (vRealize Automation) 8.2 as a Microsoft Windows Server Admin.  Most of the reviews you see are creating Linux VMs and customizing the OS using tools for Linux. I create Windows/Linux VMs and customize the OS using a new feature added to vRA 8.x, Action Based Extensibility (ABX) with PowerShell.</p>
<p>In my vRA 7.6 environment, I use a PowerShell Host to run processes and on the PowerShell Host is where I install all the PS Modules that I use. When I started looking at how to use PowerShell with vRA 8.2 the one item that I needed to understand was how to use PowerShell Modules. VMware does have a Blog Post on how to include PowerShell modules with ABX Actions/vRO Work Flows - <a href="https://blogs.vmware.com/management/2020/07/how-to-abx-vro-powershell-additional-modules.html" target="_blank">Click Here to see the Blog Post</a>. After doing some testing and reviewing my options I decided to continue to use a PowerShell Host with vRA 8.2. What this allows me to do is use the same exact PowerShell Host for 7.6 and 8.2. The existing PS scripts that I have also work with both 7.6 and 8.2. No changes to any scripts and the PS Host. I like how VMware included PS as an options for all scripts within vRA 8.2. Hopefully in the future VMware will allow you to install your own PS Modules directly in the vRA Appliance. The one item that some people may not like about this setup is it does require an additional Windows Server that a standard vRA setup does not require. But to be able to use an existing Windows PS Host that can be shared between vRA 7.6 and 8.2 until I get my environment to 100% vRA 8.2 also has it positives. With Automation there is always many ways to complete the same task.</p>
<p>I wrote a Blog Post previously that describes how to pass Cloud Template inputs/properties to ABX Actions. This Post is really using that same technique but instead of only running an ABX Action, this ABX Action Script is passing the inputs/customproperties onto a PowerShell Host. Here is link to previous post: <a href="https://www.vcrocs.info/blog/vra81-abx-ps/" target="_blank">VREALIZE AUTOMATION 8.2 - POWERSHELL ABX</a>. By passing the custom properties as parameters to a PS Host I can also use PS Modules to connect to SQL servers and many other options. Basically any PS Module that is available can be used.</p>
<hr>
<h6 id="details-on-how-to-use-a-abx-script-with-a-powershell-host">Details on how to use a ABX Script with a PowerShell Host:</h6>
<div style="background-color:#d9d9d9; Padding:20px;" >
<b>Step 1:</b>
<ul>
  <li>Create a Cloud Template. (See included yaml code and screen shot).</li>
  <li>Create inputs for the parameters you need to send to a PS script that will run on the PS Host. The inputs are the values that are used for the resource/properties. (See included yaml code)</li>
  <li>Create Properties in the resources section of the yaml for the inputs you just created. These properties will be the parameters that get passed to the PS Script. The properties get passed to the ABX script using $payload. (See included PS code)</li>
</ul>
<ul>
<b>Step 2:</b>
  <li>Create a PowerShell ABX Action. (See included PS code and screen shot)</li>
  <li>To get the custom properties from the Cloud Template you need to use $payload.</li>
  <li>$payload.customProperties."Properties Name" is how you get the values from the $payload.</li>
  <li>You can assign the custom properties to a variable within the ABX PS code.</li>
  <li>I use Invoke-VMScript to run the PS Script on the PS Host because my environment is also a Zero Trust Environment. Invoke-VMScript allows me to run PS scripts on remote servers without opening ports to the remote servers.</li>
</ul>
<ul>
<b>Step 3:</b>
  <li>Create a Subscription. See Screenshot.</li>
  <li>The subscription is want runs the ABX scripts.</li>
  <li>A subscription can be Fired before or after a compute resource gets provisioned.  I create a subscription for both in my environment.</li>
  <li>Within the subscription is where you define which ABX script is run. If you would want to string several ABX scripts together, the subscription could also run a ABX Flow.</li>
</ul>
</div>
<h6 id="sample-code-and-screen-shots">Sample Code and Screen Shots:</h6>
<h6 id="cloud-template">Cloud Template:</h6>
<figure><a class="lightgallery" href="/vra-82-powershell-host/pshost-01.PNG" title="/vra-82-powershell-host/pshost-01.PNG" data-thumbnail="/vra-82-powershell-host/pshost-01.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>The properties under resources in the yaml code will be used like parameters in a PS Script. Since I have a background in PowerShell that is how I am using the properties. When you deploy the Cloud Template, the values entered that I defined will not be used until the ABX script runs. The ABX Script will run after the subscription is triggered. The values will be passed from the Cloud Template to the ABX Script using $payload.  Just like passing parameters to a PS script.</p>
<hr>
<p>Click to expand code:<br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Created by Dale Hassinger - vCrocs.info</span>
</span></span><span class="line"><span class="cl"><span class="c"># Date: 01/14/2021</span>
</span></span><span class="line"><span class="cl"><span class="c"># Send Property Values to ABX Script that runs script on PS Host with all Zero Trust Permissions and Modules</span>
</span></span><span class="line"><span class="cl"><span class="c"># Version: 1</span>
</span></span><span class="line"><span class="cl"><span class="n">formatVersion</span><span class="err">:</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="c"># ---------- [ Inputs ] ---------- #</span>
</span></span><span class="line"><span class="cl"><span class="n">inputs</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">cpu</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="err">:</span> <span class="n">CPUs</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="mf">2</span>
</span></span><span class="line"><span class="cl">  <span class="n">mem</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="err">:</span> <span class="n">Memory</span><span class="p">(</span><span class="n">MB</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="mf">8192</span>
</span></span><span class="line"><span class="cl">  <span class="n">VMName</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="n">title</span><span class="err">:</span> <span class="n">Enter</span> <span class="n">VM</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">    <span class="n">minLength</span><span class="err">:</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl">    <span class="n">maxLength</span><span class="err">:</span> <span class="mf">15</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">DBH</span><span class="p">-</span><span class="mf">001</span>
</span></span><span class="line"><span class="cl">  <span class="n">TemplateName</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="err">:</span> <span class="p">&lt;</span><span class="n">b</span><span class="p">&gt;</span> <span class="nb">Select </span><span class="n">Windows</span> <span class="n">or</span> <span class="n">Ubuntu</span><span class="p">.&lt;/</span><span class="n">b</span><span class="p">&gt;</span> <span class="p">&lt;</span><span class="n">br</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">vRA_Ubuntu_18</span><span class="p">.</span><span class="py">04</span><span class="p">.</span><span class="py">4</span>
</span></span><span class="line"><span class="cl">    <span class="n">title</span><span class="err">:</span> <span class="n">OS</span>
</span></span><span class="line"><span class="cl">    <span class="n">oneOf</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">Ubuntu</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="n">vRA_Ubuntu_18</span><span class="p">.</span><span class="py">04</span><span class="p">.</span><span class="py">4</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">Windows</span> <span class="mf">2016</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="n">vRA_TEMPLATE_2016</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">Windows</span> <span class="mf">2019</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="n">vRA_TEMPLATE_2019</span>
</span></span><span class="line"><span class="cl">  <span class="n">CustomizationSpec</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">vRA_Ubuntu</span>
</span></span><span class="line"><span class="cl">  <span class="n">description</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">vRA</span> <span class="mf">8.2</span> <span class="n">TEST</span> <span class="n">VM</span>
</span></span><span class="line"><span class="cl">  <span class="n">environment</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="err">:</span> <span class="s1">&#39;&lt;b&gt; Select Environment.&lt;/b&gt; &lt;br&gt;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="s1">&#39;environment:Management&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="n">title</span><span class="err">:</span> <span class="n">Environment</span>
</span></span><span class="line"><span class="cl">    <span class="n">oneOf</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">Compute</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="s1">&#39;environment:Compute&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">Management</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="s1">&#39;environment:Management&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">DevTest</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="s1">&#39;environment:DevTest&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="n">department</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="err">:</span> <span class="p">&lt;</span><span class="n">b</span><span class="p">&gt;</span> <span class="nb">Select </span><span class="n">Application</span> <span class="n">Team</span><span class="p">.&lt;/</span><span class="n">b</span><span class="p">&gt;</span> <span class="p">&lt;</span><span class="n">br</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="s1">&#39;department:APP Team 1&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="n">title</span><span class="err">:</span> <span class="n">Application</span> <span class="n">Team</span>
</span></span><span class="line"><span class="cl">    <span class="n">oneOf</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">APP</span> <span class="n">Team</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="s1">&#39;department:APP Team 1&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">APP</span> <span class="n">Team</span> <span class="mf">2</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="s1">&#39;department:APP Team 2&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="n">title</span><span class="err">:</span> <span class="n">APP</span> <span class="n">Team</span> <span class="mf">3</span>
</span></span><span class="line"><span class="cl">        <span class="n">const</span><span class="err">:</span> <span class="s1">&#39;department:APP Team 3&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="n">IP</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="mf">192.168</span><span class="p">.</span><span class="py">86</span><span class="p">.</span><span class="py">200</span>
</span></span><span class="line"><span class="cl">  <span class="n">emailAddress</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">Dale</span><span class="p">.</span><span class="n">Hassinger</span><span class="nv">@vCROCS</span><span class="p">.</span><span class="py">info</span>
</span></span><span class="line"><span class="cl">  <span class="n">RootPartition</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="mf">20</span>
</span></span><span class="line"><span class="cl">  <span class="n">BuildBY</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">DaleHassinger</span>
</span></span><span class="line"><span class="cl">  <span class="n">BuildRequestor</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">KirkShaffer</span>
</span></span><span class="line"><span class="cl">  <span class="n">OSVersion</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">default</span><span class="err">:</span> <span class="n">Ubuntu18044</span>
</span></span><span class="line"><span class="cl"><span class="c"># ---------- [ Resources ] ---------- #</span>
</span></span><span class="line"><span class="cl"><span class="n">resources</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cloud_Network_1</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">Cloud</span><span class="p">.</span><span class="py">Network</span>
</span></span><span class="line"><span class="cl">    <span class="n">properties</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="n">networkType</span><span class="err">:</span> <span class="n">existing</span>
</span></span><span class="line"><span class="cl">      <span class="n">address</span><span class="err">:</span> <span class="s1">&#39;${input.IP}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">constraints</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">        <span class="p">-</span> <span class="n">tag</span><span class="err">:</span> <span class="s1">&#39;${input.environment}&#39;</span>
</span></span><span class="line"><span class="cl">        <span class="p">-</span> <span class="n">tag</span><span class="err">:</span> <span class="s1">&#39;${input.department}&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cloud_vSphere_Machine_1</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="err">:</span> <span class="n">Cloud</span><span class="p">.</span><span class="py">vSphere</span><span class="p">.</span><span class="py">Machine</span>
</span></span><span class="line"><span class="cl">    <span class="n">properties</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="n">image</span><span class="err">:</span> <span class="s1">&#39;${input.TemplateName}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">flavor</span><span class="err">:</span> <span class="n">std</span>
</span></span><span class="line"><span class="cl">      <span class="n">cpu</span><span class="err">:</span> <span class="s1">&#39;${input.cpu}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">mem</span><span class="err">:</span> <span class="s1">&#39;${input.mem}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">customizationSpec</span><span class="err">:</span> <span class="s1">&#39;${input.CustomizationSpec}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">emailAddress</span><span class="err">:</span> <span class="s1">&#39;${input.emailAddress}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">RootPartition</span><span class="err">:</span> <span class="s1">&#39;${input.RootPartition}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">BuildBY</span><span class="err">:</span> <span class="s1">&#39;${input.BuildBY}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">BuildRequestor</span><span class="err">:</span> <span class="s1">&#39;${input.BuildRequestor}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">OSVersion</span><span class="err">:</span> <span class="s1">&#39;${input.OSVersion}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">constraints</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">        <span class="p">-</span> <span class="n">tag</span><span class="err">:</span> <span class="s1">&#39;${input.environment}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">networks</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">        <span class="p">-</span> <span class="n">network</span><span class="err">:</span> <span class="s1">&#39;${resource.Cloud_Network_1.id}&#39;</span>
</span></span><span class="line"><span class="cl">          <span class="n">assignment</span><span class="err">:</span> <span class="n">static</span>
</span></span><span class="line"><span class="cl">          <span class="n">address</span><span class="err">:</span> <span class="s1">&#39;${input.IP}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">name</span><span class="err">:</span> <span class="s1">&#39;${input.VMName}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">description</span><span class="err">:</span> <span class="s1">&#39;${input.description}&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<h6 id="abx-action-script">ABX Action Script:</h6>
<figure><a class="lightgallery" href="/vra-82-powershell-host/pshost-02.PNG" title="/vra-82-powershell-host/pshost-02.PNG" data-thumbnail="/vra-82-powershell-host/pshost-02.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>In my PowerShell code I am using Write-Host to help show how the Cloud Template passes values to the ABX Action using the $payload. I use the code to troubleshoot and understand how it is working. I am able to take values from the payload customProperties and assign to variables. The customProperties are defined in the Cloud Template yaml code as resources/properties. I can then make decisions in the code based on these values. For production the write-host lines could be removed.</p>
<hr>
<p>Click to expand code:<br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">handler($context</span><span class="p">,</span> <span class="nv">$payload</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$VMName</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$cpu</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">cpu</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$mem</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">mem</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$description</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">description</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$IPaddress</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">addresses</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$emailAddress</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">emailAddress</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$RootPartition</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">RootPartition</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$BuildBY</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">BuildBY</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$BuildRequestor</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">BuildRequestor</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$OSVersion</span> <span class="p">=</span> <span class="nv">$payload</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">OSVersion</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">  <span class="c"># Show PS variables</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;VMName:&#39;</span> <span class="nv">$VMName</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;CPU:&#39;</span> <span class="nv">$cpu</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Memory:&#39;</span> <span class="nv">$mem</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Description:&#39;</span> <span class="nv">$description</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;IPaddress:&#39;</span> <span class="nv">$IPaddress</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Email:&#39;</span> <span class="nv">$emailAddress</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Root:&#39;</span> <span class="nv">$RootPartition</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Build By:&#39;</span> <span class="nv">$BuildBY</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Build BuildRequestor:&#39;</span> <span class="nv">$BuildRequestor</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;OS Version:&#39;</span> <span class="nv">$OSVersion</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># ----- [ Define Username/ Get Password ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$HashiVaultPW</span> <span class="p">=</span> <span class="s1">&#39;vCROCS#1&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="nv">$HashiVaultPW</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nv">$username</span> <span class="p">=</span> <span class="s1">&#39;administrator@vsphere.local&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="nv">$username</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># ----- [ Connect vCenter and run PS Script on PS Host ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c"># Connect to vCenter to be able to connect to PS Host</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="n">vCenter01</span><span class="p">.</span><span class="py">vCROCS</span><span class="p">.</span><span class="py">info</span> <span class="n">-User</span> <span class="nv">$username</span> <span class="n">-Password</span> <span class="nv">$HashiVaultPW</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c"># PS Host Name</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$PSHost</span> <span class="p">=</span> <span class="s1">&#39;vCROCSPSHost&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;PS Host:&#39;</span><span class="nv">$PSHost</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c"># PS Script text</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$PSParameters</span> <span class="p">=</span> <span class="s2">&#34;-VMNAME &#39;&#34;</span> <span class="p">+</span> <span class="nv">$VMName</span> <span class="p">+</span> <span class="s2">&#34;&#39; -emailAddress &#39;&#34;</span> <span class="p">+</span> <span class="nv">$emailAddress</span> <span class="p">+</span> <span class="s2">&#34;&#39; -RootPartition &#39;&#34;</span> <span class="p">+</span> <span class="nv">$RootPartition</span> <span class="p">+</span> <span class="s2">&#34;&#39;&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;PS Parameters:&#39;</span><span class="nv">$PSParameters</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="nv">$PSScript</span> <span class="p">=</span> <span class="s1">&#39;G:\Scripts\Create-Linux-Server-Step-3-v01.ps1&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;PS Script:&#39;</span><span class="nv">$PSScript</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="nv">$PSText</span> <span class="p">=</span> <span class="s1">&#39;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe &#34;&#39;</span> <span class="p">+</span> <span class="nv">$PSScript</span> <span class="p">+</span> <span class="s1">&#39;&#34; &#39;</span> <span class="p">+</span> <span class="nv">$PSParameters</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="s1">&#39;Complete PS String:&#39;</span><span class="nv">$PSText</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="c"># Run PS Script on PS Host</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$result</span> <span class="p">=</span> <span class="nb">Invoke-VMScript</span> <span class="n">-VM</span> <span class="nv">$PSHost</span> <span class="n">-ScriptType</span> <span class="n">Bat</span> <span class="n">-ScriptText</span> <span class="nv">$PSText</span> <span class="n">-GuestUser</span> <span class="nv">$username</span> <span class="n">-GuestPassword</span> <span class="nv">$HashiVaultPW</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Host</span> <span class="nv">$result</span><span class="p">.</span><span class="py">ScriptOutput</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nv">$LASTEXITCODE</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<h6 id="subscription">Subscription:</h6>
<figure><a class="lightgallery" href="/vra-82-powershell-host/pshost-03.PNG" title="/vra-82-powershell-host/pshost-03.PNG" data-thumbnail="/vra-82-powershell-host/pshost-03.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<div style="background-color:#9ae59a; Padding:20px;" ><b>Lessons Learned:</b>
<ul>
  <li>vRA 7.6 and 8.2 can share the same PS Host and Scripts.</li>
  <li>A lot of the PowerShell code and logic I use in vRA 7.6 will be able to be reused/shared.</li>
  <li>Using a PS Host does require an additional VM.</li>
  <li>Within ABX scripts I have always changed the default "Custom limits and retry options". I set the "Memory Limit" to 1024 and "Timeouts" to 900.</li>
  <li>Anytime I speak to others about Automation the one item I stress is there is no right way or wrong way to accomplish your tasks. Build on the skills that your Team already has. The environment I work in is 90% Windows Servers so we use PowerShell a lot. That is why I needed to be able to use all the PS Modules that I have installed on the PS Host.</li>
</ul>
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>vRealize Automation 8.1 - PowerShell ABX</title>
    <link>https://www.vcrocs.info/vra81-abx-ps/</link>
    <pubDate>Sun, 17 May 2020 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vra81-abx-ps/</guid>
    <description><![CDATA[<p><strong>Options to use PowerShell Modules</strong></p>
<hr>
<p>I wanted to review VMware vRA (vRealize Automation) 8.x as a Microsoft Windows Server Admin.  Most of the reviews you see are creating Linux VMs and customizing the OS using tools for Linux. I am going to create Windows Server VMs and customize the OS using a new feature added to vRA 8.1, Action Based Extensibility (ABX) with PowerShell. No vRO (Orchestrator) Workflows will be used. This is completely different compared to how I create Windows Servers with vRA 7.6.</p>
<p>The enterprise organizations that I have worked for are 90%+ Microsoft Windows Servers.  It is important for me to have vRA be able to create Windows Servers and make all configuration changes using PowerShell.</p>
<p>You could also use this technique to make changes to a Linux VM using the PowerCLI commands Invoke-VMscript and Copy-VMGuestFile. I did create a <a href="../automation-zero-trust/" rel="">Blog Post</a> on this topic.</p>
<h6 id="blueprint-requirements">BluePrint Requirements:</h6>
<p>I want to manually enter the VM Name.  I don’t want an auto generated name. After the Windows Server VM is created I want to to able to add vCenter TAGS to VM, make some OS changes, and install software based on values entered on the BluePrint.</p>
<h6 id="what-i-created-to-accomplish-the-requirements">What I created to accomplish the requirements:</h6>
<p>Created a BluePrint. See included code and screen shot.</p>
<p>Created a PowerShell Action. See included code and screen shot.</p>
<p>Created a Subscription. See Screenshot.</p>
<h6 id="sample-code-and-screen-shots---">Sample Code and Screen Shots:&mdash;</h6>
<h6 id="blueprint">BluePrint:</h6>
<figure><a class="lightgallery" href="/vra81-abx-ps/vra81-01.jpg" title="/vra81-abx-ps/vra81-01.jpg" data-thumbnail="/vra81-abx-ps/vra81-01.jpg" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>The properties under resources in the yaml code can be used like parameters in a PowerShell script. Since I have a background in PowerShell that is how I am using the properties. When you deploy the BluePrint the values entered that I defined will not be used until the Action runs. The Action will run after the “Compute post provision” event is triggered with the subscription. Those values will be passed from the BluePrint to the Action.  Just like passing parameters to a PS script.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># This is the yaml code for the BluePrint</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Created by vCrocs.info</span>
</span></span><span class="line"><span class="cl"><span class="n">formatVersion</span><span class="p">:</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl"><span class="n">inputs</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">cpuCount</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="p">:</span> <span class="n">Number</span> <span class="n">of</span> <span class="n">virtual</span> <span class="n">processors</span>
</span></span><span class="line"><span class="cl">    <span class="n">default</span><span class="p">:</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">  <span class="n">totalMemoryMB</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="p">:</span> <span class="n">Machine</span> <span class="n">virtual</span> <span class="n">memory</span> <span class="n">size</span> <span class="ow">in</span> <span class="n">Megabytes</span>
</span></span><span class="line"><span class="cl">    <span class="n">default</span><span class="p">:</span> <span class="mi">2048</span>
</span></span><span class="line"><span class="cl">  <span class="n">VMname</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="n">default</span><span class="p">:</span> <span class="n">DBH00</span>
</span></span><span class="line"><span class="cl">  <span class="n">SQL</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">boolean</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="p">:</span> <span class="n">Is</span> <span class="n">this</span> <span class="n">a</span> <span class="n">SQL</span> <span class="n">Server</span><span class="err">?</span>
</span></span><span class="line"><span class="cl">    <span class="n">default</span><span class="p">:</span> <span class="bp">false</span>
</span></span><span class="line"><span class="cl">  <span class="n">D</span><span class="o">-</span><span class="n">Drive</span><span class="o">-</span><span class="n">Size</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">integer</span>
</span></span><span class="line"><span class="cl">    <span class="n">description</span><span class="p">:</span> <span class="s1">&#39;Enter D:\ Size in GB&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="n">default</span><span class="p">:</span> <span class="mi">10</span>
</span></span><span class="line"><span class="cl">    <span class="n">minimum</span><span class="p">:</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl">    <span class="n">maximum</span><span class="p">:</span> <span class="mi">50</span>
</span></span><span class="line"><span class="cl">  <span class="n">TEST</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">string</span>
</span></span><span class="line"><span class="cl">    <span class="k">enum</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">      <span class="o">-</span> <span class="s1">&#39;Yes&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="o">-</span> <span class="s1">&#39;No&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">resources</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">Cloud_vSphere_Machine_1</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">type</span><span class="p">:</span> <span class="n">Cloud</span><span class="o">.</span><span class="n">vSphere</span><span class="o">.</span><span class="n">Machine</span>
</span></span><span class="line"><span class="cl">    <span class="n">properties</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">      <span class="n">name</span><span class="p">:</span> <span class="s1">&#39;${input.VMname}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">SQL</span><span class="p">:</span> <span class="s1">&#39;${input.SQL}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">DDRive</span><span class="p">:</span> <span class="s1">&#39;${input.D-Drive-Size}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">imageRef</span><span class="p">:</span> <span class="mi">2019</span><span class="o">-</span><span class="n">TEMPLATE</span>
</span></span><span class="line"><span class="cl">      <span class="n">cpuCount</span><span class="p">:</span> <span class="s1">&#39;${input.cpuCount}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">totalMemoryMB</span><span class="p">:</span> <span class="s1">&#39;${input.totalMemoryMB}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">TEST</span><span class="p">:</span> <span class="s1">&#39;${input.TEST}&#39;</span>
</span></span><span class="line"><span class="cl">      <span class="n">constraints</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="o">-</span> <span class="n">tag</span><span class="p">:</span> <span class="s1">&#39;quick_start_run:1&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>&mdash;Using the Inputs Screen helps you build the BluePrint yaml code.  I found this very useful since I am still learning the proper yaml formatting.</p>
<figure><a class="lightgallery" href="/vra81-abx-ps/vra81-04.png" title="/vra81-abx-ps/vra81-04.png" data-thumbnail="/vra81-abx-ps/vra81-04.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<h6 id="action">Action:</h6>
<figure><a class="lightgallery" href="/vra81-abx-ps/vra81-02.jpg" title="/vra81-abx-ps/vra81-02.jpg" data-thumbnail="/vra81-abx-ps/vra81-02.jpg" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>In my PowerShell code I am using Write-Host to help me understand how the BluePrint passes values to the Action. I use to troubleshoot and understand how it is working. I am able to take values from the payload customProperties and assign to variables. The customProperties are defined in the BluePrint yaml code as resources/properties. I can then make decisions in the code based on these values.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="c1"># This is the PowerShell code for the Action</span>
</span></span><span class="line"><span class="cl"><span class="n">function</span> <span class="n">handler</span><span class="p">(</span><span class="o">$</span><span class="n">context</span><span class="p">,</span> <span class="o">$</span><span class="n">payload</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Write</span><span class="o">-</span><span class="n">Host</span> <span class="s2">&#34;VM Name Created: &#34;</span> <span class="o">$</span><span class="n">payload</span><span class="o">.</span><span class="n">resourceNames</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">Write</span><span class="o">-</span><span class="n">Host</span> <span class="s2">&#34;D-DRive Size: &#34;</span> <span class="o">$</span><span class="n">payload</span><span class="o">.</span><span class="n">customProperties</span><span class="o">.</span><span class="n">DDRive</span>
</span></span><span class="line"><span class="cl">    <span class="n">Write</span><span class="o">-</span><span class="n">Host</span> <span class="s2">&#34;SQL: &#34;</span> <span class="o">$</span><span class="n">payload</span><span class="o">.</span><span class="n">customProperties</span><span class="o">.</span><span class="n">SQL</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="o">$</span><span class="n">VMname</span> <span class="o">=</span> <span class="o">$</span><span class="n">payload</span><span class="o">.</span><span class="n">resourceNames</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">Write</span><span class="o">-</span><span class="n">Host</span> <span class="s2">&#34;VM Name Variable: &#34;</span> <span class="o">$</span><span class="n">VMname</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="o">$</span><span class="n">SQL</span> <span class="o">=</span> <span class="o">$</span><span class="n">payload</span><span class="o">.</span><span class="n">customProperties</span><span class="o">.</span><span class="n">SQL</span>
</span></span><span class="line"><span class="cl">    <span class="o">$</span><span class="n">DDrive</span> <span class="o">=</span> <span class="o">$</span><span class="n">payload</span><span class="o">.</span><span class="n">customProperties</span><span class="o">.</span><span class="n">DDRive</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">#Connect to vCenter</span>
</span></span><span class="line"><span class="cl">    <span class="n">Connect</span><span class="o">-</span><span class="n">VIServer</span> <span class="o">-</span><span class="n">server</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">1.1</span> <span class="o">-</span><span class="n">User</span> <span class="s2">&#34;administrator@vsphere.local&#34;</span> <span class="o">-</span><span class="n">Password</span> <span class="s2">&#34;VMware#1&#34;</span> <span class="o">-</span><span class="n">Protocol</span> <span class="n">https</span> <span class="o">-</span><span class="n">Force</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c1">#Assign Tag to new VM</span>
</span></span><span class="line"><span class="cl">    <span class="n">New</span><span class="o">-</span><span class="n">TagAssignment</span> <span class="o">-</span><span class="n">Tag</span> <span class="s1">&#39;TAG-vRA-Built&#39;</span> <span class="o">-</span><span class="n">Entity</span> <span class="o">$</span><span class="n">VMname</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="o">$</span><span class="n">SQL</span> <span class="o">-</span><span class="n">eq</span> <span class="s1">&#39;true&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="n">New</span><span class="o">-</span><span class="n">TagAssignment</span> <span class="o">-</span><span class="n">Tag</span> <span class="s1">&#39;TAG-SQL-Server&#39;</span> <span class="o">-</span><span class="n">Entity</span> <span class="o">$</span><span class="n">VMname</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c1"># End if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="o">$</span><span class="n">payload</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="subscription">Subscription:</h6>
<figure><a class="lightgallery" href="/vra81-abx-ps/vra81-03.png" title="/vra81-abx-ps/vra81-03.png" data-thumbnail="/vra81-abx-ps/vra81-03.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<h6 id="lets-compare-vra-76-vs-81">Lets compare vRA 7.6 vs 8.1</h6>
<p>vRA 7.6:</p>
<p>I would create a BluePrint with a custom form in vRA 7.6. I would pass the field values from the custom form as parameters to a PowerShell script on a PowerShell Host.</p>
<p>vRA 8.1:</p>
<p>Using ABX and a subscription in vRA 8.1 eliminates the need to have a Windows PowerShell host and the PowerShell script has no parameters. The vRA 8.x appliance is the PowerShell Host. Less moving parts to complete a Windows Server Build in vRA 8.1.</p>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>I will need to learn yaml.</li>
<li>The process to Create BluePrints will be much different in vRA 8.x.</li>
<li>A lot of the PowerShell code and logic I use in vRA 7.6 will be able to be reused.</li>
<li>I will not need as many VMs for the installation and administration of vRA 8.x.</li>
</ul>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
</channel>
</rss>

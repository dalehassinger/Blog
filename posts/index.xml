<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - vCROCS</title>
        <link>https://www.vcrocs.info/posts/</link>
        <description>All Posts | vCROCS</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</managingEditor>
            <webMaster>Dale.Hassinger@vCROCS.info (| Dale Hassinger)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 01 Apr 2099 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://www.vcrocs.info/posts/" rel="self" type="application/rss+xml" /><item>
    <title>VMware Aria Automation | Options for CPU|Memory values</title>
    <link>https://www.vcrocs.info/aria-automation-cpu-memory-values/</link>
    <pubDate>Wed, 19 Jun 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-automation-cpu-memory-values/</guid>
    <description><![CDATA[<p><strong>How to Allocate CPU and Memory for VMs Using T-Shirt Sizes or Custom Values</strong></p>
<hr>
<blockquote>
<p>&ldquo;Always deliver more than expected.‚Äù - Larry Page (Co-founder of Google)</p>
</blockquote>
<hr>
<h6 id="vmware-aria-automation--vm--cpu-and-memory">VMware Aria Automation | VM | CPU and Memory</h6>
<p>Recently, I was asked how to create new VMs using T-Shirt sizes and also have the flexibility to specify custom CPU and Memory values. Typically, in the YAML code of a Aria Automation Design Template, you use either the properties <code>cpuCount</code> and <code>totalMemoryMB</code> or the <code>flavor</code> property. You <strong>cannot</strong> use both within the same template for the same VM.</p>
<p>After considering the options, I decided to use the <code>cpuCount</code> and <code>totalMemoryMB</code> properties to specify VM CPU and memory, adding logic to the YAML code to determine values based on an input named Flavor.</p>
<p><strong>Flavor Options:</strong></p>
<ul>
<li>Small: 1 CPU, 2 GB memory</li>
<li>Medium: 2 CPUs, 4 GB memory</li>
<li>Large: 4 CPUs, 8 GB memory</li>
<li>Other: Use CPU and Memory values specified in custom inputs <code>CPU</code> and <code>Memory</code>. See the Full Design Template YAML code below.</li>
</ul>
<hr>
<p>These two lines of YAML code demonstrate how to specify the <code>cpuCount</code> and <code>totalMemoryMB</code> properties. This is the key to enabling both T-Shirt sizes and custom values:</p>
<hr>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-YAML" data-lang="YAML"><span class="line"><span class="cl"><span class="nt">cpuCount</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${(input.Flavor == &#39;small&#39;) ? 1 : (input.Flavor == &#39;medium&#39;) ? 2 : (input.Flavor == &#39;large&#39;) ? 4 : (input.Flavor == &#39;other&#39;) ? input.CPU : 1}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">totalMemoryMB</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${(input.Flavor == &#39;small&#39;) ? 2048 : (input.Flavor == &#39;medium&#39;) ? 4096 : (input.Flavor == &#39;large&#39;) ? 8192 : (input.Flavor == &#39;other&#39;) ? input.Memory * 1024 : 1024}&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p><strong>Design Templates within Aria Automation:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-01.png" title="/aria-automation-cpu-memory-values/t-shirt-01.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Design Template and YAML Code:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-02.png" title="/aria-automation-cpu-memory-values/t-shirt-02.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Small Flavor Selected:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-03.png" title="/aria-automation-cpu-memory-values/t-shirt-03.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Other Flavor Selected:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-04.png" title="/aria-automation-cpu-memory-values/t-shirt-04.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Design Template Example YAML Code:</strong></p>
<p>This full Design Template YAML code shows the inputs and how to specify the <code>cpuCount</code> and <code>totalMemoryMB</code> properties.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-YAML" data-lang="YAML"><span class="line"><span class="cl"><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">Customization-Ubuntu-22</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">RCKY-9-000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.69.17</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Flavor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">Standard Size</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">medium</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">small</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">medium</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">large</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">other</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Memory</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">number</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">Memory(GB)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minimum</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maximum</span><span class="p">:</span><span class="w"> </span><span class="m">512</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CPU</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">number</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CPU Count</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minimum</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maximum</span><span class="p">:</span><span class="w"> </span><span class="m">32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_vSphere_Network_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.vSphere.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">Network:vCenter-VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_vSphere_Machine_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.vSphere.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">vCenter-Rocky-9</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">cpuCount</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${(input.Flavor == &#39;small&#39;) ? 1 : (input.Flavor == &#39;medium&#39;) ? 2 : (input.Flavor == &#39;large&#39;) ? 4 : (input.Flavor == &#39;other&#39;) ? input.CPU : 1}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">totalMemoryMB</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${(input.Flavor == &#39;small&#39;) ? 2048 : (input.Flavor == &#39;medium&#39;) ? 4096 : (input.Flavor == &#39;large&#39;) ? 8192 : (input.Flavor == &#39;other&#39;) ? input.Memory * 1024 : 1024}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_vSphere_Network_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong>Flavors:</strong></p>
<p>In my lab, I already had some Flavor Mappings defined. To allow for larger sizes, I had to create a new Flavor Mapping for the maximum sizes I wanted to support. I couldn&rsquo;t specify CPU or memory sizes higher than the largest existing Flavor Mapping.</p>
<hr>
<p><strong>Warning I received while testing:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-05.png" title="/aria-automation-cpu-memory-values/t-shirt-05.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Flavor Mappings within Aria Automation:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-06.png" title="/aria-automation-cpu-memory-values/t-shirt-06.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Flavor Mapping to allow large VM Builds:</strong></p>
<figure><a class="lightgallery" href="/aria-automation-cpu-memory-values/t-shirt-07.png" title="/aria-automation-cpu-memory-values/t-shirt-07.png" data-thumbnail="/aria-automation-cpu-memory-values/t-shirt-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Summary:</strong></p>
<p>I hope this helps anyone looking to standardize new VM builds using T-Shirt sizes while also providing the flexibility to specify custom CPU and Memory values.</p>
<hr>
<h6 id="aria-automation-version-used-for-blog-post">Aria Automation Version used for Blog Post:</h6>
<p>VMware Aria Automation 8.17.0 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code or process may need to be changed.</p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Aria Operations | Aria Appliances Observability</title>
    <link>https://www.vcrocs.info/aria-appliances-observability/</link>
    <pubDate>Tue, 04 Jun 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-appliances-observability/</guid>
    <description><![CDATA[<p><strong>How to monitor VMware Aria Appliances within your environment</strong></p>
<hr>
<blockquote>
<p>&ldquo;I believe that if you show people the problems and you show them the solutions, they will be moved to act.‚Äù - Bill Gates</p>
</blockquote>
<hr>
<h6 id="aria-appliance-observability">Aria Appliance Observability</h6>
<p>In my previous blog, I discussed <strong>VMware vCenter</strong> appliance observability. <a href="https://www.vcrocs.info/vcenter-observability/" target="_blank" rel="noopener noreffer ">Click here to read the blog</a>. Building on those ideas, I now want to demonstrate how to monitor <strong>VMware Aria</strong> Appliances. Monitoring and observing VMware Aria Appliance VMs is crucial in a VMware environment where many such appliances are present.</p>
<p>For VMware Aria Appliances, I created a Custom Group within VMware Aria Operations. These appliances have a property named &ldquo;Summary|Configuration|Product Name&rdquo;. By using a filter that checks if the Product Name contains &ldquo;Aria&rdquo;, &ldquo;vRealize&rdquo;, or &ldquo;Log Insight&rdquo;, I was able to group all VMware Aria Appliance VMs together. See Screen Shot below.</p>
<hr>
<p><strong>This filter is applicable to the following Aria Appliances:</strong></p>
<ul>
<li>Aria Operations</li>
<li>Aria Operations for Logs</li>
<li>Aria Automation</li>
<li>Aria Suite LifeCycle</li>
<li>Aria Cloud Proxies</li>
<li>Aria Operations for Networks</li>
<li>Aria Management Pack Builder</li>
<li>vCenter Orchestrator</li>
</ul>
<hr>
<p>After creating the Custom Group to select only VMware Aria Appliance VMs, I proceeded to build a comprehensive VMware Aria Appliance Monitoring Dashboard. At the top, I included some donut charts (my favorite) to display key metrics such as VMware Aria Appliances Health, Workload, Snapshots, and Uptime in days.</p>
<p>I have a strong preference against VMs running on snapshots for extended periods, which is why I included a chart for Snapshots. Uptime is also a crucial metric, as it provides insight into a VMs maintenance status. When I see a VM running for hundreds of days, my first thought is that it hasn&rsquo;t been patched or upgraded in a while. To ensure the best reliability and access to the latest features, it&rsquo;s important to keep Aria Appliances patched and upgraded regularly.</p>
<hr>
<h6 id="steps-to-create-the-dashboard">Steps to Create the Dashboard</h6>
<ol>
<li>Create the (5) Views
<ul>
<li>Show all Aria Appliance VMs with details</li>
<li>Show VM Health</li>
<li>Show VM Workload</li>
<li>Show Snapshot Status</li>
<li>Show Uptime (Days)</li>
</ul>
</li>
<li>Create the Dashboard</li>
</ol>
<p>To simplify getting started, all the Views and the Dashboard are available in my GitHub repository for download. <a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/Aria-Appliances-Observability" target="_blank" rel="noopener noreffer ">Click Here to Download the files.</a></p>
<hr>
<h6 id="custom-group-filter-to-select-aria-appliance-vms">Custom Group Filter to Select Aria Appliance VMs</h6>
<p><strong>Filter Definition:</strong></p>
<figure><a class="lightgallery" href="/aria-appliances-observability/aria-appliances-02.png" title="/aria-appliances-observability/aria-appliances-02.png" data-thumbnail="/aria-appliances-observability/aria-appliances-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Screen Shot:</strong></p>
<figure><a class="lightgallery" href="/aria-appliances-observability/aria-appliances-01.png" title="/aria-appliances-observability/aria-appliances-01.png" data-thumbnail="/aria-appliances-observability/aria-appliances-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Usage:</strong></p>
<figure><a class="lightgallery" href="/aria-appliances-observability/aria-appliances-03.gif" title="/aria-appliances-observability/aria-appliances-03.gif" data-thumbnail="/aria-appliances-observability/aria-appliances-03.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/Aria-Appliances-Observability" target="_blank" rel="noopener noreffer ">Dale&rsquo;s Github Repository</a></li>
</ul>
<hr>
<h6 id="product-version-used-for-blog-post">Product Version used for Blog Post:</h6>
<ul>
<li>Aria Operations: 8.17.1</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>I can use the Virtual Machine property named &ldquo;Summary|Configuration|Product Name&rdquo; to group all VMware Aria Appliances together. The filter within the Custom Group is what enables this Dashboard to work.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Aria Operations | vCenter Observability</title>
    <link>https://www.vcrocs.info/vcenter-observability/</link>
    <pubDate>Fri, 31 May 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vcenter-observability/</guid>
    <description><![CDATA[<p><strong>How to monitor vCenter VM(s) within your environment</strong></p>
<hr>
<blockquote>
<p>&ldquo;It&rsquo;s really hard to design products by focus groups. A lot of times, people don&rsquo;t know what they want until you show it to them.‚Äù - Steve Jobs</p>
</blockquote>
<hr>
<h6 id="vcenter-observability">vCenter Observability</h6>
<p>I was recently asked how to monitor the VM that <strong>VMware vCenter</strong> runs on using <strong>VMware Aria Operations</strong>. The main request was to show the disk space used on the volumes to prevent them from filling up. In an environment with over 100 vCenters, I decided to create a view to show all the VMs running vCenter. While Aria Operations allows selecting all vCenters in a view, it does not natively show the VM name that vCenter runs on.</p>
<p>Creating a Custom Group in Aria Operations to specify the vCenter VMs manually seemed impractical. Initially, I considered using tags in vCenter and creating a Custom Group based on these tags. However, tagging over 100 vCenter VMs and ensuring they are properly tagged would be labor-intensive.</p>
<p>After some thought, I realized that the volume names for vCenter VMs were unique. I created an Aria Operations View to select VMs based on the existence of vCenter volumes. This approach allowed me to add the view to any environment, displaying only the vCenter VMs.</p>
<p>After creating the view to select only vCenter VMs, I aimed to build a comprehensive vCenter Monitoring Dashboard. At the top, I included counts of vCenters, clusters, hosts, and VMs, etc‚Ä¶ as these metrics are frequently requested by management. The dashboard features widgets to display all VM volumes (the primary reason for creating the dashboard), vCenter VM performance, CPU/memory history, and a list of vCenters.</p>
<p>It&rsquo;s important to note that in VMware Aria Operations, showing VMware vCenter VMs is different from showing VMware vCenters. When a vCenter is selected in the vCenter Details widget, the dashboard displays host CPU/memory information.</p>
<p>To prevent ESXi hosts from being left in maintenance mode accidentally, I added a donut widget to show their status. Additionally, since cluster DRS can sometimes be disabled for changes and forgotten to be re-enabled, another donut widget shows the DRS status.</p>
<hr>
<h6 id="steps-to-create-the-dashboard">Steps to Create the Dashboard</h6>
<ol>
<li>Create the (4) Views
<ul>
<li>Select all vCenter VMs</li>
<li>Show vCenter Details</li>
<li>Show Hosts Maintenance Mode Status</li>
<li>Show Clusters DRS Status</li>
</ul>
</li>
<li>Create the Dashboard</li>
</ol>
<p>To simplify getting started, all the Views and the Dashboard are available in my GitHub repository for download. <a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/vCenter-Observability" target="_blank" rel="noopener noreffer ">Click Here to Download the files.</a></p>
<hr>
<h6 id="view-to-select-vcenter-vms">View to Select vCenter VMs</h6>
<p><strong>View Data:</strong></p>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-02.png" title="/vcenter-observability/vcenter-observability-02.png" data-thumbnail="/vcenter-observability/vcenter-observability-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>View Filter:</strong></p>
<p>In the view filter, I specified two metrics: ‚Äúguestfilesystem:/storage/imagebuilder|capacity‚Äù and ‚Äúguestfilesystem:/storage/autodeploy|capacity‚Äù. If a VM contains these metrics, it will be selected. These volume names are unique to vCenter VMs, making this approach effective.</p>
<hr>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-01.png" title="/vcenter-observability/vcenter-observability-01.png" data-thumbnail="/vcenter-observability/vcenter-observability-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Screen Shot:</strong></p>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-03.png" title="/vcenter-observability/vcenter-observability-03.png" data-thumbnail="/vcenter-observability/vcenter-observability-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Dashboard Usage:</strong></p>
<figure><a class="lightgallery" href="/vcenter-observability/vcenter-observability-04.gif" title="/vcenter-observability/vcenter-observability-04.gif" data-thumbnail="/vcenter-observability/vcenter-observability-04.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<blockquote>
<p>Stay tuned for future blog posts. I plan to create dashboards for monitoring Aria appliances, similar to what I did for VMware vCenter. It&rsquo;s crucial to ensure these appliances are well monitored and maintained, like a Swiss watch.</p>
</blockquote>
<blockquote>
<p>Update: <a href="https://www.vcrocs.info/aria-appliances-observability/" target="_blank" rel="noopener noreffer ">Link to Aria Appliances Observability Blog</a></p>
</blockquote>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Dashboards/vCenter-Observability" target="_blank" rel="noopener noreffer ">Dale&rsquo;s Github Repository</a></li>
</ul>
<hr>
<h6 id="product-version-used-for-blog-post">Product Version used for Blog Post:</h6>
<ul>
<li>Aria Operations: 8.17.1</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>The relationship between VMware vCenter and the VM it runs on is not available out of the box in VMware Aria Operations. However, by identifying VMs through their unique volume names, I created a view that can be added to any environment to filter out the VMs running vCenter. The filter within that View is what enables this Dashboard to work.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Explore 2024</title>
    <link>https://www.vcrocs.info/vmware-explore-2024/</link>
    <pubDate>Wed, 01 May 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2024/</guid>
    <description><![CDATA[<p><strong>Why I enjoy going to VMware Explore. First as a Customer. Now as a Employee.</strong></p>
<hr>
<blockquote>
<p>&ldquo;Innovate like a startup, deliver like an enterprise‚Äù - Pat Gelsinger</p>
</blockquote>
<hr>
<h6 id="vmware-explore-2024">VMware Explore 2024</h6>
<p>Website: <a href="https://www.vmware.com/explore/us" target="_blank" rel="noopener noreffer ">VMware Explore 2024.</a><br>
Las Vegas Date: August 26 ‚Äì 29, 2024<br>
The Venetian Convention and Expo Center<br>
Registration is open!</p>
<hr>
<h6 id="why-attend">Why Attend</h6>
<p><strong>When I was a VMware Customer, I tried to go to VMware Explore every year. Here is a list of reasons why I enjoyed the conference:</strong></p>
<ul>
<li>To meet other people in the same field as myself. Exchange stories, ideas, contact information, etc.. The Community side of the event alone, is worth the cost to go.</li>
<li>To attend sessions that are done by people that you follow their blogs or socials, is an exciting experience.</li>
<li>The Key Note Sessions get you excited to see what is coming with the next releases of the VMware Products.</li>
<li>Vendor Parties are a great way to meet people and have good food and drink.</li>
<li>Other Highlights for evening Parties for me:
<ul>
<li>vExpert Party</li>
<li>VMUG Party</li>
<li>Event Concert on the last night (Black Keys Concert was my favorite)</li>
</ul>
</li>
</ul>
<hr>
<p><strong>As a Employee my reasons are different to attend. Here is a list:</strong></p>
<ul>
<li>To meet people in person that I work with everyday. We are located across the country and don&rsquo;t get to meet in person. Even if we went into a office everyday, we would never get to meet.</li>
<li>Get Sessions accepted and share the knowledge with the products I work with every day. I like doing presentations on the Automation, Monitoring and Logging Products.</li>
<li>I like to participate in the Hackathon that is part of the conference. In 2023 my Team received 2nd place.</li>
</ul>
<hr>
<h6 id="sessions">Sessions</h6>
<p>I submitted a couple sessions that hope get accepted in 2024, Fingers Crossed. One session I will be presenting with a customer, and 2 sessions I included TAMs to present with me. I am excited about the topics. When the sessions get announced, check back on this blog. I will update what was accepted.</p>
<hr>
<h6 id="sessions-update">Sessions Update!</h6>
<p>I am very excited to announce that I will be doing (3) presentations at VMware Explore 2024.</p>
<ul>
<li>Streamlining Healthcare with Automation: How VMware Can Help | <a href="https://event.vmware.com/flow/vmware/explore2024lv/content/page/catalog?search=INDB1917LV" target="_blank" rel="noopener noreffer ">INDB1917LV</a></li>
<li>Transform VCF Automation Inputs to ABX and Orchestrator Workflow Variables | <a href="https://event.vmware.com/flow/vmware/explore2024lv/content/page/catalog?search=CODE1164LV" target="_blank" rel="noopener noreffer ">CODE1164LV</a></li>
<li>Maximizing VMware Workstation/Fusion for Business, Education, and Home Labs | <a href="https://event.vmware.com/flow/vmware/explore2024lv/content/page/catalog?search=CODE1162LV" target="_blank" rel="noopener noreffer ">CODE1162LV</a></li>
</ul>
<hr>
<p><a href="https://event.vmware.com/flow/vmware/explore2024lv/content/page/catalog?search=Hassinger" target="_blank" rel="noopener noreffer ">Link to all my sessions in the VMware Explore 2024 Content Catalog</a></p>
<hr>
<p><strong>Session Details:</strong></p>
<figure><a class="lightgallery" href="/vmware-explore-2024/vmware-explore-2024-01.png" title="/vmware-explore-2024/vmware-explore-2024-01.png" data-thumbnail="/vmware-explore-2024/vmware-explore-2024-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="my-favorite-places-to-eat-or-things-to-do-while-at-vmware-explore">My favorite places to eat or things to do while at VMware Explore:</h6>
<p><strong>Eating - Places that I have gone and enjoyed:</strong></p>
<ul>
<li><a href="https://www.joes.net/las-vegas/" target="_blank" rel="noopener noreffer ">Joes&rsquo;s Prime Steak and Stone Crab</a> - I have always had a great experience here</li>
<li><a href="https://www.venetianlasvegas.com/restaurants/delmonico-steakhouse.html" target="_blank" rel="noopener noreffer ">Delmonico Steakhouse</a> - You can&rsquo;t leave without having EMERIL‚ÄôS BANANA CREAM PIE!</li>
<li><a href="https://www.venetianlasvegas.com/restaurants/grand-lux-cafe-palazzo.html" target="_blank" rel="noopener noreffer ">Grand Lux Caf√© at The Palazzo</a> is great for Breakfast!</li>
<li><a href="https://www.venetianlasvegas.com/restaurants/yardbird.html" target="_blank" rel="noopener noreffer ">Yardbird</a> is close to conference entrance and food to very good</li>
<li><a href="https://www.in-n-out.com/menu" target="_blank" rel="noopener noreffer ">IN-N-Out BURGER</a> | If you live in the US East and have never gone to an IN-N-Out BURGER, you need to go at least one time.</li>
</ul>
<p><strong>Things to do that I have done and enjoyed:</strong></p>
<ul>
<li><a href="https://www.usbr.gov/lc/hooverdam/index.html" target="_blank" rel="noopener noreffer ">Hoover Damn</a> was nice to go see. Pictures can&rsquo;t replace a visit in person.</li>
<li><a href="https://www.clarkcountynv.gov/government/departments/parks___recreation/shooting_complex/guest_services.php" target="_blank" rel="noopener noreffer ">Sporting Clays at Clark County Shooting Complex</a> - World-Class Shotgun Center</li>
<li><a href="https://www.blm.gov/programs/national-conservation-lands/nevada/red-rock-canyon" target="_blank" rel="noopener noreffer ">Red Rock Canyon National Conservation Area</a></li>
</ul>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://www.vmware.com/explore/us" target="_blank" rel="noopener noreffer ">VMware Explore 2024.</a></li>
<li><a href="https://event.vmware.com/flow/vmware/explore2024lv/reg/login" target="_blank" rel="noopener noreffer ">VMware Explore 2024 | Registration Link.</a></li>
</ul>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Automation Code Creation with ollama</title>
    <link>https://www.vcrocs.info/ollama/</link>
    <pubDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/ollama/</guid>
    <description><![CDATA[<p><strong>My review on using ollama to help create code for Automation</strong></p>
<hr>
<blockquote>
<p>&ldquo;By harnessing the power of AI, I simplify my coding workflow, freeing up time to focus on creating blog posts that resonate with the vCommunity. With the help of AI, my writing becomes more precise, more creative, and more impactful.‚Äù - Dale Hassinger</p>
</blockquote>
<hr>
<h6 id="ollama">ollama</h6>
<figure><a class="lightgallery" href="/ollama/ollama-01.png" title="/ollama/ollama-01.png" data-thumbnail="/ollama/ollama-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<h6 id="ollama-web-site-link">ollama Web Site Link:</h6>
<p><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Link to ollama web site.</a></p>
<p>Building on my experience with ChatGPT, I decided to explore Ollama Local on my trusty Apple MacBook Pro M1. As a user-friendly AI enthusiast, I was eager to see how seamless the installation process would be. To my delight, setting up Ollama Local on Mac is incredibly straightforward.</p>
<p>To get started, simply head to the <a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">Ollama website</a> and download the application as a zip file. Expand the contents of the archive and copy the Ollama Application file into your Applications folder. Double-clicking the icon will launch the app in no time ‚Äì it&rsquo;s that easy!</p>
<p>For this review, I&rsquo;ll be using the Llama3 Large Language Model (LLM) to demonstrate Ollama Local&rsquo;s capabilities. The first time you run the application, it will automatically download the necessary LLM files for you. Like I said, very easy to use.</p>
<p>With Ollama Local up and running, let&rsquo;s dive into its features and see what kind of AI-powered magic it can create.</p>
<p>Go to a terminal and type &ldquo;ollama run llama3&rdquo; to get started.</p>
<hr>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ollama run llama3</span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-02.png" title="/ollama/ollama-02.png" data-thumbnail="/ollama/ollama-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="ollama-models">ollama Models:</h6>
<p><strong>There are many models to pick from to use with ollama&hellip;</strong></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-03.gif" title="/ollama/ollama-03.gif" data-thumbnail="/ollama/ollama-03.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Once you&rsquo;ve chosen the desired model, the web site will provide you with the necessary command prompts to get started. No need to dig through complex documentation or struggle with unfamiliar code - just follow the straightforward instructions and you&rsquo;re good to go!</p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-04.gif" title="/ollama/ollama-04.gif" data-thumbnail="/ollama/ollama-04.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="how-to-run-ollama-from-cli">How to run ollama from cli:</h6>
<p><strong>Here is a quick video to show how to get started from the CLI</strong></p>
<ul>
<li>Run command to start ollama</li>
<li>Ask a question and see the results</li>
<li>type /bye to exit ollama</li>
</ul>
<p>Hands-on experience with this tool? A breeze! Not only is it incredibly user-friendly, but the performance on my laptop has been impressive too. And what really stands out is the speed at which responses are delivered - no waiting around here! The unedited video itself
is a testament to its fast processing capabilities.</p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-05.gif" title="/ollama/ollama-05.gif" data-thumbnail="/ollama/ollama-05.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ollama run llama3
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; Who Created PowerShell
</span></span><span class="line"><span class="cl">&gt;&gt;&gt; /bye</span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="ollama-real-world-examples">ollama &ldquo;Real World&rdquo; Examples:</h6>
<p>Now I will show some examples of how I use ollama everyday for coding and writing. They are my main uses cases for AI.</p>
<hr>
<h6 id="ollama-powershell-function">ollama PowerShell Function</h6>
<p>In my previous blogs, I&rsquo;ve highlighted the versatility of PowerShell in automating various tasks. In this blog, I&rsquo;ll show how to harness the power of PowerShell to interact with AI assistants like Ollama. To start, I created a custom function that enables you to ask Ollama questions directly from the PowerShell command line. Here&rsquo;s the sample code to get you started:</p>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Function to ask Ollama</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">ask-ollama</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Code to run when the function is called</span>
</span></span><span class="line"><span class="cl">    <span class="k">param</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span><span class="nb">Parameter</span><span class="p">(</span><span class="na">Mandatory</span><span class="p">=</span><span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">      <span class="nv">$question</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">    <span class="c"># Set request body</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$requestBody</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">model</span> <span class="p">=</span> <span class="s2">&#34;llama3&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">prompt</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$question</span><span class="s2">&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="n">stream</span> <span class="p">=</span> <span class="vm">$false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># Set headers</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$headers</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">=</span><span class="s1">&#39;application/json&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$Body</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$requestBody</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">      
</span></span><span class="line"><span class="cl">    <span class="c"># Send the request</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$request</span> <span class="p">=</span><span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s1">&#39;http://localhost:11434/api/generate&#39;</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Body</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$response</span> <span class="p">=</span><span class="nv">$request</span><span class="p">.</span><span class="py">Content</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Print response to console</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="nv">$response</span><span class="p">.</span><span class="py">response</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Copy response to clipboard</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Set-Clipboard</span> <span class="n">-Value</span> <span class="nv">$response</span><span class="p">.</span><span class="py">response</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Example Questions -----</span>
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;What is PowerCLI&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Create a PowerShell script to connect to a vCenter, Get a list of all VMs with a Snap&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Create a Salt State file to stop and disable a service with a name of Spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">ask-ollama</span> <span class="n">-question</span> <span class="s2">&#34;Show me how to copy a powershell variable value to the clipboard&#34;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<p>If you are a PowerShell enthusiast, you&rsquo;re probably accustomed to the flexibility of functions within your scripts. Feel free to adapt this example to your own workflow and coding style, regardless of whether you prefer to use it as is or modify it to fit your needs.</p>
<hr>
<h6 id="ollama-prompt-engineering-examples">ollama Prompt Engineering Examples:</h6>
<h6 id="set-the-role-to-start">Set the &lsquo;Role&rsquo; to start:</h6>
<p>One of my habits when working with ollama, or ChatGPT, is setting a specific &lsquo;role&rsquo; for our conversations. By defining a clear context or persona, I&rsquo;ve found that I&rsquo;m able to receive more effective and insightful responses from the AI. This approach has been refined over time through experimentation and exploration of the product&rsquo;s capabilities, yielding better results and a more productive dialogue.</p>
<ul>
<li>Act as a PowerShell SME</li>
<li>Act as a PowerCLI SME</li>
<li>Act as a VMware SME</li>
<li>Act as a vRealize SME</li>
<li>Act as a Javascript SME to work with VMware Orchestrator</li>
<li>Act as a Technology Blogger</li>
</ul>
<hr>
<h6 id="questions-to-generate-code">Questions to generate code:</h6>
<ul>
<li>PowerCLI:
<ul>
<li>Act as a PowerCLI SME</li>
<li>Create a script to connect to a VMware vCenter. username is <a href="mailto:administrator@vsphere.local" rel="">administrator@vsphere.local</a>. password is Password123. vCenter name is vcenter8x.corp.local. List all VMs that have a snap. Export the list of VMs with a snap to c:\reports\vms-with-snaps.csv.</li>
</ul>
</li>
</ul>
<p><strong>Unedited Code Returned:</strong></p>
<p><span style="font-size: 13px; color: red; font-weight: bold;">Click arrow to expand the code:</span><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Set the connection settings</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcenter</span> <span class="p">=</span> <span class="s2">&#34;vcenter8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$username</span> <span class="p">=</span> <span class="s2">&#34;administrator@vsphere.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span> <span class="p">=</span> <span class="s2">&#34;Password123&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Connect to the vCenter using PowerCLI</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcenter</span> <span class="n">-User</span> <span class="nv">$username</span> <span class="n">-Password</span> <span class="nv">$password</span> <span class="n">-ErrorAction</span> <span class="n">Stop</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Get a list of all VMs that have a snapshot</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmsWithSnaps</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-VM</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="n">HasSnapshot</span><span class="p">}</span> <span class="p">|</span> <span class="nb">ForEach-Object</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vm</span> <span class="p">=</span> <span class="nv">$_</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Found snapshot for VM: </span><span class="nv">$vm</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmsWithSnaps</span> <span class="p">+=</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Export the list of VMs with a snap to a CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmsWithSnaps</span> <span class="p">|</span> <span class="nb">Export-Csv</span> <span class="n">-Path</span> <span class="s2">&#34;C:\reports\vms-with-snaps.csv&#34;</span> <span class="n">-NoTypeInformation</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Disconnect from the vCenter</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl"><span class="p">```</span>
</span></span><span class="line"><span class="cl"><span class="n">Let</span> <span class="n">me</span> <span class="n">explain</span> <span class="n">what</span> <span class="n">each</span> <span class="n">part</span> <span class="n">of</span> <span class="n">the</span> <span class="n">script</span> <span class="n">does</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="mf">1</span><span class="p">.</span> <span class="n">The</span> <span class="n">first</span> <span class="n">section</span> <span class="n">sets</span> <span class="n">the</span> <span class="n">connection</span> <span class="n">settings</span><span class="err">:</span> <span class="p">`</span><span class="n">vcenter</span><span class="p">`,</span> <span class="p">`</span><span class="n">username</span><span class="p">`,</span> <span class="n">and</span> <span class="p">`</span><span class="n">password</span><span class="p">`.</span>
</span></span><span class="line"><span class="cl"><span class="mf">2</span><span class="p">.</span> <span class="n">The</span> <span class="p">`</span><span class="nb">Connect-VIServer</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">connects</span> <span class="n">to</span> <span class="n">your</span> <span class="n">VMware</span> <span class="n">vCenter</span> <span class="n">using</span> <span class="n">the</span> <span class="n">specified</span> <span class="n">credentials</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="mf">3</span><span class="p">.</span> <span class="n">The</span> <span class="p">`</span><span class="nb">Get-VM</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">retrieves</span> <span class="n">a</span> <span class="n">list</span> <span class="n">of</span> <span class="n">all</span> <span class="n">virtual</span> <span class="n">machines</span> <span class="k">in</span> <span class="n">the</span> <span class="n">vCenter</span><span class="p">.</span> <span class="n">We</span> <span class="n">then</span> <span class="n">use</span> <span class="n">the</span> <span class="p">`</span><span class="nb">Where-Object</span><span class="p">`</span> <span class="n">cmdlet</span> <span class="n">to</span> <span class="kd">filter</span><span class="w"> </span><span class="nb">this</span> <span class="n">list</span> <span class="n">and</span> 
</span></span><span class="line"><span class="cl"><span class="n">only</span> <span class="n">include</span> <span class="n">VMs</span> <span class="n">that</span> <span class="n">have</span> <span class="n">at</span> <span class="n">least</span> <span class="n">one</span> <span class="n">snapshot</span> <span class="p">(`$</span><span class="n">_</span><span class="p">.</span><span class="n">HasSnapshot</span><span class="p">`).</span>
</span></span><span class="line"><span class="cl"><span class="mf">4</span><span class="p">.</span> <span class="n">We</span> <span class="n">loop</span> <span class="n">through</span> <span class="n">each</span> <span class="n">VM</span> <span class="n">that</span> <span class="n">has</span> <span class="n">a</span> <span class="n">snapshot</span> <span class="n">using</span> <span class="n">a</span> <span class="p">`</span><span class="nb">ForEach-Object</span><span class="p">`</span> <span class="n">cmdlet</span><span class="p">,</span> <span class="n">and</span> <span class="n">add</span> <span class="n">its</span> <span class="n">name</span> <span class="n">to</span> <span class="n">an</span> <span class="n">array</span> <span class="p">`$</span><span class="n">vmsWithSnaps</span><span class="p">`.</span>
</span></span><span class="line"><span class="cl"><span class="mf">5</span><span class="p">.</span> <span class="n">The</span> <span class="n">final</span> <span class="n">section</span> <span class="n">exports</span> <span class="n">the</span> <span class="n">array</span> <span class="n">of</span> <span class="n">VM</span> <span class="n">names</span> <span class="n">to</span> <span class="n">a</span> <span class="n">CSV</span> <span class="n">file</span> <span class="n">named</span> <span class="p">`</span><span class="nb">vms-with</span><span class="n">-snaps</span><span class="p">.</span><span class="n">csv</span><span class="p">`</span> <span class="k">in</span> <span class="n">the</span> <span class="p">`</span><span class="n">C:</span><span class="p">\</span><span class="n">reports</span><span class="p">`</span> <span class="n">directory</span><span class="p">.</span>
</span></span><span class="line"><span class="cl"><span class="mf">6</span><span class="p">.</span> <span class="k">Finally</span><span class="p">,</span> <span class="n">we</span> <span class="n">disconnect</span> <span class="n">from</span> <span class="n">the</span> <span class="n">vCenter</span> <span class="n">using</span> <span class="n">the</span> <span class="p">`</span><span class="nb">Disconnect-VIServer</span><span class="p">`</span> <span class="n">cmdlet</span><span class="p">.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Save</span> <span class="n">this</span> <span class="n">script</span> <span class="n">as</span> <span class="n">a</span> <span class="n">PowerShell</span> <span class="n">file</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="py">g</span><span class="p">.,</span> <span class="p">`</span><span class="n">vms_with_snaps</span><span class="p">.</span><span class="n">ps1</span><span class="p">`)</span> <span class="n">and</span> <span class="n">run</span> <span class="n">it</span> <span class="n">to</span> <span class="n">get</span> <span class="n">the</span> <span class="n">list</span> <span class="n">of</span> <span class="n">VMs</span> <span class="n">with</span> <span class="n">snapshots</span> <span class="n">exported</span> <span class="n">to</span> <span class="n">the</span> <span class="n">specified</span> 
</span></span><span class="line"><span class="cl"><span class="n">CSV</span> <span class="n">file</span><span class="p">!</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<figure><a class="lightgallery" href="/ollama/ollama-07.gif" title="/ollama/ollama-07.gif" data-thumbnail="/ollama/ollama-07.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Code questions that I have used:</strong></p>
<ul>
<li>Convert this curl command to PowerShell</li>
<li>Create a html file that does&hellip; Amazing how advanced the code will be for a complete web page. Include a table that I can sort the columns, select the number of rows and have a search within the table. Awesome!</li>
<li>Convert this Python to PowerShell or convert this PowerShell to Python</li>
<li>Javascript that can be used with VMware Orchestrator Actions and Workflows</li>
<li>SQL commands</li>
<li>Linux commands</li>
<li>vi and nano help</li>
<li>salt state files</li>
</ul>
<hr>
<h6 id="questions-to-help-with-writing">Questions to help with writing:</h6>
<ul>
<li>My writing process in commands:
<ul>
<li>Act as a Technology Blogger</li>
<li>Reword &ldquo;Paste what I wrote within double quotes&rdquo;</li>
</ul>
</li>
<li>See what the results look like. If I want a second example I will type:
<ul>
<li>&ldquo;again&rdquo; or</li>
<li>&ldquo;another example&rdquo;</li>
</ul>
</li>
<li>For my writing style I will use this command a lot:
<ul>
<li>use less adjectives</li>
</ul>
</li>
</ul>
<p>Data for LLama3 is up to the year 2022. When asking VMware Aria questions I will still use vRealize a lot because of the name change.</p>
<ul>
<li>Other writing example questions:
<ul>
<li>I want to create a Technology presentation description &ldquo;Topic VMware vRealize Operations with a focus on Dashboards&rdquo;</li>
</ul>
</li>
</ul>
<hr>
<h6 id="ollama-commands">ollama commands:</h6>
<p>Two commands I use the most:</p>
<ul>
<li>&ldquo;ollama run llama3&rdquo; to start ollama</li>
<li>&ldquo;/bye&rdquo; to exit ollama</li>
</ul>
<figure><a class="lightgallery" href="/ollama/ollama-06.png" title="/ollama/ollama-06.png" data-thumbnail="/ollama/ollama-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="commonsense-rules">Commonsense Rules:</h6>
<p><strong>Rules I use when working with AI/LLMs:</strong></p>
<ul>
<li>Never use any code generated in a production environment without testing in a lab first</li>
<li>Always understand the code that is generated before even using in a lab</li>
<li>Read the text that is generated before using</li>
<li>Understand that AI/LLMs are to help you, not do the work for you.</li>
<li>You are responsible for anything generated that you use.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>ollama and llama3 are both available at no cost today (04/2024).</li>
<li>I pay $20 per month for ChatGPT. You get more with ChatGPT but ollama does a good job for a way to have a local LLM option.</li>
</ul>
<p><strong>Use Cases to use ollama local:</strong></p>
<ul>
<li>Traveling and no internet access for AI like ChatGPT.
<ul>
<li>Use ollama while flying. Nice way to get some help at 35,000 ft.</li>
</ul>
</li>
<li>Go to your family cabin off the grid and still use ollama on the MacBook.</li>
<li>Off the grid camping.</li>
<li>Basically, if the laptop has power, you have access to ollama AI, which is very cool in my mind. It is awesome to have the power of AI at your fingertips and not require the power of the internet to use it.</li>
</ul>
<hr>
<p><strong>Stream Deck and ollama commands together is a great time saver.</strong></p>
<ul>
<li>I assign commands I use the most with ollama to buttons.</li>
<li>When I have a prompt that works well, assigning the prompt to a stream deck button makes it easy to always run the command the same way. I should call them Prompt Engineering Buttons.</li>
</ul>
<figure><a class="lightgallery" href="/ollama/ollama-08.png" title="/ollama/ollama-08.png" data-thumbnail="/ollama/ollama-08.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<p>In this video, the ollama commands were run using a Stream Deck Button. Realtime speed, no video edits:</p>
<figure><a class="lightgallery" href="/ollama/ollama-09.gif" title="/ollama/ollama-09.gif" data-thumbnail="/ollama/ollama-09.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://ollama.com/" target="_blank" rel="noopener noreffer ">ollama web site.</a></li>
</ul>
<hr>
<h6 id="product-versions-used-for-blog-post">Product Versions used for Blog Post:</h6>
<ul>
<li>ollama: 0.1.32 | Use this command at cli to show ollama version &ldquo;ollama -v&rdquo;</li>
<li>LLM: llama3</li>
</ul>
<hr>
<p><span style="font-size: 16px; color: red; font-weight: bold;">DO NOT EVER USE ANY CODE FROM A BLOG IN A PRODUCTION ENVIRONMENT! PLEASE TEST ANY CODE IN THIS BLOG IN A LAB!</span></p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware vExpert 2024 | Fifth Year</title>
    <link>https://www.vcrocs.info/vexpert-2024/</link>
    <pubDate>Sat, 27 Apr 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vexpert-2024/</guid>
    <description><![CDATA[<p><strong>VMware vExpert 2024</strong></p>
<hr>
<h6 id="vmware-vexpert-2020---present">VMware vExpert 2020 - Present</h6>
<p>I have been included in (2) vExpert Subprograms in 2024.</p>
<h6 id="vexpert-subprograms">vExpert Subprograms:</h6>
<ul>
<li>vExpert Cloud Management</li>
<li>vExpert vSphere</li>
</ul>
<hr>
<p><a class="lightgallery" href="/vexpert-2024/2024-vexpert-cloud-management.png" title="/vexpert-2024/2024-vexpert-cloud-management.png" data-thumbnail="/vexpert-2024/2024-vexpert-cloud-management.png">
        
    </a><br>
<a class="lightgallery" href="/vexpert-2024/2024-vexpert-vsphere.png" title="/vexpert-2024/2024-vexpert-vsphere.png" data-thumbnail="/vexpert-2024/2024-vexpert-vsphere.png">
        
    </a></p>
<hr>
<p>2024 is the 4th year that I was accepted into the VMware vExpert Cloud Management subprogram and the 1st year for vExpert vSphere.</p>
<hr>
<p>I&rsquo;m immensely honored to be included in the VMware vExpert program once again, marking my fifth year of participation. The aspect of the vExpert program I find particularly commendable is its focus on acknowledging individuals for their contributions and dedication to &ldquo;Giving Back&rdquo;. Being chosen for the vExpert program signifies a commitment to sharing knowledge and a desire to elevate not just oneself but also those within the vCommunity.</p>
<p>As an employee of Broadcom By VMware, one of my primary ambitions is to contribute more significantly to the vCommunity than I could as a user of VMware products.</p>
<hr>
<p>I did more for the vCommunity in 2023 than any previous years.</p>
<ul>
<li>
<p><strong>VMware Explore 2023 Presentation</strong> | Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud) [CODE2501LV]</p>
</li>
<li>
<p><strong>Hackathon Team Captain</strong> (Finished in 2nd Place) | VMware Explore 2023</p>
</li>
<li>
<p><strong>Philly VMUG - 2023</strong> | VMware Aria Automation and Operations</p>
</li>
<li>
<p><strong>The PowerShell Podcast</strong> | ‚ÄúUsing PowerCLI with Dale Hassinger‚Äù</p>
</li>
<li>
<p><strong>VMware Community Podcast</strong> #659</p>
</li>
<li>
<p><strong>Blogs:</strong> | More Blogs than any previous year</p>
</li>
</ul>
<hr>
<h6 id="what-is-the-vmware-vexpert-program">What is the VMware vExpert Program?</h6>
<h6 id="program-overview">Program Overview</h6>
<p>The VMware vExpert program is VMware&rsquo;s global evangelism and advocacy program. The program is designed to put VMware&rsquo;s marketing resources towards your advocacy efforts. Promotion of your articles, exposure at our global events, co-op advertising, traffic analysis, and early access to beta programs and VMware&rsquo;s roadmap. The awards are for individuals, not companies, and last for one year. Employees of both customers and partners can receive the awards. In the application, we consider various community activities from the previous year as well as the current year&rsquo;s (only for 2nd half applications) activities in determining who gets awards. We look to see that not only were you active but are still active in the path you chose to apply for.</p>
<h6 id="criteria">Criteria</h6>
<p>If you are interested in becoming a vExpert the criteria is simple. We are looking for IT Professionals who are sharing their VMware knowledge and contributing that back to the community. The term &ldquo;giving back&rdquo; is defined as going above and beyond your day job. There are several ways to share your knowledge and engage with the community. Some of those activities are blogging, book authoring, magazine articles, CloudCred task writing, active in Facebook groups, forum (VMTN as well as other non VMware) platforms, public speaking, VMUG leadership, videos and so on.</p>
<hr>
<h6 id="thanks">Thanks:</h6>
<p>I have worked with a great group of people at VMware, past and present. I would like to thank everyone that has helped me on my journey called a career.</p>
<hr>
<p>Email: <a href="mailto:Dale.Hassinger@vCrocs.info" rel="">Dale.Hassinger@vCrocs.info</a><br>
Location: Dillsburg, PA</p>
<blockquote>
<p>&ldquo;9 - 5 pays the bills, 5 - 10 advances your career&rdquo;</p>
</blockquote>]]></description>
</item>
<item>
    <title>VMware Aria Automation | How to send messages and updates</title>
    <link>https://www.vcrocs.info/aria-automation-messages-updates/</link>
    <pubDate>Sun, 17 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-automation-messages-updates/</guid>
    <description><![CDATA[<p><strong>How to send messages/updates to a Microsoft Teams Channel or Google Spaces.</strong></p>
<hr>
<blockquote>
<p>&ldquo;If everyone is moving forward together, then success takes care of itself.‚Äù - Henry Ford</p>
</blockquote>
<hr>
<h6 id="vmware-aria-automation">VMware Aria Automation</h6>
<p>Whenever new VMs are deployed or Day 2 operations are executed via the VMware Aria Automation Catalog, I find it crucial to update our team through a common messaging platform about the ongoing creations or modifications. In this blog, I&rsquo;ll demonstrate how to dispatch notifications to both Microsoft Teams and Google Spaces via a Webhook. This technique can be adapted for any messaging service such as Slack, Zoom, Discord, etc., by simply altering the JSON body formatting code and creating a Webhook for message delivery.</p>
<p>I will guide you through the process of sending alerts from VMware Aria Automation utilizing ABX Actions and Orchestrator Workflows. Though the procedure remains largely the same, there are minor variations in acquiring Property Values. Presenting both methods offers you, the Automation Specialists, the freedom to choose the approach that seamlessly integrates into your workflows. My philosophy in automation is that there are countless ways to achieve the same outcome.</p>
<hr>
<p>In this blog, I&rsquo;ll walk you through the creation of a new virtual machine (VM). At the onset of the build process, I have configured an Extensibility Subscription that triggers the sending of notifications to both Microsoft Teams and Google Spaces. This is accomplished through the use of an ABX Action and an Orchestrator Workflow.</p>
<hr>
<p>Besides notifying your team when a new VM is created, I&rsquo;ll demonstrate how to dispatch a message through an Orchestrator Workflow for a Day 2 Automation process.</p>
<hr>
<h6 id="create-a-new-vm-and-send-message">Create a New VM and Send Message</h6>
<p><strong>Steps:</strong></p>
<ol>
<li>Within the Design section of Aria Automation, create a template. For the purpose of this tutorial, we will construct a straightforward Rocky Linux VM. | Refer to <a href="#screen-shot-01">Screen Shot 1</a>.</li>
<li>Ensure that all properties you wish to include in your notification are incorporated into the template&rsquo;s YAML code. These property values will be transmitted to both ABX Actions and Orchestrator Workflows. | Refer to <a href="#screen-shot-02">Screen Shot 2</a>.
<ul>
<li>You have the flexibility to include any property in your messages, provided it is specified in the template&rsquo;s YAML code.</li>
</ul>
</li>
<li>Proceed to set up an Extensibility Action. | See <a href="#screen-shot-03">Screen Shot 3</a> and <a href="#screen-shot-04">Screen Shot 4</a>.</li>
<li>Establish an Extensibility Subscription that will initiate the ABX Action or Orchestrator Workflow as required. | Refer to <a href="#screen-shot-05">Screen Shot 5</a>.</li>
<li>Here&rsquo;s an example of how to define a subscription. | See <a href="#screen-shot-06">Screen Shot 6</a>.</li>
<li>Initiate the creation of an Orchestrator Workflow. | Refer to <a href="#screen-shot-07">Screen Shot 7</a>.
<ul>
<li>Incorporate an input property into the Orchestrator Workflow. | See <a href="#screen-shot-08">Screen Shot 8</a>.</li>
<li>Outline the schema within the Orchestrator Workflow. | Refer to <a href="#screen-shot-09">Screen Shot 9</a>.</li>
<li>Inject the necessary code into the Orchestrator Workflow. | See <a href="#screen-shot-10">Screen Shot 10</a> and <a href="#screen-shot-11">Screen Shot 11</a>.</li>
</ul>
</li>
<li>Deploy a new VM and confirm that the Extensibility Subscription successfully triggered the ABX Action you defined.</li>
<li>Check your preferred messaging system to ensure the notification was received.
<ul>
<li>Example of a Google Spaces Message | Refer to <a href="#screen-shot-12">Screen Shot 12</a>.</li>
<li>Example of a Microsoft Teams Message | See <a href="#screen-shot-13">Screen Shot 13</a>.</li>
</ul>
</li>
<li>If all steps were executed successfully, it&rsquo;s time for a celebration!</li>
<li><a href="#screen-shot-14">Screen Shot 14</a> illustrates the process of creating a Google Spaces Webhook.</li>
</ol>
<hr>
<h6 id="orchestrator-workflow-day-2-automation-and-send-message">Orchestrator Workflow Day 2 Automation and Send Message</h6>
<p><strong>Steps:</strong></p>
<ol>
<li>Initiate the creation of an Orchestrator Workflow. Creating a new Workflow is the same for Day 2 Automation Processes as when a Workflow was created for building a New VM. | Refer to <a href="#screen-shot-07">Screen Shot 7</a>.
<ul>
<li>Incorporate an input property into the Orchestrator Workflow for every question needed to complete the Day 2 Automation. | See <a href="#screen-shot-15">Screen Shot 15</a>.</li>
<li>Inject the necessary code into the Orchestrator Workflow. | See <a href="#screen-shot-16">Screen Shot 16</a>.</li>
</ul>
</li>
<li>Run the Workflow and confirm that the code successfully ran and created the message .</li>
<li>Check your preferred messaging system to ensure the notification was received. The Messages with look the same as when you created a New VM. YOU define what information is shown.
<ul>
<li>Example of a Google Spaces Message | Refer to <a href="#screen-shot-12">Screen Shot 12</a>.</li>
<li>Example of a Microsoft Teams Message | See <a href="#screen-shot-13">Screen Shot 13</a>.</li>
</ul>
</li>
<li>If all steps were executed successfully, it&rsquo;s time for a high five!</li>
<li>Example of a Day 2 Automation Microsoft Teams Message | See <a href="#screen-shot-17">Screen Shot 17</a>.</li>
</ol>
<hr>
<h6 id="screen-shots-of-the-steps">Screen Shots of the Steps:</h6>
<h6 id="screen-shot-01">Screen Shot 01:</h6>
<p>Design Template with YAML Code that has all the required Properties.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-01.png" title="/aria-automation-messages-updates/aria-automation-messages-01.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Design Template Example YAML Code:</strong></p>
<p>This YAML code shows all the Properties that I want to send to a ABX Action or Orchestrator Workflow.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-YAML" data-lang="YAML"><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Ubuntu-20-with-minion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">9</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">Customization-Ubuntu-22</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Customization Spec:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;VM Name:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">LINUX-U-16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.69.16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">BuildTime</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Build Time:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">format</span><span class="p">:</span><span class="w"> </span><span class="l">date-time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vCenterFolders</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;vCenter Folder:&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">Blogs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">$dynamicEnum</span><span class="p">:</span><span class="w"> </span><span class="l">/data/vro-actions/TAM/DBH_vCenter_Folders</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_vSphere_Machine_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.vSphere.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">vCenter-ubuntu-20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">vCenter-1CPU-2GB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">BuildTime</span><span class="p">:</span><span class="w"> </span><span class="l">${input.BuildTime}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">folderName</span><span class="p">:</span><span class="w"> </span><span class="l">${input.vCenterFolders}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">vmIP</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">Cluster:PROD</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_vSphere_Network_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_vSphere_Network_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.vSphere.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">Network:vCenter-VMs</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-02">Screen Shot 02:</h6>
<p>Highlight of YAML Code showing Properties.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-02.png" title="/aria-automation-messages-updates/aria-automation-messages-02.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-03">Screen Shot 03:</h6>
<p>Where to create Extensibility ABX Actions.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-03-1.png" title="/aria-automation-messages-updates/aria-automation-messages-03-1.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-03-1.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-04">Screen Shot 04:</h6>
<p>Example Extensibility ABX Action.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-03-2.png" title="/aria-automation-messages-updates/aria-automation-messages-03-2.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-03-2.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Extensibility ABX Action Code:</strong></p>
<p>Code Snippets.</p>
<ul>
<li>Each ABX Action starts with identical code to retrieve Property Values.</li>
<li>The variation arises in the methodology of dispatching this information to the respective messaging systems.</li>
</ul>
<p>Here&rsquo;s an example script for sending notifications to Microsoft Teams.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">resourceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">image</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">image</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">flavor</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">flavor</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">folderName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">folderName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">vmIP</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">vmIP</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="n">userName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="py">userName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---image:&#34;</span><span class="nv">$image</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--flavor:&#34;</span><span class="nv">$flavor</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--folder:&#34;</span><span class="nv">$folder</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;userName:&#34;</span><span class="nv">$userName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;----vmIP:&#34;</span><span class="nv">$vmIP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- [ Start Add Alert to Teams Channel ] ---</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://vcrocs.webhook.office.com/webhookb2/ac73a8c3-bd4572@015568c1-bbe7-hack-me-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2f-hack-you-12/925b-9960-4590-9251-65db25f05419&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Create the message card</span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageCard</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@type&#34;</span>    <span class="p">=</span> <span class="s2">&#34;MessageCard&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@context&#34;</span> <span class="p">=</span> <span class="s2">&#34;http://schema.org/extensions&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;summary&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Issue 176715375&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sections&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;activityTitle&#34;</span>    <span class="p">=</span> <span class="s2">&#34;vRA Automated VM Build:&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;facts&#34;</span>            <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM IP:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmIP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Created By:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$userName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Image:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$image</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;vCenter Folder:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$folder</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Flavor:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$flavor</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;markdown&#34;</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message card</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-ContentType</span> <span class="s1">&#39;application/json&#39;</span> <span class="n">-Body</span> <span class="nv">$messageCard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Done&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>This code is to send a message to Google Spaces.</p>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">resourceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">image</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">image</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">flavor</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">flavor</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">folderName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">folderName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">vmIP</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">vmIP</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="n">userName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata</span><span class="p">.</span><span class="py">userName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---image:&#34;</span><span class="nv">$image</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--flavor:&#34;</span><span class="nv">$flavor</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--folder:&#34;</span><span class="nv">$folder</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;userName:&#34;</span><span class="nv">$userName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;----vmIP:&#34;</span><span class="nv">$vmIP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- [ Start Add Alert to Google Chat ] ---</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># --- Create json body for Google Alert   </span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageBody</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">cards</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">header</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">title</span>    <span class="p">=</span> <span class="s2">&#34;New VM Build&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">sections</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="n">widgets</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmname</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM IP:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmIP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;Created By:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$username</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM Image:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$image</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;vCenter Folder:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$folder</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">},</span>
</span></span><span class="line"><span class="cl">                        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                            <span class="n">keyValue</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                                <span class="n">topLabel</span>         <span class="p">=</span> <span class="s2">&#34;VM Flavor:&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">content</span>          <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$flavor</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                                <span class="n">contentMultiline</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">                            <span class="p">}</span>
</span></span><span class="line"><span class="cl">                        <span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$jsonMessage</span> <span class="p">=</span> <span class="nv">$messageBody</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Output the JSON to verify</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$jsonMessage</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL (replace it with your actual webhook URL)</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://chat.googleapis.com/v1/spaces/AAAAvSYSmfg/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&amp;token=Vj-NoThfrmjLnkIW_iQRQw71qcE2CGxG1tkjs2ArM7o&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Body</span> <span class="nv">$jsonMessage</span> <span class="n">-ContentType</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c">#$outPut = &#34;WebHook Date/Time: &#34; + $results.createTime</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Write-Host $outPut</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Done&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">return</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-05">Screen Shot 05:</h6>
<p>Subscriptions used to start ABX Actions or Orchestrator Workflows.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-03.png" title="/aria-automation-messages-updates/aria-automation-messages-03.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-06">Screen Shot 06:</h6>
<p>Subscription definition example.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-04.png" title="/aria-automation-messages-updates/aria-automation-messages-04.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-07">Screen Shot 07:</h6>
<p>Create a new Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-07.png" title="/aria-automation-messages-updates/aria-automation-messages-07.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-08">Screen Shot 08:</h6>
<p>Add Input named &ldquo;inputProperties&rdquo; to the Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-08.png" title="/aria-automation-messages-updates/aria-automation-messages-08.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-08.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-09">Screen Shot 09:</h6>
<p>Create the Orchestrator Workflow Schema.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-09.png" title="/aria-automation-messages-updates/aria-automation-messages-09.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-09.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-10">Screen Shot 10:</h6>
<p>Add the code to the Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-10.png" title="/aria-automation-messages-updates/aria-automation-messages-10.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-10.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Orchestrator Workflow Code:</strong></p>
<p>Code Examples. At the start of each Orchestrator Workflow, the code for retrieving Property Values is consistent. The variation comes in how the information is sent to each messaging system.</p>
<ul>
<li>For sending messages to Microsoft Teams, use the following code.</li>
<li>To send a message to Google Spaces in a Workflow, apply the same Google Spaces code used in ABX Actions.</li>
<li>The Google Spaces code does not change between ABX Actions and Workflows.</li>
<li>The difference in ABX Actions and Workflows is in the method of obtaining Property Values.</li>
</ul>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="n">resourceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">resourceNames</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">image</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$image</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">image</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">flavor</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$flavor</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">flavor</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">folderName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$folder</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">folderName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="n">vmIP</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmIP</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">inputProperties</span><span class="p">.</span><span class="py">customProperties</span><span class="p">.</span><span class="py">vmIP</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">__metadata_userName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$userName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">__metadata_userName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---image:&#34;</span><span class="nv">$image</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--flavor:&#34;</span><span class="nv">$flavor</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;--folder:&#34;</span><span class="nv">$folder</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;userName:&#34;</span><span class="nv">$userName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;----vmIP:&#34;</span><span class="nv">$vmIP</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://vcrocs.webhook.office.com/webhookb2/ac73a8c3-59a2-hack-me-bd4572@015568c1-bbe7-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2fcbd-hack-you-0212/925be554-9960-4590-9251-65db25f05419&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Create the message card</span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageCard</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@type&#34;</span>    <span class="p">=</span> <span class="s2">&#34;MessageCard&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@context&#34;</span> <span class="p">=</span> <span class="s2">&#34;http://schema.org/extensions&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;summary&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Issue 176715375&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sections&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;activityTitle&#34;</span>    <span class="p">=</span> <span class="s2">&#34;vRA Automated VM Build:&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;facts&#34;</span>            <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM IP:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmIP</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Created By:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$userName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Image:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$image</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;vCenter Folder:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$folder</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Flavor:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$flavor</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;markdown&#34;</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message card</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-ContentType</span> <span class="s1">&#39;application/json&#39;</span> <span class="n">-Body</span> <span class="nv">$messageCard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span><span class="p">=</span><span class="vm">@</span><span class="p">{</span><span class="n">status</span> <span class="p">=</span> <span class="s1">&#39;done&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-11">Screen Shot 11:</h6>
<p>Code difference between a Orchestrator Workflow and a ABX Action.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-11.png" title="/aria-automation-messages-updates/aria-automation-messages-11.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-11.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="message-examples">Message Examples:</h6>
<h6 id="screen-shot-12">Screen Shot 12:</h6>
<p>When all is configured and functioning properly, the Google Space message containing the New VM Build Details will appear as follows. Quite impressive!</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-google-space.png" title="/aria-automation-messages-updates/aria-automation-messages-google-space.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-google-space.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-13">Screen Shot 13:</h6>
<p>Microsoft Teams Message with New VM Build Details. Very Cool!</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-teams-message.png" title="/aria-automation-messages-updates/aria-automation-messages-teams-message.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-teams-message.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-14">Screen Shot 14:</h6>
<p>How to create a Google Spaces Webhook. Link included below on how to create a Microsoft Teams Webhook.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-12.png" title="/aria-automation-messages-updates/aria-automation-messages-12.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-12.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="start-of-day-2-automation-screen-shots">Start of Day 2 Automation Screen Shots:</h6>
<h6 id="screen-shot-15">Screen Shot 15:</h6>
<p>Add all the required inputs to the Workflow for the Day 2 Automation process.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-15.png" title="/aria-automation-messages-updates/aria-automation-messages-15.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-15.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="screen-shot-16">Screen Shot 16:</h6>
<p>Add the code to the Orchestrator Workflow.</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-16.png" title="/aria-automation-messages-updates/aria-automation-messages-16.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-16.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Orchestrator Workflow Code for Day 2 Automation:</strong></p>
<p>Code Example.</p>
<ul>
<li>The difference between this Workflow for day 2 Automation Code and when I used a Workflow to create a new VM is how you get the input values.</li>
<li>For sending messages to Microsoft Teams, use the following code.</li>
<li>To send a message to Google Spaces in a Workflow, apply the same Google Spaces code used in ABX Actions.</li>
<li>The Google Spaces code does not change between ABX Actions and Workflows.</li>
<li>The difference in ABX Actions and Workflows is in the method of obtaining Property Values.</li>
</ul>
<p><span style="color: red; font-weight: bold;">Click arrow to expand the code:</span></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Handler($context</span><span class="p">,</span> <span class="nv">$inputs</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Build PowerShell variables</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">vmName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$vmName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">vmName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">snapName</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapName</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapName</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">snapName</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(!</span><span class="nv">$inputs</span><span class="p">.</span><span class="n">snapDescription</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapDescription</span> <span class="p">=</span> <span class="s2">&#34;NA&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$snapDescription</span> <span class="p">=</span> <span class="nv">$inputs</span><span class="p">.</span><span class="py">snapDescription</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;---------vmName:&#34;</span><span class="nv">$vmName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;-------snapName:&#34;</span><span class="nv">$snapName</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;snapDescription:&#34;</span><span class="nv">$snapDescription</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Define the webhook URL</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$webhookUrl</span> <span class="p">=</span> <span class="s1">&#39;https://vcrocs.webhook.office.com/webhookb2/ac73a8c3-hack-me-e2fbd4572@015568c1-bbe7-4050-add6-6f36b7b44adb/IncomingWebhook/b41cd4d2fcb-hack-you-2/925be554-9960-4590-9251-65db25f05419&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Create the message card</span>
</span></span><span class="line"><span class="cl"><span class="nv">$messageCard</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@type&#34;</span>    <span class="p">=</span> <span class="s2">&#34;MessageCard&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;@context&#34;</span> <span class="p">=</span> <span class="s2">&#34;http://schema.org/extensions&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;summary&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Issue 176715375&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;sections&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;activityTitle&#34;</span>    <span class="p">=</span> <span class="s2">&#34;VM SNAP Shot:&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;facts&#34;</span>            <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;VM Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$vmName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Snap Name:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$snapName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">},</span>
</span></span><span class="line"><span class="cl">                <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;name&#34;</span>  <span class="p">=</span> <span class="s2">&#34;Snap Description:&#34;</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;value&#34;</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$snapDescription</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;markdown&#34;</span> <span class="p">=</span> <span class="vm">$true</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Send the message card</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$webhookUrl</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-ContentType</span> <span class="s1">&#39;application/json&#39;</span> <span class="n">-Body</span> <span class="nv">$messageCard</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Use this section to add the code to do whatever day 2 process you want to run</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Start the Code</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- end the Code</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span><span class="p">=</span><span class="vm">@</span><span class="p">{</span><span class="n">status</span> <span class="p">=</span> <span class="s1">&#39;done&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="screen-shot-17">Screen Shot 17:</h6>
<p>Microsoft Teams Message with Day 2 Automation Details. Awesome!</p>
<figure><a class="lightgallery" href="/aria-automation-messages-updates/aria-automation-messages-17.png" title="/aria-automation-messages-updates/aria-automation-messages-17.png" data-thumbnail="/aria-automation-messages-updates/aria-automation-messages-17.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook?tabs=newteams%2Cdotnet" target="_blank" rel="noopener noreffer ">Link to learn how to create a Microsoft Teams Webhook.</a></li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/" target="_blank" rel="noopener noreffer ">Link to my GitHub Repository for sample code like what is included in this Blog Post.</a></li>
</ul>
<hr>
<h6 id="aria-automation-version-used-for-blog-post">Aria Automation Version used for Blog Post:</h6>
<p>VMware Aria Automation 8.16.0 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code or process may need to be changed.</p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my blogs, I often emphasize that there are multiple methods to achieve the same objective. This article presents just one of the many ways you can tackle this task. I&rsquo;ve shared what I believe to be an effective approach for this particular use case, but keep in mind that every organization and environment varies. There&rsquo;s no definitive right or wrong way to accomplish the tasks discussed in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this blog article helpful and it assisted you, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>How to learn about VMware Products</title>
    <link>https://www.vcrocs.info/how-to-learn-about-vmware-products/</link>
    <pubDate>Sat, 09 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/how-to-learn-about-vmware-products/</guid>
    <description><![CDATA[<p><strong>How to learn about and use VMware Products in a Home Lab</strong></p>
<hr>
<p>I was inspired to create this Blog after VMware EOA (End of Availability) the free ESXi product. There were some articles saying that people just getting into IT Technology roles will now not be able to learn about VMware Products. This is <strong>NOT True</strong> and I wanted to share some examples of how people can still learn about Virtualization with VMware Products in a Home Lab environment.</p>
<hr>
<p>I have been in the IT Industry for many years and there is a quote that I use all the time for people that want to advance their IT skills. &ldquo;9 - 5 pay the bills but 5 - 10 advances your career&rdquo;.</p>
<p><strong>There are still many options to learn about VMware Products. Here are some items that can be used to advance your knowledge:</strong></p>
<ul>
<li>VMware Workstation | <a href="https://www.vmware.com/products/workstation-player.html" target="_blank" rel="noopener noreffer ">Link to Workstation Download site</a></li>
<li>VMware Fusion | <a href="https://www.vmware.com/products/fusion.html" target="_blank" rel="noopener noreffer ">Link to Fusion Download site</a></li>
<li>VMware ESXi  <a href="https://www.vmware.com/products/vsphere.html" target="_blank" rel="noopener noreffer ">Link to vSphere Download site</a></li>
<li>Vmware ESXi ARM Edition | <a href="https://communities.vmware.com/t5/ESXi-Arm-Fling-Documents/VMware-ESXi-Arm-Documentation/ta-p/2993062" target="_blank" rel="noopener noreffer ">Link to Documentation</a></li>
</ul>
<hr>
<p>You also don&rsquo;t need to have the newest, fastest, most advanced hardware if you just want to learn about the VMware Products.  The hardware I have to create this Blog Post is an older Apple MacBook Pro that is no longer supported and will not run the latest versions of MAC OS. I installed Ubuntu Desktop on this Apple Laptop and then installed VMware Workstation. This setup is OK for learning and testing. I have a Raspberry PI 4 with 8 GB memory to install ESXi ARM Edition.</p>
<hr>
<p><strong>Items to know when setting up a Home Lab environment:</strong></p>
<ul>
<li>VMware ESXi | Default Evaluation period is 60 days. This will enable you to have a full featured host to test anything you want to learn for 60 days.</li>
<li>VMware Workstation | Non-Commercial use is free to use</li>
<li>VMware Fusion | Non-Commercial use is free to use</li>
<li>Vmware ESXi ARM Edition | Default Evaluation period is 180 days</li>
</ul>
<hr>
<p><strong>To get access to additional VMware Software, Take a look at VMUG Advantage:</strong></p>
<ul>
<li><a href="https://www.vmug.com/membership/evalexperience/" target="_blank" rel="noopener noreffer ">Link to VMUG Advantage</a></li>
<li>You do have to purchase VMUG Advantage. If you attend a local VMUG event, you will often get coupons for a discount to purchase VMUG Advantage.</li>
<li>This is one of the best vCommunity Programs you can join and it will include licenses for many of the VMware solutions which are valid for a year.</li>
</ul>
<hr>
<h6 id="vmware-workstation">VMware Workstation</h6>
<p>Screen Shot of my MacBook Pro Resources. Doesn&rsquo;t need to be latest and greatest to learn.<br>
<figure><a class="lightgallery" href="/how-to-learn-about-vmware-products/learn-01.png" title="/how-to-learn-about-vmware-products/learn-01.png" data-thumbnail="/how-to-learn-about-vmware-products/learn-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<p>Screen Shot of VMware Workstation running a Ubuntu Server. Great way to learn.
<figure><a class="lightgallery" href="/how-to-learn-about-vmware-products/learn-02.png" title="/how-to-learn-about-vmware-products/learn-02.png" data-thumbnail="/how-to-learn-about-vmware-products/learn-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | VM console access with VMRC</title>
    <link>https://www.vcrocs.info/aria-operations-text-display-widget-vmrc/</link>
    <pubDate>Sun, 18 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-text-display-widget-vmrc/</guid>
    <description><![CDATA[<p><strong>How to use the VMware Aria Operations and a Text Display Widget to launch VMRC</strong></p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>I recently had the opportunity to work together on a Blog Post, <a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Launch VMRC from Aria Operations</a>, with <a href="https://www.brockpeterson.com/" target="_blank" rel="noopener noreffer ">Brock Peterson</a>.</p>
<hr>
<ul>
<li><a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Link to Blog Post</a></li>
</ul>
<hr>
<p>During my time as a VMware customer, I had the opportunity to connect with Brock through my account executive, <a href="https://www.linkedin.com/in/stevelieberson/" target="_blank" rel="noopener noreffer ">Steve Lieberson</a>. Whenever I sought an in-depth understanding of Aria Operations, Steve would arrange a session with Brock. These interactions left me aspiring for a similar position at VMware. My contributions to VMware included participating in customer reference calls, where I eagerly shared my expertise in the Aria Suite with Healthcare Organizations, aiding them in embarking on their journey in Automation, Monitoring, or Logging. Eventually, I secured a role at VMware, allowing me to collaborate daily with Brock and the incredible VMware Cloud Foundation Specialists team, focusing on Automation, Monitoring, and Logging. The camaraderie and collective expertise of this team is truly remarkable. Working within a team that boasts a variety of role models is an great experience.</p>
<p>The blog post begins with an intriguing scenario where Brock, responding to a customer&rsquo;s query about launching the VMRC client to display a VM&rsquo;s console within Aria Operations (a functionality not native to the product), highlighted the collaborative spirit of the team. Having previously created a similar dashboard as a customer, I offered to replicate it in my lab area for Brock, emphasizing the team&rsquo;s culture of sharing existing solutions and code. Brock liked what I created in my lab and suggested that we share this knowledge with the vCommunity by creating a Blog, recognizing the potential interest from other customers in implementing such a solution. This shows the team&rsquo;s commitment to collaboration and knowledge sharing.</p>
<p>Please explore the blog post to witness the exceptional outcomes a great team can achieve. Enjoy!</p>
<hr>
<figure><a class="lightgallery" href="/aria-operations-text-display-widget-vmrc/vmrc.gif" title="/aria-operations-text-display-widget-vmrc/vmrc.gif" data-thumbnail="/aria-operations-text-display-widget-vmrc/vmrc.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links below.</p>
<hr>
<h6 id="links-to-resources-for-this-blog-post">Links to resources for this Blog Post:</h6>
<ul>
<li><a href="https://www.brockpeterson.com/post/launch-vmrc-from-aria-operations" target="_blank" rel="noopener noreffer ">Brock Peterson Blog Post | Launch VMRC from Aria Operations</a>.</li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/vmrc" target="_blank" rel="noopener noreffer ">Source code used for this Blog Post.</a></li>
</ul>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Schedule RVTools Data Export</title>
    <link>https://www.vcrocs.info/schedule-rvtools/</link>
    <pubDate>Thu, 08 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/schedule-rvtools/</guid>
    <description><![CDATA[<p><strong>Export RVTools xlsx Files Everyday</strong></p>
<hr>
<hr>
<h6 id="powershell-code">PowerShell Code</h6>
<p>I like to create a Scheduled Task in vRealize Orchestrator to create RVTools files everyday.  Here is a sample PowerShell script that could be used. The script is also on a 7 day rotation of files and automatically deletes old files. On the 1st of every month a file will also be created for history that is not deleted.</p>
<p>Click arrow to expand the PowerShell Code:<br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Script to create RVTools files and delete files older than 7 Days.</span>
</span></span><span class="line"><span class="cl"><span class="c"># Also creates an Archive RVTools file on the first of every Month.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Set parameters for RVTools export ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vCenter</span>      <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$User</span>         <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Password</span>     <span class="p">=</span> <span class="s2">&#34;_RVToolsV2PWDe9yqxNV-HACKME-w5gkyxsCh5R1Kbg+hVYiKo=&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileLocation</span> <span class="p">=</span> <span class="s2">&#34;C:\RVTools&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileArchive</span>  <span class="p">=</span> <span class="s2">&#34;C:\RVTools\Archive&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fileName</span>     <span class="p">=</span>  <span class="p">(</span><span class="nb">Get-Date</span> <span class="n">-Format</span> <span class="s2">&#34;MM-dd-yyyy-hh-mm&#34;</span><span class="p">)</span> <span class="p">+</span> <span class="s1">&#39;-&#39;</span> <span class="p">+</span> <span class="nv">$vCenter</span> <span class="p">+</span> <span class="s1">&#39;.xlsx&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$filePath</span>     <span class="p">=</span> <span class="s2">&#34;C:\Program Files (x86)\Robware\RVTools\RVtools.exe&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Starting Process to create an RVTools xlsx file...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Creating xlsx file for vCenter &#39;</span> <span class="p">+</span> <span class="nv">$vCenter</span> <span class="p">+</span> <span class="s1">&#39;...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$Password</span><span class="s2"> -s </span><span class="nv">$vCenter</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$fileLocation</span><span class="s2"> -f </span><span class="nv">$fileName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$Process</span><span class="p">.</span><span class="py">ExitCode</span> <span class="o">-eq</span> <span class="mf">-1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Error: Export failed! RVTools returned exitcode -1, probably a connection error! Script is stopped&#34;</span> <span class="n">-ForegroundColor</span> <span class="n">Red</span>
</span></span><span class="line"><span class="cl">    <span class="n">exit</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [Create a RVTools file that will not be deleted for history on the 1st of every month ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$DayofMonth</span> <span class="p">=</span> <span class="nb">Get-Date</span> <span class="n">-Format</span> <span class="s2">&#34;dd&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$DayofMonth</span> <span class="o">-eq</span> <span class="s1">&#39;01&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s2">&#34;Day of the Month: &#34;</span> <span class="p">+</span> <span class="nv">$DayofMonth</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Starting Process to create an RVTools xlsx file for Archive that will not be deleted...&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$Password</span><span class="s2"> -s </span><span class="nv">$vCenter</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$fileArchive</span><span class="s2"> -f </span><span class="nv">$fileName</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Clean up old RVTools Files ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="s1">&#39;Removing all XLSX files older than 7 days...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Delete all RVTools Files in older than 7 day(s) ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Daysback</span> <span class="p">=</span> <span class="s2">&#34;-7&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$CurrentDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$DatetoDelete</span> <span class="p">=</span> <span class="nv">$CurrentDate</span><span class="p">.</span><span class="py">AddDays</span><span class="p">(</span><span class="nv">$Daysback</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Get-ChildItem</span> <span class="nv">$fileLocation</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">LastWriteTime</span> <span class="o">-lt</span> <span class="nv">$DatetoDelete</span> <span class="p">}</span> <span class="p">|</span> <span class="nb">Remove-Item</span> <span class="n">-Confirm:</span><span class="vm">$false</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm"># ----- [ Sample code to change a file last write date/time to test code for deleting files older than 7 days ] -----
</span></span></span><span class="line"><span class="cl"><span class="cm">$fileToChange = $fileLocation + &#39;\&#39; + $fileName
</span></span></span><span class="line"><span class="cl"><span class="cm">$fileToChange
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">(Get-Item $fileToChange).LastWriteTime = Get-Date &#34;02/01/2024 01:00&#34;
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<blockquote>
<p>Blog Updated: 02/08/2024<br>
Changes: Updated script to work with newest version of RVTools</p>
</blockquote>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | Use vCenter TAGS/Custom Groups/Super Metrics to get VM Details</title>
    <link>https://www.vcrocs.info/aria-operations-vcenter-tags-vm-info/</link>
    <pubDate>Fri, 26 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-vcenter-tags-vm-info/</guid>
    <description><![CDATA[<p><strong>How to group VMs together in VMware Aria Operations using vCenter TAGs and show resource usage totals across all VMs within the custom group</strong></p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>VMware Aria Operations 8.14.1 was used for this Blog Post. When new versions of VMware Aria Operations are released, the code or process may need to be changed.</p>
<hr>
<p>I was recently asked how to create a VMware Aria Operations Dashboard that groups VMs together by vCenter TAGs. IE: If there is 100 VMs in vCenter that have a TAG Named &ldquo;Servers-DB&rdquo;, they wanted to see the CPU, Memory, Disk Space, and Critical Alerts Totals for all VMs with that vCenter TAG. They have many vCenter TAGs and each TAG would be on a single line with only Total Values shown.</p>
<p>See the screenshot that shows the final Dashboard Design.</p>
<hr>
<h6 id="dashboard-design">Dashboard Design</h6>
<ul>
<li>The left side of the Dashboard shows all the Custom Groups that were created based on vCenter TAGs. The values shown on each row are the Metric Totals for all VMs that have the same vCenter TAG.</li>
<li>The left side is a View so that all the data can be exported as a CSV file.</li>
<li>The right side of the Dashboard is a view that shows the VM details. The right side is optional. I added the right side to show that the Super Metrics were calculating the metric totals correct.</li>
<li>Each metric shown requires a Super Metric to Sum the values within the Custom Group.</li>
<li>Each row shown requires a Custom Group to define which vCenter TAG to use.</li>
<li>Watch the videos below to see the details on how to create this Dashboard.</li>
</ul>
<hr>
<h6 id="screen-shot-of-dashboard">Screen Shot of Dashboard</h6>
<figure><a class="lightgallery" href="/aria-operations-vcenter-tags-vm-info/vm-info-vcenter-tags-02.png" title="/aria-operations-vcenter-tags-vm-info/vm-info-vcenter-tags-02.png" data-thumbnail="/aria-operations-vcenter-tags-vm-info/vm-info-vcenter-tags-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>To group VMs together in VMware Aria Operations based on vCenter TAGs, you use Custom Groups. Custom Groups have a group type. I created (2) new Group Types for this Dashboard. I named one Group Type &ldquo;Applications&rdquo; and one Group Type &ldquo;All-APPs&rdquo;. &ldquo;All-APPs&rdquo; is the Parent Group and &ldquo;Applications&rdquo; is the child group.</p>
<hr>
<p>Watch video to see how to define VMware Aria Operations Custom Group membership based on a vCenter TAG Name:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/gt099N3DpXU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>To show the Metric Totals of each Custom Group, we created Super Metrics to sum the value of all the VMs within the Custom Group. If you were only using one vCenter TAG and one Custom Group, you would not need to do this. We wanted to show the Metric Values of a 100+ vCenter TAGs and each vCenter TAG would be on a separate line. That is why we created the Super Metrics.</p>
<p>Watch video to see how to create VMware Aria Operations Super Metrics to total Virtual Machine Metrics:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/MpyVlj4whvc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>To show all the Custom Groups names and Super Metric values we created a View. Main reason to create the View was to be able to export the data as a CSV file.</p>
<p>Watch video to see how to create VMware Aria Operations View that shows the Custom Groups with VM metric totals:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/mqODM3-6LCA" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<h6 id="lessons-learned-and-acknowledgements">Lessons Learned and acknowledgements:</h6>
<ul>
<li>Thank You to <a href="https://www.BrockPeterson.com" target="_blank" rel="noopener noreffer ">Brock Peterson</a> on providing input on how to get metric value totals by using Super Metrics.</li>
<li>Thank You to my customer for the challenging question. I did not create a Dashboard like this before. I am glad we were able to create a Dashboard that answered your request and I am able to share the technique with the vCommunity.</li>
<li>You CAN group VMs in VMware Aria Operations together by using vCenter TAGs and total the Metric Values on a single line within a List View.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Automation | Custom Form with ChatGPT</title>
    <link>https://www.vcrocs.info/aria-automation-custom-form-with-chatgpt/</link>
    <pubDate>Mon, 08 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-automation-custom-form-with-chatgpt/</guid>
    <description><![CDATA[<p><strong>How to use add ChatGPT (AI) to a VMware Aria Automation Custom Form.</strong></p>
<hr>
<h6 id="vmware-aria-automation">VMware Aria Automation</h6>
<p>VMware Aria Automation 8.14.1 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code or process may need to be changed.</p>
<p>At VMware Explore 2023, the &ldquo;Well Spoken&rdquo; Hackathon Team delivered an insightful presentation, earning them a well-deserved 2nd place. In this blog post and video, we&rsquo;ll take a closer, &ldquo;Under the Hood&rdquo; look at how they created a Custom Form within VMware Aria Automation, featuring ChatGPT integration. You&rsquo;ll gain insight into the actions and code that brought this Custom Form to life, showcasing the effectiveness of Custom Forms in your Automation journey. ChatGPT&rsquo;s contribution in simplifying code creation for Automation is truly remarkable.</p>
<hr>
<p><strong>Here is a quote by Cody De Arkland that I often refer to.</strong></p>
<blockquote>
<p>&ldquo;Your thought process is the most powerful automation tool you‚Äôll ever have!&rdquo;</p>
</blockquote>
<p>This quote illustrates what the Hackathon Team did with Custom Forms, that are designed to streamline your Automation processes. With some creative thinking, you can easily integrate features like ChatGPT into your VMware Aria Automation Custom Form.</p>
<hr>
<p>Watch this video to see the complete process that is discussed in this Blog Post.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/c4QyFukilXk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/" target="_blank" rel="noopener noreffer ">Link to my GitHub Repository for sample code like what is included in this Blog Post.</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Automation Orchestrator | Active Directory OUs</title>
    <link>https://www.vcrocs.info/aria-automation-orchestrator-actions-ad-ou/</link>
    <pubDate>Sun, 07 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-automation-orchestrator-actions-ad-ou/</guid>
    <description><![CDATA[<p><strong>How to use VMware Aria Automation Orchestrator Actions to make sure AD (Active Directory) OU (Organizational Unit) structure is in place BEFORE creating new Servers.</strong></p>
<hr>
<h6 id="vmware-aria-automation">VMware Aria Automation</h6>
<p>VMware Aria Automation 8.14.1 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code or process may need to be changed.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links within the blog to access the code.</p>
<p>VMware Aria Automation Orchestrator Actions are a very powerful way to add checks into your server build process. This Blog Post shows you how to verify that the AD OU structure is in place before you do a new Server Build. Within the VMware Aria Automation Catalog, you can have custom forms to ask all the questions required to build a new server (see screen shot). One of the questions can be which AD OU you want to create the new Windows Server. The list of existing OUs in AD can be a dropdown with all the AD OU names provided by a Action. After you select the OU name to locate the new Windows Server Build, the next Action can verify that all the AD Sub OUs are in place. If the OUs are in place the action will only verify. If an AD OU is missing, the Action will create the AD OU before you press submit to create new Server.</p>
<hr>
<figure><a class="lightgallery" href="/aria-automation-orchestrator-actions-ad-ou/ad-ou-01.png" title="/aria-automation-orchestrator-actions-ad-ou/ad-ou-01.png" data-thumbnail="/aria-automation-orchestrator-actions-ad-ou/ad-ou-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Watch this video to see the complete process that is discussed in this Blog Post.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/3va13QMXlqE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>Here is Javascript code for the Action that returns all existing AD OUs to populate the dropdown on the custom form. Watch the Video to understand how the code works.</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="c1">// Orchestrator Action to list AD Sub OUs
</span></span></span><span class="line"><span class="cl"><span class="c1">// Created by the VMware by Broadcom Healthcare Aria Team
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Before you use this Action you MUST run the next 2 Workflows
</span></span></span><span class="line"><span class="cl"><span class="c1">// You MUST run the Workflow &#34;Add an Active Directory server&#34; to add Active Directory Server to Orchestrator
</span></span></span><span class="line"><span class="cl"><span class="c1">// You MUST also run the Workflow &#34;Configure Active Directory plug-in options&#34; and set the &#34;Default Active Directory server&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Set the Parent OU value (APP Name)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">var</span> <span class="nx">parentOU</span> <span class="o">=</span> <span class="s2">&#34;APPS&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">//Search for Parent OU Value
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">var</span> <span class="nx">parentOUPath</span> <span class="o">=</span> <span class="nx">ActiveDirectory</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;OrganizationalUnit&#39;</span><span class="p">,</span><span class="nx">parentOU</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Parent OU: &#34;</span> <span class="o">+</span> <span class="nx">parentOUPath</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Create Array of Sub OUs
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">for</span> <span class="nx">each</span> <span class="p">(</span><span class="nx">ou</span> <span class="k">in</span> <span class="nx">parentOUPath</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="kd">var</span> <span class="nx">childOUs</span> <span class="o">=</span> <span class="nx">ou</span><span class="p">.</span><span class="nx">organizationalUnits</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//System.log(&#34;Child OUs: &#34; + childOUs);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="c1">//System.log(&#34;Child OUs Length: &#34; + childOUs.length);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="nx">each</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">ouObject</span> <span class="k">in</span> <span class="nx">childOUs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nx">data</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ouObject</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c1">//System.log(&#34;Existing OU Name: &#34; + ouObject.name);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Existing Sub OUs: &#34;</span> <span class="o">+</span> <span class="nx">data</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="nx">data</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>Here is Javascript code for the Action that verifies that the AD OU structure is in place and creates the AD OUs if they do not exist. Watch the Video to understand how the code works.</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="c1">// Orchestrator Action to Verify AD OU Structure
</span></span></span><span class="line"><span class="cl"><span class="c1">// Created by the VMware by Broadcom Healthcare Aria Team
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Before you use this Action you MUST run the next 2 Workflows
</span></span></span><span class="line"><span class="cl"><span class="c1">// You MUST run the Workflow &#34;Add an Active Directory server&#34; to add Active Directory Server to Orchestrator
</span></span></span><span class="line"><span class="cl"><span class="c1">// You MUST also run the Workflow &#34;Configure Active Directory plug-in options&#34; and set the &#34;Default Active Directory server&#34;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// Function to create a sub OU
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">function</span> <span class="nx">performAction</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span> <span class="nx">substring</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Attempt to create the sub OU
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nx">item</span><span class="p">.</span><span class="nx">createOrganizationalUnit</span><span class="p">(</span><span class="nx">substring</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Sub OU &#39;&#34;</span> <span class="o">+</span> <span class="nx">substring</span> <span class="o">+</span> <span class="s2">&#34;&#39; created successfully.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">System</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&#34;Error creating Sub OU &#39;&#34;</span> <span class="o">+</span> <span class="nx">substring</span> <span class="o">+</span> <span class="s2">&#34;&#39;: &#34;</span> <span class="o">+</span> <span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Set the Parent OU value (APP Name). Create an Action input named parentOU and type is string.
</span></span></span><span class="line"><span class="cl"><span class="c1">//var parentOU = &#34;MGMT&#34;;
</span></span></span><span class="line"><span class="cl"><span class="c1">//var parentOU = &#34;Epic&#34;;
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">//Search for Parent OU Value+
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">var</span> <span class="nx">ous</span> <span class="o">=</span> <span class="nx">ActiveDirectory</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s1">&#39;OrganizationalUnit&#39;</span><span class="p">,</span><span class="nx">parentOU</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;ous: &#34;</span> <span class="o">+</span> <span class="nx">ous</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="c1">//System.log(&#34;ous: &#34; + ous.length);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nx">ous</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Create Array of Sub OUs
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">for</span> <span class="nx">each</span> <span class="p">(</span><span class="nx">ou</span> <span class="k">in</span> <span class="nx">ous</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">childOUs</span> <span class="o">=</span> <span class="nx">ou</span><span class="p">.</span><span class="nx">organizationalUnits</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">//System.log(&#34;Child OUs: &#34; + childOUs);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Build a string of Sub OU Values
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kd">var</span> <span class="nx">subOUs</span> <span class="o">=</span> <span class="s2">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="nx">each</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">ouObject</span> <span class="k">in</span> <span class="nx">childOUs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nx">subOUs</span> <span class="o">=</span> <span class="nx">subOUs</span> <span class="o">+</span> <span class="nx">ouObject</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s2">&#34;:&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Existing OU Name: &#34;</span> <span class="o">+</span> <span class="nx">ouObject</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Existing Sub OUs: &#34;</span> <span class="o">+</span> <span class="nx">subOUs</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Define the array of sub OU Names to look for
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="kd">var</span> <span class="nx">subOUNames</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Groups&#34;</span><span class="p">,</span> <span class="s2">&#34;Servers&#34;</span><span class="p">,</span> <span class="s2">&#34;Computers&#34;</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1">// Loop through each substring
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">subOUNames</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">substring</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Check if the string contains the substring
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="k">if</span> <span class="p">(</span><span class="nx">subOUs</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">substring</span><span class="p">)</span> <span class="o">!==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Sub OU &#39;&#34;</span> <span class="o">+</span> <span class="nx">substring</span> <span class="o">+</span> <span class="s2">&#34;&#39; Exists.&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;Sub OU &#39;&#34;</span> <span class="o">+</span> <span class="nx">substring</span> <span class="o">+</span> <span class="s2">&#34;&#39; DOES NOT Exist! Creating..&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Code to create the AD Sub OUs
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="c1">//System.log(&#34;substring: &#34; + substring)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">            <span class="kd">var</span> <span class="nx">ous</span> <span class="o">=</span> <span class="nx">ActiveDirectory</span><span class="p">.</span><span class="nx">searchExactMatch</span><span class="p">(</span><span class="s2">&#34;OrganizationalUnit&#34;</span><span class="p">,</span><span class="nx">parentOU</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="c1">//System.log(&#34;ous: &#34; + ous)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">            <span class="c1">// Iterate over the items using forEach
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>            <span class="nx">ous</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">item</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nx">performAction</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span> <span class="nx">substring</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="p">});</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;All Sub OUs exist!&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="s2">&#34;All Sub OUs exist!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">System</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;OU &#34;</span> <span class="o">+</span> <span class="nx">parentOU</span> <span class="o">+</span> <span class="s2">&#34; Not Found&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="s2">&#34;OU &#34;</span> <span class="o">+</span> <span class="nx">parentOU</span> <span class="o">+</span> <span class="s2">&#34; Not Found&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="links-to-resources-discussed-is-this-blog-post">Links to resources discussed is this Blog Post:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Automation/Actions" target="_blank" rel="noopener noreffer ">Source code used in this Blog Post in my GitHub Repository.</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>End of Year Review - 2023</title>
    <link>https://www.vcrocs.info/end-of-year-review-2023/</link>
    <pubDate>Mon, 01 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/end-of-year-review-2023/</guid>
    <description><![CDATA[<p><strong>End Of Year Review 2023</strong></p>
<hr>
<p>The year 2023 was a good chapter in my career, emphasizing the importance of community contribution. I hold a belief that my endeavors are worthwhile if they benefit even one person. This past year, I engaged in numerous presentations and blog posts, focusing on giving back to the vCommunity. My efforts in sharing knowledge and resources have, I believe, positively impacted others, making 2023 a year of success and meaningful community engagement.</p>
<hr>
<h6 id="highlights-of-2023">Highlights of 2023</h6>
<ul>
<li>Started a VMware Aria Suite Solution Architect Role. I get to work with some people that have been role models to me. The culture within this Team is the best that I have ever experienced.</li>
<li>vExpert 2023 | Member since 2020</li>
<li>vExpert 2023 | vExpert Cloud Management</li>
<li>VMware Explore 2023 Hackathon: I was the Hackathon Team Lead and we finished 2nd place.</li>
<li>VMware Explore 2023 session (Presentation): Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud) [CODE2501LV]</li>
<li>The VMware Community Podcast | I was a Guest on the show.</li>
<li>The PowerShell Podcast | I was a Guest on the show</li>
<li>Philly VMUG Presentation | VMware Aria Automation and Operations</li>
</ul>
<hr>
<h6 id="my-top-20-blog-posts-of-2023">My Top 20 Blog Posts of 2023</h6>
<table>
<thead>
<tr>
<th>Rank</th>
<th>Blog Topic</th>
<th>Views</th>
</tr>
</thead>
<tbody>
<tr>
<td>01</td>
<td>vCROCS - Home Page</td>
<td>3061</td>
</tr>
<tr>
<td>02</td>
<td>VMware Aria Automation and Ansible Integration</td>
<td>1227</td>
</tr>
<tr>
<td>03</td>
<td>Unlocking the Potential - VMware Aria Operations - Automation Central - Snapshot Age</td>
<td>713</td>
</tr>
<tr>
<td>04</td>
<td>VMware Aria Automation - Working with Windows Server Drives</td>
<td>660</td>
</tr>
<tr>
<td>05</td>
<td>Unlocking the Potential - VMware Aria Automation Config API</td>
<td>574</td>
</tr>
<tr>
<td>06</td>
<td>How vRealize Operations can help with Right Sizing VMs</td>
<td>509</td>
</tr>
<tr>
<td>07</td>
<td>VMware Aria Automation and SaltStack Config Resource</td>
<td>380</td>
</tr>
<tr>
<td>08</td>
<td>VMware Aria Operations - RVTools Dashboard</td>
<td>331</td>
</tr>
<tr>
<td>09</td>
<td>How to use PowerShell Modules with vRA 8.2</td>
<td>305</td>
</tr>
<tr>
<td>10</td>
<td>Unlocking the Potential - VMware Aria Operations - Metric Search</td>
<td>291</td>
</tr>
<tr>
<td>11</td>
<td>Unlocking the Potential - VMware Aria Operations - October 2023 PowerBlock</td>
<td>290</td>
</tr>
<tr>
<td>12</td>
<td>VMware Aria Operations - Servicenow - Management Pack</td>
<td>265</td>
</tr>
<tr>
<td>13</td>
<td>Schedule RVTools Data Export</td>
<td>250</td>
</tr>
<tr>
<td>14</td>
<td>Rest API calls in VMware Aria Automation with PowerShell</td>
<td>228</td>
</tr>
<tr>
<td>15</td>
<td>VMware Explore 2023 - Presentation</td>
<td>208</td>
</tr>
<tr>
<td>16</td>
<td>Unlocking the Potential - VMware Aria Automation - ABX Action Constants and Secrets</td>
<td>166</td>
</tr>
<tr>
<td>17</td>
<td>Unlocking the Potential - VMware Aria Automation - Custom Form Versioning</td>
<td>156</td>
</tr>
<tr>
<td>18</td>
<td>VMware Aria Operations for Logs (SaaS) - ESXi Host syslog setting</td>
<td>146</td>
</tr>
<tr>
<td>19</td>
<td>Unlocking the Potential - VMware Aria Operations - Automation Central - VM Snaps</td>
<td>131</td>
</tr>
<tr>
<td>20</td>
<td>VMware Explore 2023 - Hackathon</td>
<td>125</td>
</tr>
</tbody>
</table>
<p>The top 20 list reveals a significant interest in utilizing Automation and Operations. The fact that Ansible&rsquo;s integration with VMware Aria Automation ranked #1 was unexpected, evidenced by the frequent views of this particular blog post. This observation has inspired me to dedicate more of my blogging efforts to VMware Aria Automation Ansible integration in the upcoming year.</p>
<p>*Stats from Google Analytics.</p>
<hr>
<h6 id="set-goals-2024">Set-Goals 2024</h6>
<ul>
<li>Give back more to the vCommunity.</li>
<li>Be a good mentor.</li>
<li>Get a session approved for VMware Explore 2024.</li>
<li>Do more VMware Aria Presentations | PowerBlocks | Videos | etc&hellip;</li>
<li>Create more Blog Posts.</li>
<li>Never Stop Learning&hellip;</li>
</ul>
<hr>
<h6 id="thanks-for-visiting-in-2023">Thanks for visiting in 2023!</h6>
<hr>
<ul>
<li>If you found this Blog site useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware Aria Operations | Servicenow | Management Pack</title>
    <link>https://www.vcrocs.info/aria-operations-servicenow-mp-cmdb/</link>
    <pubDate>Fri, 22 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/aria-operations-servicenow-mp-cmdb/</guid>
    <description><![CDATA[<p><strong>How to use the VMware Aria Operations | Servicenow | Management Pack to add information to the Servicenow CMDB</strong></p>
<hr>
<h6 id="blog-update">Blog Update:</h6>
<p>I presented the content from this Blog at a <strong>TECH BYTES</strong> session on February 9th, 2024. 150 people registered for the webinar and there was a lot of interest with the ServiceNow Management Pack (MP). We received good feedback from the attendees on the capabilities of the MP.</p>
<hr>
<h6 id="vmware-aria-operations">VMware Aria Operations</h6>
<p>VMware Aria Operations 8.14.1 and Servicenow MP (Management Pack) 9.0 was used for this Blog Post. When new versions of VMware Aria Operations or the MP are released, the code or process may need to be changed.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links within the blog to access the code.</p>
<hr>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-01.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-01.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>I wanted to share how I setup the Servicenow Management Pack in my lab to update a Servicenow CMDB (Configuration Management DataBase). The VMware Documentation covers the process well. I wanted to cover a couple of steps to help make the process easier.</p>
<hr>
<p>I followed the instructions exactly as listed in the PDF link below.</p>
<p><a href="/aria-operations-servicenow-mp-cmdb/servicenow-cmdb-sync-only-configuration.pdf" rel="">Instructions to setup Servicenow to allow the MP to send data to CMDB | Click Here to View PDF</a></p>
<p>For the Servicenow user permissions I did the following:</p>
<ul>
<li>Created a Servicenow user named LPU (Least Privilege User)</li>
<li>Created a Servicenow Role and named it vROPS_MP</li>
<li>Added the user to the role.</li>
<li>Added the role to all the Servicenow ACLs listed in the document. If there were more than one ACL with the same name with read permissions, I used the newest ACL. I did not add to all ACLs with the same name.</li>
<li>I gave the role ‚Äúread‚Äù and ‚Äúedit_ci_relations‚Äù to the tables listed in the document.</li>
<li>I used the moid_populate_only.json config that is OOTB (Out of the Box) with no changes to start to make sure everything was working correct.</li>
</ul>
<p>When I added the account to the management pack in Aria Operations, it did a good job to let me know if everything was set up correctly in Servicenow and if the json config file was setup correct. I had a permission wrong and it showed me what was wrong when I did a Validate Connection. I fixed the permission like it showed me and then everything worked. My lab data is now showing up in Servicenow CMDB.</p>
<hr>
<p>Management Pack Config screen:
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-05.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-05.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<p>Management Pack Config screen (Validate Connection | Failed). Shows the field name is incorrect:
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-06.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-06.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<p>Management Pack Config screen (Validate Connection | Success):
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-07.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-07.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p>OOTB, the config files can be found here on the VMware Aria Operations Appliance:<br>
The config file will go here: /usr/lib/vmware-vcops/user/plugins/inbound/servicenow_adapter3/work<br>
The templates are located at: /usr/lib/vmware-vcops/user/plugins/inbound/servicenow_adapter3/conf/config_samples</p>
<hr>
<p>Here is the moid_populate_only.json with no changes.</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cmdbSync&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;syncMode&#34;</span><span class="p">:</span> <span class="s2">&#34;POPULATE_ONLY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;objectIdentifierSource&#34;</span><span class="p">:</span> <span class="s2">&#34;MOID&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>After I verified everything was working with OOTB settings, I wanted to add some additional data to the Servicenow CMDB. The VM (virtual machine) IP address is not sent to Servicenow CMDB with default settings. Here is the json file I have in my lab to  send VM IP and Host CPU info.</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cmdbSync&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;syncMode&#34;</span><span class="p">:</span> <span class="s2">&#34;POPULATE_ONLY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;objectIdentifierSource&#34;</span><span class="p">:</span> <span class="s2">&#34;MOID&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;additionalColumns&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;builtInHostSystem&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;cmdbColumn&#34;</span><span class="p">:</span> <span class="s2">&#34;cpu_name&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;vropsType&#34;</span><span class="p">:</span> <span class="s2">&#34;PROPERTY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;vropsField&#34;</span><span class="p">:</span> <span class="s2">&#34;cpu|cpuModel&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;builtInVirtualMachine&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;cmdbColumn&#34;</span><span class="p">:</span> <span class="s2">&#34;guest_os_fullname&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsType&#34;</span><span class="p">:</span> <span class="s2">&#34;PROPERTY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsField&#34;</span><span class="p">:</span> <span class="s2">&#34;summary|guest|fullName&#34;</span>
</span></span><span class="line"><span class="cl">          <span class="p">},</span>
</span></span><span class="line"><span class="cl">          <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;cmdbColumn&#34;</span><span class="p">:</span> <span class="s2">&#34;ip_address&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsType&#34;</span><span class="p">:</span> <span class="s2">&#34;PROPERTY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="nt">&#34;vropsField&#34;</span><span class="p">:</span> <span class="s2">&#34;summary|guest|ipAddress&#34;</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>In the VMware documentation it says to use the vropsField name in the json config file but I did not see where it told you how to get the vropsField name. Here are some examples on how to get the vROPS field names.</p>
<hr>
<p>vROPS VM Field Names available (PowerShell Script):</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$opsURL</span>      <span class="p">=</span> <span class="s2">&#34;https://vao-ent.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsUsername</span> <span class="p">=</span> <span class="s2">&#34;admin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsPassword</span> <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmName</span>      <span class="p">=</span> <span class="s2">&#34;LINUX-U-170&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$authSource</span>  <span class="p">=</span> <span class="s2">&#34;local&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Aria Operations token</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/auth/token/acquire?_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bodyHashtable</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">username</span> <span class="p">=</span> <span class="nv">$opsUsername</span>
</span></span><span class="line"><span class="cl">    <span class="n">authSource</span> <span class="p">=</span> <span class="nv">$authSource</span>
</span></span><span class="line"><span class="cl">    <span class="n">password</span> <span class="p">=</span> <span class="nv">$opsPassword</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Convert the hashtable to a JSON string</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$bodyHashtable</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$token</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Content-Type&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-Body</span> <span class="nv">$body</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$token.token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$authorization</span> <span class="p">=</span> <span class="s2">&#34;OpsToken &#34;</span> <span class="p">+</span> <span class="nv">$token</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl"><span class="c">#$authorization</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get the VM Operations identifier</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri = &#34;$opsURL/suite-api/api/resources?maintenanceScheduleId=&amp;name=$vmName&amp;page=0&amp;pageSize=1000&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources?name=</span><span class="nv">$vmName</span><span class="s2">&amp;page=0&amp;pageSize=1000&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$identifier</span>
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nv">$identifier</span><span class="p">.</span><span class="py">resourceList</span>
</span></span><span class="line"><span class="cl"><span class="nv">$json</span> <span class="p">=</span> <span class="nv">$identifier</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl"><span class="c">#$json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Convert the JSON string to a PowerShell object</span>
</span></span><span class="line"><span class="cl"><span class="nv">$data</span> <span class="p">=</span> <span class="nv">$json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Search for the object where resourceKindKey is &#34;VirtualMachine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$targetResourceKindKey</span> <span class="p">=</span> <span class="s2">&#34;VirtualMachine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$matchedObject</span> <span class="p">=</span> <span class="nv">$data</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">resourceKey</span><span class="p">.</span><span class="py">resourceKindKey</span> <span class="o">-eq</span> <span class="nv">$targetResourceKindKey</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># If a matching object is found, output the identifier</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$matchedObject</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmIdentifier</span> <span class="p">=</span> <span class="vm">$</span><span class="p">(</span><span class="nv">$matchedObject</span><span class="p">.</span><span class="n">identifier</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Write-Output $($matchedObject.identifier)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="s2">&#34;No VirtualMachine resourceKindKey found&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Field Names and Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources/properties?resourceId=</span><span class="nv">$vmidentifier</span><span class="s2">&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$resourcePropertiesList</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="nv">$resourcePropertiesList</span><span class="p">.</span><span class="py">resourcePropertiesList</span><span class="p">.</span><span class="py">property</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>vROPS Host Field Names available (PowerShell Script):</p>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$opsURL</span>      <span class="p">=</span> <span class="s2">&#34;https://vao-ent.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsUsername</span> <span class="p">=</span> <span class="s2">&#34;admin&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$opsPassword</span> <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostName</span>      <span class="p">=</span> <span class="s2">&#34;esxi8-04.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$authSource</span>  <span class="p">=</span> <span class="s2">&#34;local&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Aria Operations token</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/auth/token/acquire?_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$bodyHashtable</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">username</span> <span class="p">=</span> <span class="nv">$opsUsername</span>
</span></span><span class="line"><span class="cl">    <span class="n">authSource</span> <span class="p">=</span> <span class="nv">$authSource</span>
</span></span><span class="line"><span class="cl">    <span class="n">password</span> <span class="p">=</span> <span class="nv">$opsPassword</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Convert the hashtable to a JSON string</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="nv">$bodyHashtable</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$token</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Content-Type&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-Body</span> <span class="nv">$body</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$token.token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$authorization</span> <span class="p">=</span> <span class="s2">&#34;OpsToken &#34;</span> <span class="p">+</span> <span class="nv">$token</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl"><span class="c">#$authorization</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get the VM Operations identifier</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources?name=</span><span class="nv">$hostName</span><span class="s2">&amp;page=0&amp;pageSize=1000&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$identifier</span>
</span></span><span class="line"><span class="cl"><span class="nv">$identifier</span> <span class="p">=</span> <span class="nv">$identifier</span><span class="p">.</span><span class="py">resourceList</span>
</span></span><span class="line"><span class="cl"><span class="nv">$json</span> <span class="p">=</span> <span class="nv">$identifier</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span> <span class="n">-Depth</span> <span class="mf">10</span>
</span></span><span class="line"><span class="cl"><span class="c">#$json</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Convert the JSON string to a PowerShell object</span>
</span></span><span class="line"><span class="cl"><span class="nv">$data</span> <span class="p">=</span> <span class="nv">$json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="c">#$data</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Search for the object where resourceKindKey is &#34;VirtualMachine&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$targetResourceKindKey</span> <span class="p">=</span> <span class="s2">&#34;Hostsystem&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$matchedObject</span> <span class="p">=</span> <span class="nv">$data</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span> <span class="nv">$_</span><span class="p">.</span><span class="py">resourceKey</span><span class="p">.</span><span class="py">resourceKindKey</span> <span class="o">-eq</span> <span class="nv">$targetResourceKindKey</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># If a matching object is found, output the identifier</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="nv">$matchedObject</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$vmIdentifier</span> <span class="p">=</span> <span class="vm">$</span><span class="p">(</span><span class="nv">$matchedObject</span><span class="p">.</span><span class="n">identifier</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="c">#Write-Output $($matchedObject.identifier)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="s2">&#34;No VirtualMachine resourceKindKey found&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get Field Names and Values</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$opsURL</span><span class="s2">/suite-api/api/resources/properties?resourceId=</span><span class="nv">$vmidentifier</span><span class="s2">&amp;_no_links=true&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$uri</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$resourcePropertiesList</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Headers</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;accept&#34;</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Authorization&#34;</span> <span class="p">=</span> <span class="nv">$authorization</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$outPut</span> <span class="p">=</span> <span class="nv">$resourcePropertiesList</span><span class="p">.</span><span class="py">resourcePropertiesList</span><span class="p">.</span><span class="py">property</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$outPut</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>Here is the results of running the PowerShell scripts to get the vropsField names. The column &ldquo;name&rdquo; is what you need to use in the json config file.</p>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-02.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-02.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>If you don&rsquo;t want to use the PowerSHell Scripts to get the VMware Aria Operations field names, watch this YouTube video to see the steps I used to get the field names using the VMware Aria Operations APIs.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/bGcDJ12lc0s" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>The cmdbColumn name info that needs included in the json config file is in Servicenow. Watch this YouTube video to see the steps I used to get the Servicenow column names to use with the json config file.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/Br4EVSJCLxE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>Example of how Servicenow CMDB will look with IP Address sent from VMware Aria Operation Management Pack.</p>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-03.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-03.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Another Example of how Servicenow CMDB will look with IP Address sent from VMware Aria Operation Management Pack.</p>
<figure><a class="lightgallery" href="/aria-operations-servicenow-mp-cmdb/snow-mp-04.png" title="/aria-operations-servicenow-mp-cmdb/snow-mp-04.png" data-thumbnail="/aria-operations-servicenow-mp-cmdb/snow-mp-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-about-vmware-aria-operations--servicenow--management-pack">Links to resources about VMware Aria Operations | Servicenow | Management Pack:</h6>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Operations/Management-Packs/Servicenow" target="_blank" rel="noopener noreffer ">Source code used in this Blog Post.</a></li>
<li><a href="https://www.brockpeterson.com/post/updated-vrtvs-management-pack-for-servicenow" target="_blank" rel="noopener noreffer ">Brock Peterson Blog Post | Updated vRTVS Management Pack for ServiceNow</a>. This Blog Post does a great job discussing how to send VMware Aria Operations Alerts to Servicenow.</li>
<li><a href="https://docs.vmware.com/en/VMware-Aria-Operations-for-Integrations/9.0/Management-Pack-for-ServiceNow/GUID-271D9F75-15C7-4395-96B1-EF024A1485C0.html" target="_blank" rel="noopener noreffer ">VMware Aria Operations Servicenow Management Pack documentation.</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Productive APPs | 2023</title>
    <link>https://www.vcrocs.info/productive-apps-2023/</link>
    <pubDate>Sat, 02 Dec 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/productive-apps-2023/</guid>
    <description><![CDATA[<p><strong>APPs that I use everyday to be Productive | 2023</strong></p>
<hr>
<p>In 2022, I shared a list of apps that were part of my daily routine. This year, I want to reveal the new apps I&rsquo;ve incorporated into my workflow and discuss which ones I&rsquo;ve moved on from.</p>
<p>I&rsquo;m always on the lookout for new apps, so if you have any favorites that I haven&rsquo;t mentioned, please feel free to share them with me. Additionally, if you&rsquo;re curious about how I integrate these apps into my daily routine, reach out to me. I&rsquo;d be happy to demonstrate their use in a personalized demo.</p>
<p>My current app selection has been influenced significantly by the VMware/Broadcom merger.</p>
<hr>
<h5 id="recent-apps">Recent APPs:</h5>
<p><strong>Recently, I&rsquo;ve begun using these apps to boost my productivity:</strong></p>
<table>
<thead>
<tr>
<th>APP</th>
<th>Usage</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.google.com" target="_blank" rel="noopener noreffer ">Google Suite of APPs</a><br> - Gmail <br> - Google Calendar <br> - Chat <br> - Spaces <br> - Tasks <br> - Keep <br> - Docs-Sheets-Slides</td>
<td>I use Everyday.</td>
</tr>
<tr>
<td><a href="https://www.notion.so/" target="_blank" rel="noopener noreffer ">Notion</a></td>
<td>I use the Web Clipping Feature the most to strip out all adverting, etc&hellip; from web pages, when I want to just save the text.</td>
</tr>
<tr>
<td><a href="https://openai.com/" target="_blank" rel="noopener noreffer ">ChatGPT</a></td>
<td>Daily, I engage in practices that enhance my writing skills and develop code for automation purposes.</td>
</tr>
</tbody>
</table>
<hr>
<h5 id="proven-apps">Proven APPs:</h5>
<p><strong>Here&rsquo;s a list of apps that have become staples in my daily work and blogging routines. These tools have consistently proven their value in my workflows.:</strong></p>
<table>
<thead>
<tr>
<th>APP</th>
<th>Usage</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://ticktick.com" target="_blank" rel="noopener noreffer ">TickTick - To-Do and Notes App in one.</a></td>
<td>I use everyday. Where I save all my To-Do&rsquo;s and Notes. I like the Note filtering a lot!</td>
</tr>
<tr>
<td><a href="https://cleanshot.com/" target="_blank" rel="noopener noreffer ">CleanShot X - Screen Shot and Screen recording App</a></td>
<td>I use everyday. The scrolling screen capture is awesome!</td>
</tr>
<tr>
<td><a href="https://folivora.ai/bettersnaptool" target="_blank" rel="noopener noreffer ">BetterSnapTool - easily manage your window positions</a></td>
<td>I use everyday. I couldn&rsquo;t use a MAC without having the shortcut keys for Window Management</td>
</tr>
<tr>
<td><a href="https://zoom.us/" target="_blank" rel="noopener noreffer ">Zoom - Online Meetings, Chat, etc&hellip;</a></td>
<td>I use everyday for calls with customers. I feel it is the easiest to use for online meetings.</td>
</tr>
<tr>
<td><a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreffer ">Visual Studio Code - Creating Code</a></td>
<td>I use often. Used to create my Blog post and any Automation scripts I create.</td>
</tr>
<tr>
<td><a href="https://docs.github.com/en/get-started/using-github/github-desktop" target="_blank" rel="noopener noreffer ">Github Desktop</a></td>
<td>I use often. I used for all GitHub Repository Updates.</td>
</tr>
<tr>
<td><a href="https://affinity.serif.com/en-us/photo/" target="_blank" rel="noopener noreffer ">Affinity Photo - Photo editing</a></td>
<td>Used for all image editing that I do.</td>
</tr>
<tr>
<td><a href="https://www.vmware.com/products/fusion.html" target="_blank" rel="noopener noreffer ">VMware Fusion</a></td>
<td>Used for creating VMs on my Macbook Pro.</td>
</tr>
<tr>
<td><a href="https://termius.com/" target="_blank" rel="noopener noreffer ">Termius - SSH Client</a></td>
<td>I use for all SSH in my Lab area.</td>
</tr>
<tr>
<td><a href="https://binarynights.com/" target="_blank" rel="noopener noreffer ">Forklift - SFTP Client</a></td>
<td>I use for file management and syncing folders.</td>
</tr>
<tr>
<td><a href="https://gohugo.io/" target="_blank" rel="noopener noreffer ">Hugo - The world‚Äôs fastest framework for building websites</a></td>
<td>Used to create this Blog Site!</td>
</tr>
<tr>
<td><a href="https://www.backblaze.com/" target="_blank" rel="noopener noreffer ">Backblaze - Online Backup to keep all my important files offsite.</a></td>
<td>Used for all personal Backups.</td>
</tr>
<tr>
<td><a href="https://www.dashlane.com/" target="_blank" rel="noopener noreffer ">Dashlane - Password Manager</a></td>
<td>Used for all personal PW management</td>
</tr>
<tr>
<td><a href="https://raindrop.io" target="_blank" rel="noopener noreffer ">Raindrop.io - All-in-one bookmark manager</a></td>
<td>Used to keep all my bookmarks in one location.</td>
</tr>
</tbody>
</table>
<hr>
<h5 id="browser-ranking-in-order-of-usage">Browser Ranking in order of usage:</h5>
<ol>
<li><a href="https://www.microsoft.com/en-us/edge" target="_blank" rel="noopener noreffer ">Microsoft Edge</a></li>
<li><a href="https://www.mozilla.org" target="_blank" rel="noopener noreffer ">Mozilla Firefox</a></li>
<li><a href="https://www.google.com/chrome" target="_blank" rel="noopener noreffer ">Google Chrome</a></li>
<li><a href="https://www.apple.com/safari/" target="_blank" rel="noopener noreffer ">Apple Safari</a></li>
</ol>
<hr>
<h5 id="apps-no-longer-used-everyday">APPs no longer used everyday:</h5>
<table>
<thead>
<tr>
<th>APP</th>
<th>Usage</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://slack.com/" target="_blank" rel="noopener noreffer ">Slack</a></td>
<td>Replaced by Google Chat and Spaces by employer</td>
</tr>
<tr>
<td><a href="https://www.mmhmm.app" target="_blank" rel="noopener noreffer ">mmhmm - Makes on-screen meetings and presentations a little more fun.</a></td>
<td>I still think this is a Cool App. I just don&rsquo;t use it much.</td>
</tr>
<tr>
<td><a href="https://www.microsoft.com" target="_blank" rel="noopener noreffer ">Microsoft Office - Word, Excel, Outlook, Powerpoint, OneNote</a></td>
<td>Replaced by Google APPs by employer</td>
</tr>
<tr>
<td><a href="https://www.microsoft.com" target="_blank" rel="noopener noreffer ">Microsoft Teams - Online Meetings, Chat, etc&hellip;</a></td>
<td>Employer removed from list of available APPs. I always liked Zoom better anyway.</td>
</tr>
</tbody>
</table>
<hr>
<ul>
<li>If you found this article helpful and would like to show your appreciation, consider buying me a coffee to kickstart my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Automation | ABX Action Constants and Secrets</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/</link>
    <pubDate>Tue, 14 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/</guid>
    <description><![CDATA[<p><strong>Using VMware Aria Automation Action Constants and Secrets</strong></p>
<hr>
<h6 id="vmware-aria-automation">VMware Aria Automation</h6>
<p>VMware Aria Automation 8.14 was used for this Blog Post. When new versions of VMware Aria Automation are released, the code may need to be changed.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Click on the links within the blog to access the code.</p>
<hr>
<p>I wanted to share how I use <strong>Action Constants</strong> and <strong>Secrets</strong> within VMware Aria Automation. <strong>Action Constants</strong> are a great to have a variable that can be used with many Actions where the value may change. Instead of having to edit 10s or 100s of Actions, you change One Action Constant and all the Actions are updated instantly. Main reason to use <strong>Secrets</strong> is to keep the values of Passwords out of the code! Plus, like Action Constants, if a Password would change, all you need to do is change one Secret and all your Actions and Templates are automatically Updated. Secrets can also be used in the yaml code of Templates.</p>
<hr>
<h6 id="action-constants">Action Constants</h6>
<p><strong>Action Constants Use Cases:</strong></p>
<ul>
<li>vCenter Username</li>
<li>vCenter FQDN</li>
<li>VMware Aria Automation Config Username</li>
<li>VMware Aria Automation Config FQDN</li>
<li>salt master FQDN</li>
<li>Any value used in Actions that may change from time to time</li>
</ul>
<p><strong>To access Action Constants: Assembler/Extensibility/Actions/Actions Constants</strong></p>
<ul>
<li>You will see the Action Constants Names and Values.</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-02.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-02.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>How to use Action Constants and Secrets with an Action:</strong></p>
<ul>
<li>Add the Action Constants and Secrets used within the Action in the Default inputs section.</li>
<li>To use a Action Constant value within the Action PowerShell code use $inputs.&ldquo;Action Constant&rdquo;</li>
<li>To use a Secret value within the Action PowerShell code use $context.getSecret($inputs.&ldquo;Secret Name&rdquo;)</li>
<li>In the example code, review how I am connecting to the vCenter. No hard coded Username, Password or vCenter FQDN. If any of these values would change, I would never need to edit the Action, only the Action Constants and Secret.</li>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Automation/Action-Constants-and-Secrets" target="_blank" rel="noopener noreffer ">Link to code | GitHub Repository</a></li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-01.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="secrets">Secrets</h6>
<p><strong>Secrets Use Cases:</strong></p>
<ul>
<li>Passwords</li>
<li>Any value you don&rsquo;t want displayed in plain text within your code</li>
</ul>
<p><strong>To access Secrets: Assembler/Infrastructure/Secrets/Secrets</strong></p>
<ul>
<li>You will see the Secret Names and Description only.</li>
<li>You can never see the Secret value after you create it. If you think the value is not correct you need to re-enter the value.</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-03.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-03.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>How to use Secrets with an Template:</strong></p>
<ul>
<li>Add code to the template yaml that is like this: password: &lsquo;${secret.UbuntuPassword}&rsquo;</li>
<li>See Screen Shot</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-04.png" title="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-04.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-abx-secrets-action-constants/ActionConstants-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="links-to-resources-about-actions-constants-and-secrets">Links to resources about Actions Constants and Secrets:</h6>
<ul>
<li><a href="https://docs.vmware.com/en/VMware-Aria-Automation/SaaS/Using-Automation-Assembler/GUID-895A8127-CC67-4A53-B633-879F373E7606.html" target="_blank" rel="noopener noreffer ">Secret Automation Assembler properties</a></li>
<li><a href="https://docs.vmware.com/en/VMware-Aria-Automation/SaaS/Using-Automation-Assembler/GUID-7E6145AB-74EC-492F-9FA9-8D07739519D4.html" target="_blank" rel="noopener noreffer ">How can I create extensibility action constants</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Automation Config API</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-config-api/</link>
    <pubDate>Sun, 12 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-config-api/</guid>
    <description><![CDATA[<p><strong>Using PowerShell with the VMware Aria Automation Config API</strong></p>
<hr>
<h6 id="vmware-aria-automation-config-api">VMware Aria Automation Config API:</h6>
<p>VMware Aria Automation 8.14 was used for this Blog Post. When new versions of VMware Aria Automation Config are released, the code may need to be changed.</p>
<p>There is a lot of Automation that I like to complete where I use the VMware Aria Automation Config API. The code that I am sharing is a PowerShell Script but the code could also be included in a VMware Aria Automation ABX Action, VMware Aria Automation Orchestrator Action or VMware Aria Automation Orchestrator Workflow.</p>
<p>All of my customers are 80% - 90% Microsoft Windows Servers. That is why you will see a lot of PowerShell code as examples in my Blog Posts. I like to share what my customers will use in their environments.</p>
<p>All the source code for this Blog is saved in my GitHub Repository. Please click on the link to see the code.</p>
<hr>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential/tree/main/VMware-Aria-Automation-Config/Aria-Automation-Config-API" target="_blank" rel="noopener noreffer ">Link | vCROCS | GitHub Repository</a></li>
</ul>
<hr>
<ul>
<li>Added these PowerShell Scripts to use with the VMware Aria Automation Config APIs</li>
<li>These PowerShell Scripts are a good starting point to help you use the VMware Aria Automation Config APIs</li>
<li>You can modify the scripts to work with any of the salt functions.</li>
<li>The sample scripts show how to:<br>
[x] test.ping<br>
[x] grains.append<br>
[x] grains.remove<br>
[x] state.apply<br>
[x] key.delete</li>
<li>The scripts will show you how to authenticate with VMware Aria Automation Config to use the APIs.</li>
<li>The scripts will show you how to create the API Body to use with VMware Aria Automation Config.</li>
<li>The scripts will show you how to use the Job ID (JID) to get the status of the job so you know when the job is complete and if it was successful.</li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<hr>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Operations | October 2023 PowerBlock</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-powerblock-2023-10/</link>
    <pubDate>Wed, 25 Oct 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-powerblock-2023-10/</guid>
    <description><![CDATA[<p><strong>Unlocking the Power of VMware Aria Operations: A Comprehensive Guide</strong></p>
<hr>
<h6 id="a-comprehensive-guide">A Comprehensive Guide:</h6>
<p><a href="https://www.linkedin.com/in/christopherkusek/" target="_blank" rel="noopener noreffer ">Christopher Kusek</a> and I teamed up to create this PowerBlock video, aimed at showcasing some of the new VMware Aria Operations features that have been in high demand among customers. In this video, we&rsquo;ll be sharing valuable VMware Aria Operations Tips and Tricks.</p>
<p>Our PowerBlock Agenda was inspired by conversations with VMware customers. When they expressed their surprise by saying, &lsquo;We didn&rsquo;t know you could do that,&rsquo; we recognized the need to create this PowerBlock to share our insights with the vCommunity.</p>
<p>We invite you to take a moment to watch the video, as we&rsquo;re confident you&rsquo;ll discover some insightful new tips and tricks to enhance your VMware Aria experience.</p>
<hr>
<h6 id="video-content">Video Content:</h6>
<ul>
<li>Learn how to set a home Dashboard and give some examples</li>
<li>Learn about text display Widget use cases like VMware Cloud Services Status, Zoom Status, Weather</li>
<li>Learn how Automation Central can cleanup Snaps and skip VMs if a specific vCenter TAG is added to VM, reboot VMs, Power on/off Cloud Native VMs</li>
<li>Learn how to change ‚ÄúSnapshot Age older than‚Äù value in Automation Central</li>
<li>Learn how a single Dashboard can monitor vCenter and Cloud Native VMs</li>
<li>Learn about View Usage</li>
</ul>
<hr>
<h6 id="youtube-video">YouTube Video:</h6>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/2I9NsNpgy9E" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<h6 id="thank-you">Thank You:</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i> <i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>I want to extend my gratitude to Christopher Kusek for inviting me to collaborate on this video, which we are excited to share on his YouTube channel.</li>
<li>Christopher has been a mentor to me from the moment I stepped into VMware. In my very first week at the company, even before we became colleagues on the same team, Christopher reached out to me and initiated a Zoom session. He expressed his genuine commitment to ensuring my success at VMware and offered valuable insights and guidance. Now that we&rsquo;re both part of the same team, Christopher&rsquo;s support continues to be an asset in my daily journey. Throughout one&rsquo;s career, there are individuals who leave a lasting impact, and Christopher Kusek has played that role in mine. I will forever appreciate his guidance and cherish the friendship we&rsquo;ve built.</li>
<li>In this video, I&rsquo;d like to acknowledge that some of the knowledge I&rsquo;m sharing today was by fellow members of my team. We have a Slack channel where mutual support is a way of life. The culture within my team is nothing short of remarkable; it&rsquo;s the most collaborative environment I&rsquo;ve ever been a part of. Here, everyone is genuinely invested in each other&rsquo;s success, always ready to extend a helping hand.</li>
<li>I want to express my gratitude to Ron Singler and Aaron Dunbrow for recognizing my passion for the VMware Aria Suite of Products and extending me the opportunity to join the exceptional team at VMware. Being a part of this team as a Senior Cloud Solutions Architect has been an incredibly rewarding journey.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Operations | Automation Central | Snapshot Age</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-snapshot-age/</link>
    <pubDate>Mon, 16 Oct 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-snapshot-age/</guid>
    <description><![CDATA[<p><strong>How to change ‚ÄúSnapshot Age older than‚Äù value in VMware Aria Operations | Automation Central.</strong></p>
<hr>
<h6 id="vmware-aria-operations--automation-central">VMware Aria Operations | Automation Central:</h6>
<p>The question <strong>&ldquo;How to change ‚ÄúSnapshot Age older than‚Äù value in VMware Aria Operations | Automation Central&rdquo;</strong> has been asked several times recently, so I created a video to show you how to change the value.</p>
<p>Watch the video on my YouTube Channel to see the steps to change the ‚ÄúSnapshot Age older than‚Äù value for Automation Central.</p>
<hr>
<h6 id="youtube-video">YouTube Video:</h6>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/NzFFQgDlrfo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>Out of the Box the ‚ÄúSnapshot Age older than‚Äù is set to 7 days within VMware Aria Operations.</li>
<li>You can change the ‚ÄúSnapshot Age older than‚Äù value within Optimize|Reclaim|Settings.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations for Logs (SaaS) | ESXi Host syslog setting</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/</link>
    <pubDate>Sat, 07 Oct 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/</guid>
    <description><![CDATA[<p><strong>How to Automate the ESXi Host &ldquo;Syslog.global.logHost&rdquo; setting, when using Cloud Proxies.</strong></p>
<hr>
<p>This blog post is part of a series of blog posts that will be created to help you &ldquo;Unlock the Potential&rdquo; of the VMware Aria Products. I want to give you some &ldquo;Real World&rdquo; examples that VMware admins could use everyday to help them with their daily tasks. Hopefully you will learn from my Tips and Tricks.</p>
<hr>
<h6 id="vmware-aria-operations-for-logs--saas-version">VMware Aria Operations for Logs | SaaS Version:</h6>
<p>The Details in this Blog Post were created in October 2023. New VMware Aria Operations for Logs updates are released every month, so the details shown in this Blog Post could change.</p>
<p>When you use VMware Aria Operations for Logs | SaaS Version, you need to have one or more Cloud Proxies to send the log info from your on-prem vCenter and ESXi Hosts to VMware Cloud Services.  If you have more than (1) Cloud Proxy, there is no automated way built into VMware Aria Operations for Logs to distribute the Cloud Proxy usage. One way to set the vCenter ESXi hosts to use a specific Cloud Proxy, is to use a PowerCLI script. I included some sample scripts in this blog post to help you get started.</p>
<p><strong>Logic of the PowerCLI script:</strong></p>
<ul>
<li>The script will count the number of VMware Cloud Services, Cloud Proxies Specified</li>
<li>The script will count the number of VMware vCenter ESXi Hosts in the vCenter Specified</li>
<li>The script will equally distribute the number of vCenter ESXi Hosts per Cloud Proxy</li>
<li>The script will set the Advanced System Setting &ldquo;Syslog.global.logHost&rdquo; on each ESXi Host</li>
</ul>
<hr>
<p><strong>ESXi Host Advanced System Settings:</strong></p>
<ul>
<li>This is how to manually set the &ldquo;Syslog.global.logHost&rdquo; on each ESXi Host</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-01.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Cloud Proxies:</strong></p>
<ul>
<li>Go to Configuration/Cloud Proxies to see all the Proxies added</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-04.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-04.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Cloud Proxy Information:</strong></p>
<ul>
<li>Cloud Proxy Details like State, CPU, Memory</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-03.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-03.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>vSphere Integration:</strong></p>
<ul>
<li>Go to Configuration/vSphere Integration to see all the vCenters added</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-05.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-05.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>vCenter Server Configuration:</strong></p>
<ul>
<li>vCenter Server Configuration</li>
<li>You can use this screen to set which Cloud Proxy to use but if you have 100s or 1000s of Hosts, I find it easier to use the script included in this Blog Post.</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-06.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-06.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="powershell-code">PowerShell Code:</h6>
<h6 id="set-sysloggloballoghost-value-on-all-hosts">Set ‚ÄúSyslog.global.logHost‚Äù value on all Hosts</h6>
<ul>
<li>Sample Script to set the &ldquo;Syslog.global.logHost&rdquo; value on each ESXi Host</li>
<li>The script will balance the usage of the Cloud Proxies</li>
<li>The script could be scheduled to run every day to maintain the correct settings.</li>
</ul>
<p><strong>Click arrow to expand the code:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Set Variable Values to use with Script</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcServer</span>     <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcUser</span>       <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcPassword</span>   <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (1) syslog setting for each host.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (2) syslog settings for each host.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip.corp.local:514,tcp://DBH-CP-VAOL-01.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (2) syslog settings divided equally between hosts.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip.corp.local:514;udp://vaol-01.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (3) syslog settings divided equally between hosts.</span>
</span></span><span class="line"><span class="cl"><span class="nv">$syslogServers</span> <span class="p">=</span> <span class="s2">&#34;udp://vaol-vip-03.corp.local:514;udp://vaol-vip-02.corp.local:514;udp://vaol-vip-01.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- This example uses (4) syslog settings divided equally between hosts.</span>
</span></span><span class="line"><span class="cl"><span class="c">#$syslogServers = &#34;udp://vaol-vip-01.corp.local:514;udp://vaol-vip-02.corp.local:514;udp://vaol-vip-03.corp.local:514;udp://vaol-vip-04.corp.local:514&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get list of syslog server specifed and seperated by semicolons. Semicolons were used in case you would want to specify (2) syslog servers seperated by commas.</span>
</span></span><span class="line"><span class="cl"><span class="nv">$syslogServerList</span> <span class="p">=</span> <span class="nv">$syslogServers</span><span class="p">.</span><span class="py">Split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$syslogServerList</span> <span class="p">=</span> <span class="nv">$syslogServerList</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;syslog Server List: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$syslogServerCount</span> <span class="p">=</span> <span class="nv">$syslogServerList</span><span class="p">.</span><span class="py">Count</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;syslog Server Count: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerCount</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Connect to the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-User</span> <span class="nv">$vcUser</span> <span class="n">-Password</span> <span class="nv">$vcPassword</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$syslogServerCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Get Number of Hosts</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$hostList</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$hostCount</span> <span class="p">=</span> <span class="nv">$hostList</span><span class="p">.</span><span class="py">Count</span>
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Total Number of Hosts</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Host Count: &#34;</span> <span class="p">+</span> <span class="nv">$hostCount</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Calculate how to divide the hosts</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$baseValue</span> <span class="p">=</span> <span class="p">[</span><span class="no">math</span><span class="p">]::</span><span class="n">Floor</span><span class="p">(</span><span class="nv">$hostCount</span> <span class="p">/</span> <span class="nv">$syslogServerCount</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$remainder</span> <span class="p">=</span> <span class="nv">$hostCount</span> <span class="p">%</span> <span class="nv">$syslogServerCount</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Create an array to hold the results</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$syslogProxyNumber</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span><span class="mf">1</span><span class="p">..</span><span class="nv">$syslogServerCount</span> <span class="p">|</span> <span class="nb">ForEach-Object</span> <span class="p">{</span> <span class="nv">$baseValue</span> <span class="p">})</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$syslogProxyNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Distribute the remainder among the numbers</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="p">(</span><span class="nv">$i</span> <span class="p">=</span> <span class="mf">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">-lt</span> <span class="nv">$syslogServerCount</span><span class="p">;</span> <span class="nv">$i</span><span class="p">++)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nv">$remainder</span> <span class="o">-eq</span> <span class="mf">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$syslogProxyNumber</span><span class="p">[</span><span class="nv">$i</span><span class="p">]++</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$remainder</span><span class="p">--</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Hosts Per Syslog Group: &#34;</span> <span class="p">+</span> <span class="nv">$syslogProxyNumber</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Highest sysloggroup array value: &#34;</span> <span class="p">+</span> <span class="p">(</span><span class="nv">$syslogProxyNumber</span><span class="p">.</span><span class="py">Count</span> <span class="p">-</span> <span class="mf">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Syslog Group Count: &#34;</span> <span class="p">+</span> <span class="nv">$syslogProxyNumber</span><span class="p">.</span><span class="py">Count</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Calculate the sum</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$sum</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$syslogProxyNumber</span> <span class="p">|</span> <span class="nb">Measure-Object</span> <span class="n">-Sum</span><span class="p">).</span><span class="py">Sum</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Total Hosts to add syslog info: &#34;</span> <span class="p">+</span> <span class="nv">$sum</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$sum</span> <span class="o">-eq</span> <span class="nv">$hostCount</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="s2">&#34;Hosts were divided as equal as posible&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="s2">&#34;Hosts were NOT divided equal. TRY AGAIN!&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="s2">&#34;Only 1 syslog Server was specififed!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$syslogProxyNumberArrayValue</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl"><span class="nv">$servercountstart</span> <span class="p">=</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">$serverCountTotal</span> <span class="p">=</span> <span class="nv">$syslogProxyNumber</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Loop thru ESXi Hosts</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$esxiName</span> <span class="k">in</span> <span class="nv">$hostList</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Create Server Count Number</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$servercountstartstr</span> <span class="p">=</span> <span class="s1">&#39;0000&#39;</span> <span class="p">+</span> <span class="nv">$servercountstart</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$servercountstartstr</span> <span class="p">=</span> <span class="nv">$servercountstartstr</span><span class="p">[</span><span class="mf">-4</span><span class="p">..</span><span class="mf">-1</span><span class="p">]</span> <span class="n">-join</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Set the syslog Host value on Each ESXi Host</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$syslogServerCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Count: &#34;</span> <span class="p">+</span> <span class="nv">$servercountstartstr</span> <span class="p">+</span> <span class="s2">&#34; | ESXi Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$esxiName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | Proxy Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c"># ----- Set the Syslog.global.logHost value</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;------------- Get-VMHost &#34;</span> <span class="p">+</span> <span class="nv">$esxiName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | Get-AdvancedSetting -Name &#39;Syslog.Global.Loghost&#39; | Set-AdvancedSetting -Value &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span> <span class="p">+</span> <span class="s2">&#34; -Confirm:</span><span class="nv">$false</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">        <span class="c"># ----- The next line will make the changes. Remove the line comment after you test the script and make sure you are getting the results you want to use.</span>
</span></span><span class="line"><span class="cl">        <span class="c">#Get-VMHost $esxiName.Name | Get-AdvancedSetting -Name &#39;Syslog.Global.Loghost&#39; | Set-AdvancedSetting -Value $syslogServerList[$syslogProxyNumberArrayValue] -Confirm:$false</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">    <span class="k">elseif</span><span class="p">(</span><span class="nv">$syslogServerCount</span> <span class="o">-eq</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Count: &#34;</span> <span class="p">+</span> <span class="nv">$servercountstartstr</span> <span class="p">+</span> <span class="s2">&#34; | ESXi Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$esxiName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | Proxy Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogServerList</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">        <span class="c"># ----- The next line will make the changes. Remove the line comment after you test the script and make sure you are getting the results you want to use.</span>
</span></span><span class="line"><span class="cl">        <span class="c">#Get-VMHost $esxiName.Name | Get-AdvancedSetting -Name &#39;Syslog.Global.Loghost&#39; | Set-AdvancedSetting -Value $syslogServerList -Confirm:$false</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Elseif</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Increment Host Count and switch which Proxy to use based on count</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$servercountstart</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$servercountstart</span> <span class="o">-gt</span> <span class="nv">$serverCountTotal</span> <span class="o">-and</span> <span class="nv">$syslogServerCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$servercountstart</span> <span class="p">=</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$syslogProxyNumberArrayValue</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$serverCountTotal</span> <span class="p">=</span> <span class="nv">$syslogProxyNumber</span><span class="p">[</span><span class="nv">$syslogProxyNumberArrayValue</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Disconnect from the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="get-current-sysloggloballoghost-value-on-all-hosts">Get current ‚ÄúSyslog.global.logHost‚Äù value on all Hosts</h6>
<ul>
<li>Here is a sample script that can be used to show the current &ldquo;Syslog.global.logHost&rdquo; values</li>
</ul>
<p><strong>Click arrow to expand the code:</strong><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Get current sysloghost value on all Hosts ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Set Variable Values to use with Script</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcServer</span>     <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcUser</span>       <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcPassword</span>   <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- File Name to store data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$filePath</span> <span class="p">=</span> <span class="s2">&#34;C:\Github\PS-TAM-Lab\syslog-current-info.csv&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Connect to the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-User</span> <span class="nv">$vcUser</span> <span class="n">-Password</span> <span class="nv">$vcPassword</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get list of all Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Create new CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nb">New-Item</span> <span class="n">-Path</span> <span class="nv">$filePath</span> <span class="n">-ItemType</span> <span class="n">File</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- add header to CSV file</span>
</span></span><span class="line"><span class="cl"><span class="nb">Add-Content</span> <span class="n">-Path</span> <span class="nv">$filePath</span> <span class="n">-Value</span> <span class="s2">&#34;ServerName,syslogName&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get all ESXi Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Output Data to screen and the CSV file</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$hostName</span> <span class="k">in</span> <span class="nv">$hostList</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$syslogInfo</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="n">-Name</span> <span class="nv">$hostName</span><span class="p">.</span><span class="py">Name</span> <span class="p">|</span> <span class="nb">Get-AdvancedSetting</span> <span class="n">-Name</span> <span class="s2">&#34;Syslog.global.logHost&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Entity</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | syslog Name: &#34;</span> <span class="p">+</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># ----- add info to csv file</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$addContentstr</span> <span class="p">=</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Entity</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34;,&#34;</span> <span class="p">+</span> <span class="nv">$syslogInfo</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Add-Content</span> <span class="n">-Path</span> <span class="nv">$filePath</span> <span class="n">-Value</span> <span class="nv">$addContentstr</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Disconnect from the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<ul>
<li>Sample Output from script:</li>
</ul>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-02.png" title="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-02.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-for-logs-syslog-settings/syslog-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="set-sysloggloballoghost-value-to-null-on-all-hosts">Set ‚ÄúSyslog.global.logHost‚Äù value to null on all Hosts</h6>
<ul>
<li>Sample script if you would ever want to set the &ldquo;Syslog.global.logHost&rdquo; values to null on all the ESXi Hosts.</li>
</ul>
<p><strong>Click arrow to expand the code:</strong><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Set sysloghost value to null on all Hosts ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Set Variable Values to use with Script</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcServer</span>     <span class="p">=</span> <span class="s2">&#34;vcsa8x.corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcUser</span>       <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vcPassword</span>   <span class="p">=</span> <span class="s2">&#34;VMware1!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Connect to the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-User</span> <span class="nv">$vcUser</span> <span class="n">-Password</span> <span class="nv">$vcPassword</span> <span class="n">-Protocol</span> <span class="n">https</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get list of all Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Get all ESXi Hosts</span>
</span></span><span class="line"><span class="cl"><span class="nv">$hostList</span> <span class="p">=</span> <span class="nb">Get-VMHost</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span> <span class="n">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Output Data to screen and a CSV file.</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$hostName</span> <span class="k">in</span> <span class="nv">$hostList</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s2">&#34;Server Name: &#34;</span> <span class="p">+</span> <span class="nv">$hostName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s2">&#34; | syslog Name: Set to null&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># ----- Set logserver address to null</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Set-VMHostSysLogServer</span> <span class="n">-SysLogServer</span> <span class="vm">$null</span> <span class="n">-VMHost</span> <span class="nv">$hostName</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- Disconnect from the vCenter Server or ESXi host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="n">-Server</span> <span class="nv">$vcServer</span> <span class="n">-Confirm:</span><span class="vm">$false</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="get-sysloggloballoghost-address-on-a-specific-host">Get ‚ÄúSyslog.global.logHost‚Äù address on a specific Host</h6>
<ul>
<li>Very simple script to get the &ldquo;Syslog.global.logHost&rdquo; values on a single ESXi host.</li>
</ul>
<p><strong>Click arrow to expand the code:</strong><br>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- Simple Get syslogserver address on a specific Host</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-VMHostSysLogServer</span> <span class="n">-VMHost</span> <span class="s1">&#39;esxi8-05.corp.local&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>When you use VMware Aria Operations for Logs | SaaS Version, you may need more than one Cloud Proxy</li>
<li>If you have more than one Cloud Proxy, you will need a way to balance the usage between the Proxies</li>
<li>If you have 10s, 100s or 1000s of ESXi Hosts, using a script will be the easiest and quickest way to specify &ldquo;Syslog.global.logHost‚Äù values.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>The VMware Community Podcast | I was a Guest on the show</title>
    <link>https://www.vcrocs.info/vmware-community-podcast-659/</link>
    <pubDate>Wed, 06 Sep 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-community-podcast-659/</guid>
    <description><![CDATA[<p><strong>The VMware Community Podcast, episode #659 | I was a Guest on the show</strong></p>
<hr>
<h6 id="podcast-guest">Podcast Guest:</h6>
<p>I listen to Podcasts all the time. If the Podcast covers VMware Products, you will find it in my playlist and I will listen to all the episodes. The <strong>VMware Communities Podcast</strong> has been on my playlist for many years. I was able to meet a regular co-host on the podcast, <strong>Matt Langguth</strong>, while attending the Central PA VMUG events and &ldquo;Little Hacks&rdquo; hosted by a business in the Altoona, PA Area. Matt and I attended a VMware event together in July, in the Pittsburgh, PA area. When I told Matt what was I was going to be involved with at <strong>VMware Explore 2023</strong>, he thought it would make a good podcast episode to share with the vCommunity. I said that I would be happy to join the VMware Communities Podcast and discuss how I was a <strong>Hackathon Team Captain</strong> and talk about the presentation that I did in the <strong>VMware {code} Theater</strong>.</p>
<p>Matt was also the person that introduced me to the VMware vExpert program. With his encouragement at a &ldquo;Little Hack&rdquo;, I applied and have been a part of the vExpert program since 2020. The vCommunity has been a great experience for me to meet friends and also advance my career.</p>
<p>Hopefully the vCommunity enjoys this episode. I thought this would be another great way to give back to the community and share some information.</p>
<hr>
<h6 id="episode-info">Episode Info:</h6>
<p>The episode I recorded with &ldquo;VMware Community Podcast #659&rdquo; was released on 09/06/2023.</p>
<h6 id="hosts-and-show-on-socials">Hosts and Show on Socials:</h6>
<ul>
<li><a href="https://www.linkedin.com/in/ericlnielsen/" target="_blank" rel="noopener noreffer ">Eric Nielson</a></li>
<li><a href="https://www.linkedin.com/in/coreysromero/" target="_blank" rel="noopener noreffer ">Corey Romero</a></li>
<li><a href="https://twitter.com/gsxesx" target="_blank" rel="noopener noreffer ">Matt Langguth</a></li>
<li><a href="https://twitter.com/VMware" target="_blank" rel="noopener noreffer ">VMware Community Podcast</a></li>
</ul>
<h6 id="podcast-discussion">Podcast Discussion:</h6>
<ul>
<li>How did I get started with vCommunity</li>
<li>My career path</li>
<li>The VMUG vCommunity and other User Groups</li>
<li>The 2023 VMware Explore Hackathon</li>
<li>My Presentation at VMware Explore 2023 in the {code} Theater</li>
</ul>
<h6 id="link-to-podcast-on-youtube">Link to Podcast on YouTube:</h6>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/k3mqw3kRsuE" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p><strong>Enjoy the listen!</strong></p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware Explore 2023 | Review and Experience</title>
    <link>https://www.vcrocs.info/vmware-explore-2023-review/</link>
    <pubDate>Sat, 26 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2023-review/</guid>
    <description><![CDATA[<p><strong>VMware Expore 2023 was the best Conference that I ever attended!</strong></p>
<hr>
<p>You may be wondering why the headline says &ldquo;VMware Explore 2023 was the best Conference that I ever attended!&rdquo;. Here are my reasons.</p>
<ul>
<li>
<p>I got to meet some of my co-workers in person and shake their hand and thank them personally for all their help and support. So many people helped me get to where I am in my career and it was good for me to personally thank them.</p>
</li>
<li>
<p>I was the Team Captain of a Hackathon Team that won 2nd place. The Hackathon Team was a great group of people that I will now call my friends for the rest of my life. During the Hackathon I did 1:1 presentations to Alan Renouf, Chris Wolf and other great Hackathon Judges. While doing the 1:1 to Alan, William Lam was also at my table to discuss the Teams project.</p>
<ul>
<li><strong>Hackathon Team</strong>:
<ul>
<li>Tina Krogull</li>
<li>Wes Milliron</li>
<li>Viviana Miranda</li>
<li>Madison Welsch</li>
<li>Edgar Sanchez</li>
<li>Dale Hassinger</li>
</ul>
</li>
</ul>
</li>
<li>
<p>I did my first live presentation in the VMware {code} Theater. The session was full with friends, co-workers, customers and other conference attendees. The feedback after my presentation was great with many people wanting more information and follow-ups. The topic was of interest to a lot of people.</p>
</li>
<li>
<p>There were many sessions with new VMware product announcements that are very exciting. Go view the recorded session videos on the <a href="https://www.vmware.com/explore/video-library/search.html#year=2023" target="_blank" rel="noopener noreffer ">VMware Explore Web Site</a>.</p>
</li>
<li>
<p>Attending VMware Explore as an employee for the first time was a much different experience than when I was customer. I had a feeling of pride for being part of such a great company and culture.</p>
</li>
</ul>
<hr>
<h6 id="favorite-pics-from-vmware-explore-2023">Favorite PICs from VMware Explore 2023.</h6>
<hr>
<p><strong>My Presentation in the VMware {code} Theater:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-01.jpg" title="/vmware-explore-2023-review/fav-01.jpg" data-thumbnail="/vmware-explore-2023-review/fav-01.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>My Presentation in the VMware {code} Theater:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-02.jpg" title="/vmware-explore-2023-review/fav-02.jpg" data-thumbnail="/vmware-explore-2023-review/fav-02.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>At the Hackathon:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-03.jpg" title="/vmware-explore-2023-review/fav-03.jpg" data-thumbnail="/vmware-explore-2023-review/fav-03.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>At the Hackathon with Alan Renouf and William Lam:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-03-1.jpg" title="/vmware-explore-2023-review/fav-03-1.jpg" data-thumbnail="/vmware-explore-2023-review/fav-03-1.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Hackathon 2nd place trophy. Won by the Team that I was the Captain:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-04.jpg" title="/vmware-explore-2023-review/fav-04.jpg" data-thumbnail="/vmware-explore-2023-review/fav-04.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Hackathon participants and Judges:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-05.jpg" title="/vmware-explore-2023-review/fav-05.jpg" data-thumbnail="/vmware-explore-2023-review/fav-05.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Hackathon Team Member Ed Sanchez:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-06.jpg" title="/vmware-explore-2023-review/fav-06.jpg" data-thumbnail="/vmware-explore-2023-review/fav-06.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Hackathon Team Member Viviana Miranda:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-07.jpg" title="/vmware-explore-2023-review/fav-07.jpg" data-thumbnail="/vmware-explore-2023-review/fav-07.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Christopher Kusek: Friend, Mentor, Team Member:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-08.jpg" title="/vmware-explore-2023-review/fav-08.jpg" data-thumbnail="/vmware-explore-2023-review/fav-08.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Christopher Kusek: Doing an awesome presentation:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-09.jpg" title="/vmware-explore-2023-review/fav-09.jpg" data-thumbnail="/vmware-explore-2023-review/fav-09.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Christopher Kusek (L) and Iwan &rsquo;e1&rsquo; Rahabok (R) | Both part of the Aria Family and friends:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-10.jpg" title="/vmware-explore-2023-review/fav-10.jpg" data-thumbnail="/vmware-explore-2023-review/fav-10.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Cosmin Trif (L) Christopher Kusek (C) and Ron Singler (R) | Members of my Team, Friends, Mentors:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-11.jpg" title="/vmware-explore-2023-review/fav-11.jpg" data-thumbnail="/vmware-explore-2023-review/fav-11.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Ariel Sanchez (L) Christina Griffus (R) | (2) of the Best TAMs and Mentors you will ever meet:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-12.jpg" title="/vmware-explore-2023-review/fav-12.jpg" data-thumbnail="/vmware-explore-2023-review/fav-12.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>left to right: Ariel Sanchez, Greg Bates, Dale Hassinger, Ed Sanchez, Admin Willie | All friends from the vCommunity:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-13.jpg" title="/vmware-explore-2023-review/fav-13.jpg" data-thumbnail="/vmware-explore-2023-review/fav-13.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Ariel Sanchez Packing the house during his session:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-14.jpg" title="/vmware-explore-2023-review/fav-14.jpg" data-thumbnail="/vmware-explore-2023-review/fav-14.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Healthcare SE Breakfast group | Marjorie Abdelkrime, Cory Lyons, Jeff Pardi, Dan Mitchell, Dale Hassinger | Another great group of co-workers:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-15.jpg" title="/vmware-explore-2023-review/fav-15.jpg" data-thumbnail="/vmware-explore-2023-review/fav-15.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Whiskey that I shared with Ariel Sanchez. Small token of my appreciation for everything he has done for me in my career:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-16.jpg" title="/vmware-explore-2023-review/fav-16.jpg" data-thumbnail="/vmware-explore-2023-review/fav-16.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Amanda Blevins (l) Ariel Sanchez (c) Viviana Miranda (r) | All great people and members of the VMware family:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-17.jpg" title="/vmware-explore-2023-review/fav-17.jpg" data-thumbnail="/vmware-explore-2023-review/fav-17.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Nathan Bennett | We met on the socials and did a podcast together:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-18.jpg" title="/vmware-explore-2023-review/fav-18.jpg" data-thumbnail="/vmware-explore-2023-review/fav-18.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>VMware Aria Operations Dashboard used at Hands On Labs:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-19.jpg" title="/vmware-explore-2023-review/fav-19.jpg" data-thumbnail="/vmware-explore-2023-review/fav-19.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Hackathon Team:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-98.png" title="/vmware-explore-2023-review/fav-98.png" data-thumbnail="/vmware-explore-2023-review/fav-98.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>VMware {code} Theater Session:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-review/fav-99.png" title="/vmware-explore-2023-review/fav-99.png" data-thumbnail="/vmware-explore-2023-review/fav-99.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<h6 id="video-of-the-presentation-at-vmware-explore-2023">Video of the Presentation at VMware Explore 2023.</h6>
<hr>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/k_BLvRb2SI4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware Explore 2023 | Presentation</title>
    <link>https://www.vcrocs.info/vmware-explore-2023-presentation/</link>
    <pubDate>Fri, 18 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2023-presentation/</guid>
    <description><![CDATA[<p><strong>Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)</strong></p>
<hr>
<p>I will be doing a VMware Explore 2023 Presentation. I did a virtual VMWorld presentation in 2021 but this will be my first VMware Explore Presentation that I will be doing &ldquo;Live&rdquo;. There will be many days going into this presentation so that the people attending will feel it was worth their time to learn about the topic. This is an awesome topic that I am very passionate about.</p>
<p>So register today for VMware Explore 2023 and attend my session.</p>
<hr>
<h6 id="session-name">Session Name:</h6>
<p>Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud) [CODE2501LV]</p>
<h6 id="description">Description:</h6>
<p>Learn how to create Windows Servers on-prem and in the cloud, see how to use the saltstack resource with the cloud template, add grain data with the cloud template, install software using the windows repo, add Windows Server roles and features with states, and use states to maintain your Windows Server configuration. After creating Windows Servers, you will also see how to monitor on-prem and cloud servers with VMware Aria Operations.</p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/code2501lv.png" title="/vmware-explore-2023-presentation/code2501lv.png" data-thumbnail="/vmware-explore-2023-presentation/code2501lv.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="presenters">Presenters:</h6>
<p>Dale Hassinger, Senior Cloud Solutions Architect, vExpert</p>
<p>Topic: Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)<br>
Session ID: CODE2501LV<br>
Track : Multi-Cloud<br>
Primary Products: VMware Aria Automation | VMware Aria Automation Config | VMware Aria Operations<br>
Session Type: VMware {code} Theater Session<br>
VMware Explore Conference: 08/21/2023-08/24/2023</p>
<hr>
<h6 id="link-to-my-session">Link to My Session:</h6>
<p><a href="https://event.vmware.com/flow/vmware/explore2023lv/content/page/catalog?search=Hassinger" target="_blank">My Session | Use VMware Aria to Create/Manage/Monitor Windows Servers (on-prem/cloud)</a></p>
<hr>
<h6 id="link-to-vmware-explore-2023-content-catalog">Link to VMware Explore 2023 Content Catalog:</h6>
<p><a href="https://event.vmware.com/flow/vmware/explore2023lv/content/page/catalog" target="_blank">VMware Explore 2023 | Content Catalog</a></p>
<hr>
<h6 id="source-code">Source Code:</h6>
<p>All the code from my Presentation is in my GitHub Repository.</p>
<p>Here is the link:</p>
<ul>
<li><a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">vCROCS | GitHub Repository</a></li>
</ul>
<hr>
<h6 id="pics-of-the-presentation-at-vmware-explore-2023">PICs of the Presentation at VMware Explore 2023.</h6>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/presenting-01.jpg" title="/vmware-explore-2023-presentation/presenting-01.jpg" data-thumbnail="/vmware-explore-2023-presentation/presenting-01.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-presentation/presenting-02.jpg" title="/vmware-explore-2023-presentation/presenting-02.jpg" data-thumbnail="/vmware-explore-2023-presentation/presenting-02.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="video-of-the-presentation-at-vmware-explore-2023">Video of the Presentation at VMware Explore 2023.</h6>
<hr>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/k_BLvRb2SI4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<p>The presentation was well attended. There was some good discussions with some of the attendees after the presentation. Thank You to everyone that took the time from their schedule to attend my presentation.</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware Explore 2023 | Hackathon</title>
    <link>https://www.vcrocs.info/vmware-explore-2023-hackathon/</link>
    <pubDate>Tue, 15 Aug 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-explore-2023-hackathon/</guid>
    <description><![CDATA[<p><strong>VMware Explore 2023 | Hackathon Team Captain</strong></p>
<hr>
<h6 id="vmware-explore-2023-hackathon">VMware Explore 2023 Hackathon:</h6>
<p>I will be participating in the VMware Explore 2023 Hackathon. I am the Team Captain for the &ldquo;Well Spoken&rdquo; Team. This Blog Post will be documenting the journey of the &ldquo;Well Spoken&rdquo; Team.</p>
<p>I want to thank Senior Staff TAM, <a href="https://twitter.com/arielsanchezmor" target="_blank" rel="noopener noreffer ">Ariel Sanchez</a>, for organizing the Team. Originally we were going to be part of Ariel&rsquo;s Team but there were too many people, so we split the Team in half. Ariel asked me to be the Captain of the 2nd Team. If you know Ariel, you know why he had too many people on his team.  Ariel is very active in the #vCommunity and does a great job promoting the #vCommunity. So when he asked on social platforms for people to join his team, there was instantly interest from a lot of people. Ariel has done a lot for me personally since I started working at VMware and I can&rsquo;t wait to meet him in person at the Hackathon.</p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/twitter.jpeg" title="/vmware-explore-2023-hackathon/twitter.jpeg" data-thumbnail="/vmware-explore-2023-hackathon/twitter.jpeg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="team-name">Team Name:</h6>
<p>&ldquo;Well Spoken&rdquo;</p>
<h6 id="team-hack">Team Hack:</h6>
<p>&ldquo;How to use Generative AI to create new Automation or Convert Existing.</p>
<h6 id="team-description">Team Description:</h6>
<p>&ldquo;Be prepared as they unveil their approach to transforming ordinary conversations into mind-boggling automation scripts. From novices to seasoned professionals, the team will unlock the secrets of this cutting-edge technology. Together, we shall revolutionize the way we automate VMware Products.&rdquo;</p>
<h6 id="team-members">Team Members:</h6>
<p><a href="https://www.linkedin.com/in/tinakrogull/" target="_blank" rel="noopener noreffer ">Tina Krogull</a> | Senior Technical Adoption Manager | Germany<br>
<a href="https://www.linkedin.com/in/wesmilliron/" target="_blank" rel="noopener noreffer ">Wes Milliron</a> | Technical Adoption Manager | Pennsylvania<br>
<a href="https://www.linkedin.com/in/viviana-miranda-cubero/" target="_blank" rel="noopener noreffer ">Viviana Miranda</a> | Senior Technical Marketing Architect | Costa Rica<br>
<a href="https://www.linkedin.com/in/madisonwelsch/" target="_blank" rel="noopener noreffer ">Madison Welsch</a> | Technical Adoption Manager | Ohio<br>
<a href="https://www.linkedin.com/in/edgar-sanchez-90439920/" target="_blank" rel="noopener noreffer ">Edgar Sanchez</a> | Systems Engineer II-VR/Windows at UMB | Alabama<br>
<a href="https://www.linkedin.com/in/dale-hassinger-5712301b/" target="_blank" rel="noopener noreffer ">Dale Hassinger</a> | Technical Adoption Manager | Pennsylvania</p>
<p>This is an AWESOME Team! I think it is great how we will be able to work together as an International Team. There is a lot of great experience and backgrounds on this Team.</p>
<hr>
<h6 id="update-07072023">Update 07/07/2023:</h6>
<p>Come back often to check for updates on how the &ldquo;Hacking&rdquo; is proceeding!</p>
<hr>
<h6 id="update-08152023">Update 08/15/2023:</h6>
<p>The &ldquo;Well-Spoken&rdquo; Team:</p>
<p>The Team is almost ready. We are looking forward to doing our presentation to the Hackathon Judges.</p>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/well-spoken-hackathon-logo.jpeg" title="/vmware-explore-2023-hackathon/well-spoken-hackathon-logo.jpeg" data-thumbnail="/vmware-explore-2023-hackathon/well-spoken-hackathon-logo.jpeg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hackathon-team-01.png" title="/vmware-explore-2023-hackathon/hackathon-team-01.png" data-thumbnail="/vmware-explore-2023-hackathon/hackathon-team-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hackathon-team-02.png" title="/vmware-explore-2023-hackathon/hackathon-team-02.png" data-thumbnail="/vmware-explore-2023-hackathon/hackathon-team-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Here is a Sneak Peak at what we are working on. We will make it easier for anyone to get started with Automation.</p>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/sneak-peak.png" title="/vmware-explore-2023-hackathon/sneak-peak.png" data-thumbnail="/vmware-explore-2023-hackathon/sneak-peak.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="update-08252023">Update 08/25/2023:</h6>
<p>The &ldquo;Well-Spoken&rdquo; Team got 2nd place at the VMware Explore Hackathon! There was a total of 9 Teams.</p>
<p>I am so proud of what the &ldquo;Well-Spoken&rdquo; Team created together. There was great collaboration throughout the whole process.</p>
<p>The Team created a custom form in VMware Aria Automation that will help you build a chat question that would be sent to ChatGPT and return complete usable scripts to use with Automation.  The Scirpt returned could then be saved into a Teams/Slack Channel, GitHub Repository or a VMwaqre Aria Operations Dashboard.</p>
<p>This custom form will help customers get started with Automation and also convert existing Automation, like an Ansible Playbook, into a salt state file.</p>
<hr>
<p><strong>Award:</strong>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/award.jpg" title="/vmware-explore-2023-hackathon/award.jpg" data-thumbnail="/vmware-explore-2023-hackathon/award.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-01.jpg" title="/vmware-explore-2023-hackathon/hack-01.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-01.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p><strong>Great discussion with Alan Renouf and William Lam:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-02.jpg" title="/vmware-explore-2023-hackathon/hack-02.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-02.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>All Participates and Judges:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-03.jpg" title="/vmware-explore-2023-hackathon/hack-03.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-03.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Ed Sanchez and I:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-04.jpg" title="/vmware-explore-2023-hackathon/hack-04.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-04.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p><strong>Viviana Miranda and I:</strong><br>
<figure><a class="lightgallery" href="/vmware-explore-2023-hackathon/hack-05.jpg" title="/vmware-explore-2023-hackathon/hack-05.jpg" data-thumbnail="/vmware-explore-2023-hackathon/hack-05.jpg" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<p>It would have been nice if the Whole Hackathon Team would have been able to attend the Hackathon. Maybe next year. Fingers crossed&hellip;</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>GitHub Repository | Code and Examples to help you get started</title>
    <link>https://www.vcrocs.info/github-repository/</link>
    <pubDate>Sat, 24 Jun 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/github-repository/</guid>
    <description><![CDATA[<p><strong>GitHub Repository | Code and Examples to help you get started</strong></p>
<hr>
<p>Creating a Blog Post every time I want to share a new code example or a new Dashboard Design can take a lot of time. To keep it simple for some items I want to share, I created a <a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository</a>. This will be a nice way for me to quickly add code more often. So go take a look at the <a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository</a>, and check back often. I will continue to do the more detailed Blog Posts, but I will also add a lot of snippets of code to the repository to share with the vCommunity.</p>
<h6 id="github-repository-name-unlocking-the-potential">GitHub Repository Name: &ldquo;Unlocking The Potential&rdquo;</h6>
<p>Collection of items for the VMware Aria Admin and Automation | Monitoring | Logging Enthusiast.</p>
<ul>
<li>VMware Aria Automation | vRA
<ul>
<li>Templates</li>
<li>abx scripts</li>
<li>Workflows</li>
</ul>
</li>
<li>VMware Aria Automation Config | SaltStack Config
<ul>
<li>state files</li>
<li>jobs</li>
</ul>
</li>
<li>VMware Aria Operations | vROPS
<ul>
<li>Dashboards</li>
<li>Views</li>
<li>Super Metrics</li>
<li>Metric Search Examples</li>
</ul>
</li>
<li>VMware Aria Operations for Logs | Log Insight</li>
<li>PowerShell
<ul>
<li>Scripts</li>
</ul>
</li>
<li>PowerCLI
<ul>
<li>Scripts</li>
</ul>
</li>
<li>Ansible
<ul>
<li>Playbooks</li>
</ul>
</li>
</ul>
<hr>
<h6 id="link-to-github-repository">Link to GitHub Repository:</h6>
<p><a href="https://github.com/dalehassinger/unlocking-the-potential" target="_blank" rel="noopener noreffer ">GitHub Repository | &ldquo;Unlocking The Potential&rdquo;</a>.</p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Automation | Custom Form Versioning</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/</link>
    <pubDate>Sat, 20 May 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/</guid>
    <description><![CDATA[<p><strong>Custom Form Versioning Demo</strong></p>
<hr>
<h6 id="vmware-aria-automation-812-released">VMware Aria Automation 8.12 Released:</h6>
<p>With the release of VMware Aria Automation 8.12, Custom Form Versioning was added to the Product. I use a lot Custom Forms with the Automation that I create, so I wanted to make sure I understood how the versioning feature worked. If you never did versioning before, this Blog Post should save you some time getting started and help you understand how the new features was designed to work.</p>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/custom-forms-01.png" title="/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/custom-forms-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/custom-forms-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="how-to-video">How to Video:</h6>
<p>Here is a video that shows you the process to use Custom Form Version Control. There are several steps involved with versioning, so I thought a video would be the best way to show you how the new feature works.</p>
<hr>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/Q9PZRwqhzKY" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<h6 id="how-to-start-with-previous-custom-form">How to start with previous custom form</h6>
<p>This screen shot is a very important step to start with previous version of Custom Form. Use <strong>&ldquo;New Form From&rdquo;</strong> and select previous version. You will then have all the custom changes you made in previous version as a starting point for new version.</p>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/custom-forms-03.png" title="/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/custom-forms-03.png" data-thumbnail="/unlocking-the-potential-vmware-aria-automation-custom-form-versioning/custom-forms-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>When you release a new Template version to the Catalog, make sure to use the <strong>&ldquo;New Form From&rdquo;</strong> to start with all previous changes.</li>
<li>Custom Form Versioning makes it very easy to role back changes.</li>
<li>Overall, nice new feature added to VMware Aria Automation 8.12.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="links-i-found-to-be-very-helpful">Links I found to be very helpful:</h6>
<ul>
<li><a href="https://blogs.vmware.com/management/2023/04/vmware-aria-automation-april-8-12-0-custom-forms-version-history.html" target="_blank">VMware Blog: VMware Aria Automation April (8.12.0) ‚Äì Custom Forms Version History</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Operations | Automation Central | VM Snaps</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-snap-cleanup/</link>
    <pubDate>Sat, 13 May 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-snap-cleanup/</guid>
    <description><![CDATA[<p><strong>Adding &ldquo;DoNotDelete&rdquo; to a VM Snap Name to control if Auto Deleted.</strong></p>
<hr>
<h6 id="vmware-aria-operations-812-released">VMware Aria Operations 8.12 Released:</h6>
<p>With the release of VMware Aria Operations 8.12, &ldquo;Snapshot Name&rdquo; was added to &ldquo;Delete old snapshots&rdquo;.</p>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-01.png" title="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="delete-old-snapshots">Delete old snapshots:</h6>
<p>Adding &ldquo;Snapshot Name&rdquo; to &ldquo;Delete old snapshots&rdquo; in Automation Central may seem like a small change but it adds a lot of Power to the process. This change allows you to create a Job to run everyday that will delete all Snaps on VMs EXCEPT Snaps that have &ldquo;DoNotDelete&rdquo; in the name.</p>
<hr>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> You could also do the opposite with this process. You can have the job only delete Snapshots where the Snap Name contains the text &ldquo;AutoDelete&rdquo;.</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-03.png" title="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-03.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>I prefer using the method to auto delete all old VM snaps, unless you tell me not to. After being a VMware administrator for many years, I have seen to many VMs running with snaps older that 30 days or even with multiple snaps running and each snap 60+ days old. That is NOT best practice. VM Snaps are NOT Backups. Using Automation Central within VMware Aria Operations helps you keep your environment running better and helps you follow some best practice rules.</p>
<hr>
<h6 id="schedule-report-history-amd-jobs">Schedule, Report, History amd Jobs</h6>
<p>Here are the screens you will see in Automation Central, Schedule, Report, History amd Jobs.</p>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Schedule:  Nice calendar view of all scheduled jobs.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Report: Shows you how much storage you were able to re-claim by deleting old snaps.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> History: Shows you every time a Snap was deleted with details.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Jobs: List of all Jobs you created.</li>
</ul>
<hr>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-02.gif" title="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-02.gif" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-snap-cleanup/aria-operations-02.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>Using the VMware Aria Operations Automation Central is a great way to keep snapshots cleaned up on VMs.</li>
<li>Add the text &ldquo;DoNotDelete&rdquo; to the Snap Name, makes an easy way to save Snaps that shouldn&rsquo;t be auto deleted.</li>
<li>Overall nice new feature added to VMware Aria Operations 8.12.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="links-i-found-to-be-very-helpful">Links I found to be very helpful:</h6>
<ul>
<li><a href="https://blogs.vmware.com/management/2023/04/whats-new-in-vmware-aria-operations-8-12.html" target="_blank">VMware Blog: What‚Äôs New in VMware Aria Operations 8.12</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Unlocking the Potential | VMware Aria Operations | Metric Search</title>
    <link>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-metric-searching/</link>
    <pubDate>Sat, 06 May 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/unlocking-the-potential-vmware-aria-operations-metric-searching/</guid>
    <description><![CDATA[<p><strong>Example metric queries to help you with &ldquo;Real World&rdquo; questions.</strong></p>
<hr>
<p>This blog post is the start of a series of blog posts that will be created to help you &ldquo;Unlock the Potential&rdquo; of the VMware Aria Products. I want to give you some &ldquo;Real World&rdquo; examples that VMware admins could use everyday to help them with their daily tasks. Hopefully you will learn from my Tips and Tricks.</p>
<hr>
<h6 id="vmware-aria-operations-812-released">VMware Aria Operations 8.12 Released:</h6>
<p>With the release of VMware Aria Operations 8.12, Metric Searches was added to the product.</p>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-metric-searching/metric-search-01.png" title="/unlocking-the-potential-vmware-aria-operations-metric-searching/metric-search-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-metric-searching/metric-search-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>I always like to create Dashboards with VMware Aria Operations to show metric information that I think is important to a VMware Admin. I think that metric searches will help provide a lot of information that is not included on existing or custom dashboards. Metric Searches will also allow non-admins, that don&rsquo;t have permission to create dashboards and views, to see specific information to help troubleshoot an issue.</p>
<p>I really like how the results of a metric search will stack and then you can scroll to see what item has the highest value. You can change the results to show different time ranges. After results are displayed you can also start defining the parents of the results.</p>
<hr>
<h6 id="search-examples">Search Examples:</h6>
<p>In this example the metric search found all VMs with CPU|Ready ms &gt; 750 ms. When search is complete you can define the search further by selecting the parent host.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs with CPU|Ready ms &gt; 750 ms
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="n">Ready</span><span class="w"> </span><span class="n">ms</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">750</span><span class="w"> </span><span class="n">ms</span></span></span></code></pre></td></tr></table>
</div>
</div>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-metric-searching/metric-search-02.gif" title="/unlocking-the-potential-vmware-aria-operations-metric-searching/metric-search-02.gif" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-metric-searching/metric-search-02.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<p>Now lets take the search used above and define the results further by specifying host or cluster.
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs with CPU|Ready ms &gt; 750 ms WHERE the host is esx-02a.corp.local
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="n">Ready</span><span class="w"> </span><span class="n">ms</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">750</span><span class="w"> </span><span class="n">ms</span><span class="w"> </span><span class="n">childOf</span><span class="w"> </span><span class="n">esx</span><span class="o">-</span><span class="mi">02</span><span class="n">a</span><span class="p">.</span><span class="n">corp</span><span class="p">.</span><span class="k">local</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs with CPU|Ready ms &gt; 750 ms WHERE the cluster is Cluster-01
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="n">Ready</span><span class="w"> </span><span class="n">ms</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">750</span><span class="w"> </span><span class="n">ms</span><span class="w"> </span><span class="n">childOf</span><span class="w"> </span><span class="k">Cluster</span><span class="o">-</span><span class="mi">01</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="example-metric-searches-for-vms">Example Metric Searches for VMs:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs with CPU usage % greater than 90
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs with Memory usage % greater than 90
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Memory</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">90</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs with Snap Shots older than 2 days
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="err">{</span><span class="n">Disk</span><span class="w"> </span><span class="k">Space</span><span class="o">|</span><span class="n">Snapshot</span><span class="o">|</span><span class="n">Age</span><span class="w"> </span><span class="p">(</span><span class="n">Days</span><span class="p">)</span><span class="err">}</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Find All VMs running longer than 30 days. Shows VMs not patched if you do monthly patching.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="err">{</span><span class="k">System</span><span class="o">|</span><span class="n">OS</span><span class="w"> </span><span class="n">Uptime</span><span class="w"> </span><span class="k">Second</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="err">}</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">30</span><span class="w"> </span><span class="err">{</span><span class="k">Day</span><span class="p">(</span><span class="n">s</span><span class="p">)</span><span class="err">}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show CPU and Memory usage for all VMs with a specific string in the name
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Memory</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Configuration</span><span class="o">|</span><span class="n">Name</span><span class="w"> </span><span class="k">contains</span><span class="w"> </span><span class="s1">&#39;rocky&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show CPU and Memory usage for a specific VM
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Memory</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Configuration</span><span class="o">|</span><span class="n">Name</span><span class="w"> </span><span class="k">equals</span><span class="w"> </span><span class="s1">&#39;DBH-196&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show CPU and Memory usage for all VMs in a specific Cluster
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Virtual</span><span class="w"> </span><span class="n">Machine</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Memory</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Summary</span><span class="o">|</span><span class="n">Parent</span><span class="w"> </span><span class="k">Cluster</span><span class="w"> </span><span class="k">equals</span><span class="w"> </span><span class="s1">&#39;Cluster-02&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="example-metric-searches-for-hosts">Example Metric Searches for Hosts:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Hosts with High CPU Usage
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Host</span><span class="w"> </span><span class="k">System</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Hosts with High Memory Usage
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Host</span><span class="w"> </span><span class="k">System</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Memory</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">80</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Hosts In Maintenance Mode
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Host</span><span class="w"> </span><span class="k">System</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Runtime</span><span class="o">|</span><span class="n">Maintenance</span><span class="w"> </span><span class="k">State</span><span class="w"> </span><span class="k">equals</span><span class="w"> </span><span class="s1">&#39;inMaintenance&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Hosts where Health is less than 100%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Host</span><span class="w"> </span><span class="k">System</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Badge</span><span class="o">|</span><span class="n">Health</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="mi">100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Hosts where Workload is greater than 75%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Host</span><span class="w"> </span><span class="k">System</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Badge</span><span class="o">|</span><span class="n">Workload</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">75</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show CPU Usage and Memory Usage for all Hosts In a Specific Cluster
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Host</span><span class="w"> </span><span class="k">System</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">CPU</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Memory</span><span class="o">|</span><span class="k">Usage</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="k">and</span><span class="w"> </span><span class="n">Summary</span><span class="o">|</span><span class="n">Parent</span><span class="w"> </span><span class="k">Cluster</span><span class="w"> </span><span class="k">equals</span><span class="w"> </span><span class="s1">&#39;Cluster-01&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="example-metric-searches-for-clusters">Example Metric Searches for Clusters:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Clusters where DRS was turned off
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="k">Cluster</span><span class="w"> </span><span class="n">Configuration</span><span class="o">|</span><span class="n">DRS</span><span class="w"> </span><span class="n">Configuration</span><span class="o">|</span><span class="n">Enabled</span><span class="w"> </span><span class="k">of</span><span class="w"> </span><span class="k">Cluster</span><span class="w"> </span><span class="n">Compute</span><span class="w"> </span><span class="n">Resource</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="k">Cluster</span><span class="w"> </span><span class="n">Configuration</span><span class="o">|</span><span class="n">DRS</span><span class="w"> </span><span class="n">Configuration</span><span class="o">|</span><span class="n">Enabled</span><span class="w"> </span><span class="k">equals</span><span class="w"> </span><span class="s1">&#39;false&#39;</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="example-metric-searches-for-datastores">Example Metric Searches for Datastores:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-SQL" data-lang="SQL"><span class="line"><span class="cl"><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Datastores where Capacity used is greater than 75%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Datastore</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Capacity</span><span class="o">|</span><span class="n">Used</span><span class="w"> </span><span class="k">Space</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">75</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">#</span><span class="w"> </span><span class="c1">--- Show Datastores where Health is less than 100%
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Metric</span><span class="p">:</span><span class="w"> </span><span class="n">Datastore</span><span class="w"> </span><span class="k">where</span><span class="w"> </span><span class="n">Badge</span><span class="o">|</span><span class="n">Health</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="mi">100</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<p>These metric search query examples should give you some good ideas of what you can do. Take these examples and change to make your own. Have Fun!</p>
<hr>
<p>Metric search queries remind me of one of my favorite quotes:<br>
Your thought process is the most powerful automation tool you‚Äôll ever have! - Cody De Arkland</p>
<hr>
<h6 id="stream-deck">Stream Deck</h6>
<p>If you&rsquo;re thinking to yourself, I don&rsquo;t want to have to type or copy/paste these metric searches everyday, I have a solution. STREAM DECK! If you ever wanted an excuse to spend the money for a Stream Deck, now is the time! You can program the buttons of a Stream Deck to do the searches. There is a button type in the Stream Deck called text. Enter the metric search query as the text. See the screen shot below. AWESOME!</p>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-metric-searching/stream-deck-01.png" title="/unlocking-the-potential-vmware-aria-operations-metric-searching/stream-deck-01.png" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-metric-searching/stream-deck-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<p>Demo of doing Multiple Searches in a row and all the text is entered by the Stream Deck.</p>
<figure><a class="lightgallery" href="/unlocking-the-potential-vmware-aria-operations-metric-searching/stream-deck-02.gif" title="/unlocking-the-potential-vmware-aria-operations-metric-searching/stream-deck-02.gif" data-thumbnail="/unlocking-the-potential-vmware-aria-operations-metric-searching/stream-deck-02.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="how-to-use-the-kebab-menu-to-go-to-the-troubleshooting-workbench">How to use the Kebab menu to go to the TroubleShooting Workbench</h6>
<p>Here is an example of all the steps above and then also choosing the kebab menu to go to the troubleshooting workbench.</p>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Enter Search String with Stream Deck</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Review the VMs for high CPU</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Change the date range to 7 days to see how long the VM has been at 100% usage</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Go to the troubleshooting WorkBench to see why the CPU usage is so high.</li>
</ul>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/BfPx0JUcw9o" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>Metric Searches are a great way to do get some quick data.</li>
<li>Nice way for non-admins to get data they want to see that isn&rsquo;t included in OOTB (Out of The Box) Dashboards and Views.</li>
<li>Quick way to be able to stack metrics from multiple objects.</li>
<li>Metric Search adds a way to extend how you would use Aria Operations Standard version, because you can not create custom dashboards and views.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="links-i-found-to-be-very-helpful">Links I found to be very helpful:</h6>
<ul>
<li><a href="https://blogs.vmware.com/management/2023/04/metric-based-search.html" target="_blank">VMware Blog: Metric-Based Search Improvements in VMware Aria Operations</a></li>
</ul>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write my blogs, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete the tasks in this article.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Operations | RVTools Dashboard</title>
    <link>https://www.vcrocs.info/vmware-aria-operations-rvtools-dashboard/</link>
    <pubDate>Sat, 01 Apr 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-aria-operations-rvtools-dashboard/</guid>
    <description><![CDATA[<p><strong>How to show RVTools data in a VMware Aria Operations Dashboard.</strong></p>
<hr>
<p>I know a lot of VMware admins that use <a href="https://www.robware.net/rvtools/" target="_blank" rel="noopener noreffer ">RVTools</a> on a regular basis. RVTools was #1 on the VMware Tools list on <a href="https://blogs.vmware.com/virtualblocks/2019/03/08/vspeaking-podcast-episode-108-top-10-vmware-tools/" target="_blank" rel="noopener noreffer ">vSpeaking Podcast Episode 108.</a>  When I was a VMware Customer, I used RVTools for 10+ years.</p>
<p>Recently I was asked how to see some of the data that RVTools generates in a VMware Aria Operations Dashboard. Some of the data displayed in the RVTools vHealth Worksheet is not a metric or property that VMware Aria Operations collects or generates. The company uses VMware Aria Operations for all monitoring and thought it would be nice to see this additional data in a VMware Aria Operations Dashboard. They would auto generate the RVTools files everyday, but it was additional steps to open the generated spreadsheet file, plus they had to remember to go look at the RVTools data. If the RVTools data was in a Dashboard, they thought it would be easier to see and wouldn&rsquo;t have to remember to go look at the data. They would make the RVTools Dashboard a favorite in VMware Aria Operations and look at the data everyday.</p>
<p>If you don&rsquo;t use RVTools today, take some time and review it. There are some good use cases for using the product. Awesome to see a Product developed by a VMware admin to make his life easier, and then shared and used by over a million people within the vCommunity.</p>
<h6 id="use-case">Use Case</h6>
<ul>
<li>Customer used RVTools to see data about their VMware environment.</li>
<li>Customer used VMware Aria Operations for all monitoring.</li>
<li>Customer wanted to have a VMware Aria Operations Dashboard that showed RVTools data to create a &ldquo;Single Pane of Glass&rdquo; experience.</li>
</ul>
<hr>
<h6 id="steps-to-complete-the-process">Steps to complete the process:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Automate the process to generate the RVTools xlsx file everyday.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Generate html files from the RVTools xlsx file, to display in a VMware Aria Operations Dashboard.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Need access to a Web Server of your choice to save the html files. The files are static, so any flavor of web server will work.</li>
</ul>
<hr>
<h6 id="rvtools-vhealth-data-in-a-vmware-aria-operations-dashboard">RVTools vHealth data in a VMware Aria Operations Dashboard:</h6>
<ul>
<li>Screen shot of Dashboard</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-01.gif" title="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-01.gif" data-thumbnail="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-01.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="powershell-script">PowerShell Script:</h6>
<ul>
<li>
<p>The script was created to be dynamic. No worksheet names or field names are hard coded. If new Worksheets or fields are added to RVTools in the future, they will automatically be picked up with this script.</p>
</li>
<li>
<p>RVTools provides a program to encrypt your password that will be used with the script. The program is named &ldquo;RVToolsPasswordEncryption.exe&rdquo;.</p>
</li>
<li>
<p>The PowerShell Script uses the importexcel PowerShell Module to see the data in the RVTools xlsx file. If you have never used the importexcel module, please review to see if you would have other use cases. No need to have Excel Installed. Works Awesome, one of my Favorite PowerShell Modules. Thanks <a href="https://github.com/dfinke" target="_blank" rel="noopener noreffer ">Doug Finke </a></p>
</li>
<li>
<p><strong>Click to expand PowerShell code</strong></p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Created By: Dale Hassinger</span>
</span></span><span class="line"><span class="cl"><span class="c"># Blog Site: www.vCROCS.info</span>
</span></span><span class="line"><span class="cl"><span class="c"># Notes:</span>
</span></span><span class="line"><span class="cl"><span class="c"># This script uses the importexcel powershell module</span>
</span></span><span class="line"><span class="cl"><span class="c"># find-module importexcel</span>
</span></span><span class="line"><span class="cl"><span class="c"># install-module importexcel</span>
</span></span><span class="line"><span class="cl"><span class="c"># Script Description: Creates RVTools xlsx file and creates a web page for every worksheet.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Function to Create the HTML Files ] -----</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">Create-HTML</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">	<span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$workSheet</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span> <span class="c"># End param</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#$workSheet = &#39;vHealth&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vTools</span> <span class="p">=</span> <span class="nb">Import-Excel</span> <span class="n">-Path</span> <span class="s2">&#34;C:\RVTools\RVTools-Data.xlsx&#34;</span> <span class="n">-WorksheetName</span> <span class="nv">$workSheet</span>
</span></span><span class="line"><span class="cl"><span class="c">#$vTools</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Get the Header info for the specifc worksheet</span>
</span></span><span class="line"><span class="cl"><span class="nv">$tableHeaders</span> <span class="p">=</span> <span class="p">(</span><span class="nv">$vTools</span><span class="p">[</span><span class="mf">0</span><span class="p">].</span><span class="py">psobject</span><span class="p">.</span><span class="n">Properties</span><span class="p">).</span><span class="py">name</span>
</span></span><span class="line"><span class="cl"><span class="c">#$tableHeaders</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Build the Table Header</span>
</span></span><span class="line"><span class="cl"><span class="nv">$tableHeader</span> <span class="p">=</span> <span class="sh">@&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">&#39;@
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh">foreach($field in $tableHeaders){
</span></span></span><span class="line"><span class="cl"><span class="sh">  $outPut = &#39;                        &lt;th&gt;&#39; + $field + &#39;&lt;/th&gt;&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">  $tableHeader += &#34;$output&#34; + &#34;`n&#34;
</span></span></span><span class="line"><span class="cl"><span class="sh">  #Write-Output $tableHeader
</span></span></span><span class="line"><span class="cl"><span class="sh">}
</span></span></span><span class="line"><span class="cl"><span class="sh">#$tableHeader
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh"># -- Start creating the HTML file
</span></span></span><span class="line"><span class="cl"><span class="sh">$htmlFile = @&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">&lt;!DOCTYPE html&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&lt;html&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&lt;head&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;meta charset=&#34;UTF-8&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;title&gt;PageTitle&lt;/title&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;!-- Include the required stylesheets and scripts --&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;script type=&#34;text/javascript&#34; src=&#34;https://code.jquery.com/jquery-3.6.0.min.js&#34;&gt;&lt;/script&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;script type=&#34;text/javascript&#34; src=&#34;https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js&#34;&gt;&lt;/script&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;!-- CSS rules to control the font --&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;style type=&#34;text/css&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">		body {
</span></span></span><span class="line"><span class="cl"><span class="sh">			font-family: Arial, sans-serif;
</span></span></span><span class="line"><span class="cl"><span class="sh">			font-size: 11px;
</span></span></span><span class="line"><span class="cl"><span class="sh">		}
</span></span></span><span class="line"><span class="cl"><span class="sh">		table {
</span></span></span><span class="line"><span class="cl"><span class="sh">			font-family: Arial, sans-serif;
</span></span></span><span class="line"><span class="cl"><span class="sh">			font-size: 11px;
</span></span></span><span class="line"><span class="cl"><span class="sh">			border-collapse: collapse;
</span></span></span><span class="line"><span class="cl"><span class="sh">			width: 100%;
</span></span></span><span class="line"><span class="cl"><span class="sh">		}
</span></span></span><span class="line"><span class="cl"><span class="sh">		th, td {
</span></span></span><span class="line"><span class="cl"><span class="sh">			padding: 8px;
</span></span></span><span class="line"><span class="cl"><span class="sh">			text-align: left;
</span></span></span><span class="line"><span class="cl"><span class="sh">			border: 1px solid #ddd;
</span></span></span><span class="line"><span class="cl"><span class="sh">		}
</span></span></span><span class="line"><span class="cl"><span class="sh">		th {
</span></span></span><span class="line"><span class="cl"><span class="sh">			background-color: #f2f2f2;
</span></span></span><span class="line"><span class="cl"><span class="sh">		}
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;/style&gt;	
</span></span></span><span class="line"><span class="cl"><span class="sh">	
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;!-- Initialize the DataTables plugin --&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;script type=&#34;text/javascript&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">		$(document).ready(function() {
</span></span></span><span class="line"><span class="cl"><span class="sh">			$(&#39;#example&#39;).DataTable({
</span></span></span><span class="line"><span class="cl"><span class="sh">				scrollX: true, // enable horizontal scrolling
</span></span></span><span class="line"><span class="cl"><span class="sh">				order: [[ 0, &#34;asc&#34; ]], // sort by the first column in ascending order by default
</span></span></span><span class="line"><span class="cl"><span class="sh">				searching: true // enable searching
</span></span></span><span class="line"><span class="cl"><span class="sh">			});
</span></span></span><span class="line"><span class="cl"><span class="sh">		});
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;/script&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&lt;/head&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&lt;body&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">	&lt;table id=&#34;example&#34; class=&#34;display&#34; style=&#34;width:100%&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">		&lt;thead&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">			&lt;tr&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&#39;@</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Create HTML Page Title</span>
</span></span><span class="line"><span class="cl"><span class="nv">$pageTitle</span> <span class="p">=</span> <span class="s1">&#39;RVTools | &#39;</span> <span class="p">+</span> <span class="nv">$workSheet</span>
</span></span><span class="line"><span class="cl"><span class="nv">$htmlFile</span> <span class="p">=</span> <span class="nv">$htmlFile</span><span class="p">.</span><span class="py">Replace</span><span class="p">(</span><span class="s2">&#34;PageTitle&#34;</span><span class="p">,</span><span class="nv">$pageTitle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Add Table Header to HTML File</span>
</span></span><span class="line"><span class="cl"><span class="nv">$htmlFile</span> <span class="p">+=</span> <span class="nv">$tableHeader</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$htmlHeader2</span> <span class="p">=</span> <span class="sh">@&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">                    &lt;/tr&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">                &lt;/thead&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">                &lt;tbody&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh">&#39;@</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$htmlFile</span> <span class="p">+=</span> <span class="nv">$htmlHeader2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Create HTML Table</span>
</span></span><span class="line"><span class="cl"><span class="nv">$table</span> <span class="p">=</span> <span class="sh">@&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">&#39;@
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh">foreach($record in $vTools){
</span></span></span><span class="line"><span class="cl"><span class="sh">  $output = &#39;                    &lt;tr&gt;&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">  foreach($field in $tableHeaders){
</span></span></span><span class="line"><span class="cl"><span class="sh">    $output += &#39;&lt;td&gt;&#39; + $record.$field + &#39;&lt;/td&gt;&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">    #Write-Output $tableHeader
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh">  }
</span></span></span><span class="line"><span class="cl"><span class="sh">  $output += &#39;&lt;/tr&gt;&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">  #Write-Output $output
</span></span></span><span class="line"><span class="cl"><span class="sh">  $table += &#34;$output&#34; + &#34;`n&#34;
</span></span></span><span class="line"><span class="cl"><span class="sh">}
</span></span></span><span class="line"><span class="cl"><span class="sh">#$table
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh"># -- Add Table to HTML File
</span></span></span><span class="line"><span class="cl"><span class="sh">#$table
</span></span></span><span class="line"><span class="cl"><span class="sh">$htmlFile += $table
</span></span></span><span class="line"><span class="cl"><span class="sh">#$htmlFile
</span></span></span><span class="line"><span class="cl"><span class="sh">
</span></span></span><span class="line"><span class="cl"><span class="sh"># -- Create HTML Footer
</span></span></span><span class="line"><span class="cl"><span class="sh">$htmlFooter = @&#39;
</span></span></span><span class="line"><span class="cl"><span class="sh">                &lt;/tbody&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">            &lt;/table&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">    &lt;/body&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&lt;/html&gt;
</span></span></span><span class="line"><span class="cl"><span class="sh">&#39;@</span>
</span></span><span class="line"><span class="cl"><span class="c">#$htmlFooter</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Add HTML Footer</span>
</span></span><span class="line"><span class="cl"><span class="nv">$htmlFile</span> <span class="p">+=</span> <span class="nv">$htmlFooter</span>
</span></span><span class="line"><span class="cl"><span class="c">#$htmlFile</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Create the  HTML file in the Web Server folder</span>
</span></span><span class="line"><span class="cl"><span class="nv">$filePath</span> <span class="p">=</span> <span class="s1">&#39;C:\inetpub\wwwroot\rvtools\&#39;</span> <span class="p">+</span> <span class="nv">$workSheet</span> <span class="p">+</span> <span class="s1">&#39;.htm&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$htmlFile</span> <span class="p">|</span> <span class="nb">Out-File</span> <span class="n">-FilePath</span> <span class="nv">$filePath</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Run RVTools and create the xlsx file ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Set RVTools path</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">string</span><span class="p">]</span> <span class="nv">$RVToolsPath</span> <span class="p">=</span> <span class="s2">&#34;C:\RVTools&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- cd to RVTools directory</span>
</span></span><span class="line"><span class="cl"><span class="nb">set-location</span> <span class="nv">$RVToolsPath</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Set parameters for vCenter and start RVTools export</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">string</span><span class="p">]</span> <span class="nv">$VCServer</span>          <span class="p">=</span> <span class="s2">&#34;vcsa-01a.corp.local&#34;</span>                                                    <span class="c"># my test vCenter server</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">string</span><span class="p">]</span> <span class="nv">$User</span>              <span class="p">=</span> <span class="s2">&#34;administrator@corp.local&#34;</span>                                                    <span class="c"># or use -passthroughAuth</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">string</span><span class="p">]</span> <span class="nv">$EncryptedPassword</span> <span class="p">=</span> <span class="s2">&#34;_RVToolsV2PWDasF30QqSuq9OjfEwP+zMeR93x/p511QbI9SZl9YvUJw=&#34;</span> <span class="c"># use RVToolsPasswordEncryption.exe to encrypt your password</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">string</span><span class="p">]</span> <span class="nv">$XlsxDir</span>           <span class="p">=</span> <span class="s2">&#34;C:\RVTools&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">string</span><span class="p">]</span> <span class="nv">$XlsxFile</span>          <span class="p">=</span> <span class="s2">&#34;RVTools-Data.xlsx&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># -- Start cli of RVTools</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s2">&#34;Start export for vCenter </span><span class="nv">$VCServer</span><span class="s2">&#34;</span> <span class="n">-ForegroundColor</span> <span class="n">DarkYellow</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Arguments</span> <span class="p">=</span> <span class="s2">&#34;-u </span><span class="nv">$User</span><span class="s2"> -p </span><span class="nv">$EncryptedPassword</span><span class="s2"> -s </span><span class="nv">$VCServer</span><span class="s2"> -c ExportAll2xlsx -d </span><span class="nv">$XlsxDir</span><span class="s2"> -f </span><span class="nv">$XlsxFile</span><span class="s2"> -DBColumnNames&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c">#Write-Host $Arguments</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Process</span> <span class="p">=</span> <span class="nb">Start-Process</span> <span class="n">-FilePath</span> <span class="s2">&#34;C:\RVTools\RVTools.exe&#34;</span> <span class="n">-ArgumentList</span> <span class="nv">$Arguments</span> <span class="n">-Wait</span> <span class="n">-PassThru</span> <span class="c">#-NoNewWindow</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$Process</span><span class="p">.</span><span class="py">ExitCode</span> <span class="o">-eq</span> <span class="mf">-1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s2">&#34;Error: Export failed! RVTools returned exitcode -1, probably a connection error! Script is stopped&#34;</span> <span class="n">-ForegroundColor</span> <span class="n">Red</span>
</span></span><span class="line"><span class="cl">    <span class="n">exit</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Get Name of every Worksheet in xlsx file and send to function to create html files ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$worksheetNames</span> <span class="p">=</span> <span class="nb">Get-ExcelSheetInfo</span> <span class="s1">&#39;C:\RVTools\RVTools-Data.xlsx&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$workSheet</span> <span class="k">in</span> <span class="nv">$worksheetNames</span><span class="p">.</span><span class="n">Name</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">	<span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;WorkSheet: &#39;</span> <span class="p">+</span> <span class="nv">$workSheet</span>
</span></span><span class="line"><span class="cl">	<span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">	<span class="nb">Create-HTML</span> <span class="n">-workSheet</span> <span class="nv">$workSheet</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="results-of-script">Results of script:</h6>
<ul>
<li>For my example, I am using a Windows Server and IIs Web Server.</li>
<li>All html files are saved in the folder C:\inetpub\wwwroot\rvtools\ on the IIS Server.</li>
<li>A html file is created for ever Worksheet within the xlsx file.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-02.png" title="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-02.png" data-thumbnail="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<h6 id="vmware-aria-operation-dashboard-design">VMware Aria Operation Dashboard Design:</h6>
<ul>
<li>Use the Text Display Widget to show the results of a html within the Dashboard.</li>
<li>Add a Text Display Widget for every Worksheet that you want to display within the Dashboard.</li>
<li>Add the url to the Text Display Widget. You <strong>MUST</strong> use a secure url. IE: https://192.168.110.202/rvtools/vHealth.htm</li>
</ul>
<p><figure><a class="lightgallery" href="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-03.png" title="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-03.png" data-thumbnail="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-04.png" title="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-04.png" data-thumbnail="/vmware-aria-operations-rvtools-dashboard/rvtools-dashboard-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure></p>
<hr>
<h6 id="how-to-run-the-script-everyday">How to run the script everyday?:</h6>
<ul>
<li>I use a Workflow within VMware Aria Automation Orchestrator that is built-in to VMware Aria Automation. You can also you a stand alone VMware Aria Automation Orchestrator install if you don&rsquo;t use VMware Aria Automation.</li>
<li>There is a OOTB (Out of the Box) Workflow that allows you to run a PowerShell script on a PowerShell Host. I clone that Workflow and edit to match my environment.</li>
<li>I schedule the Workflow to run everyday at 5:00 am.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>The Text Display Widget is a nice way to display data in a VMware Aria Operations Dashboard from any html file.</li>
<li>Using the Text Display Widget allows you to create that &ldquo;Single Pane of Glass&rdquo; experience with VMware Aria Operations.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write about Automation, I always say there are many ways to accomplish the same task. This article is just one way that you could accomplish this task. I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete automation as long as it completes successfully and consistently.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Rest API calls in VMware Aria Automation with PowerShell</title>
    <link>https://www.vcrocs.info/rest-api-calls-vmware-aria-automation/</link>
    <pubDate>Mon, 20 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>Dave Kaber</author>
    <guid>https://www.vcrocs.info/rest-api-calls-vmware-aria-automation/</guid>
    <description><![CDATA[<p><strong>Rest API calls in VMware Aria Automation with PowerShell</strong></p>
<hr>
<h6 id="use-case">Use Case:¬†</h6>
<p>I‚Äôm often faced with the scenario where a client or colleague are attempting to perform an action and are met with the response that the feature isn‚Äôt in a GUI, but there is an API you can call. This scenario is common across the VMware stack of products as it‚Äôs not practical to have a button for everything, but it usually leads to the follow up question in some form of ‚Äúwell how do I call that?‚Äù. I wanted to write about a recent experience with a colleague as a means of showing one way to accomplish that.</p>
<p>Before I jump into the details, I wanted to add somewhat of a disclaimer that with any type of automation there are numerous ways to solve a particular problem. Based on my comfort with specific products and scripting languages, what‚Äôs below is how I was able to work with the client to address the problem. There is the possibility that another person could accomplish the same task in a different way and none of it is ‚Äòwrong‚Äô.</p>
<p>A colleague came to me and asked about a way to assist a client looking to add several networks into a Network Profile within Cloud Assembly (a component of Aria Automation). While his client could have very easily clicked one-by-one in the UI, that is a tedious operation and runs the risk of human error. Based on the client‚Äôs familiarity with PowerShell, we opted to write a script to invoke the necessary API‚Äôs using the Invoke-RestMethod PowerShell cmdlet.</p>
<p>So, to frame up a bit more of the ‚Äòhow‚Äô, when faced with a scenario like this, we need to have a script that performs three steps:</p>
<h6 id="steps">Steps:</h6>
<ol>
<li>Get your authentication token/header configured</li>
<li>Find the appropriate URI and use a ‚ÄòGET‚Äô method to look at the formatting and to help build a body</li>
<li>Find the appropriate URI and method (e.g. ‚ÄòPATCH‚Äô or ‚ÄòPOST‚Äô) in order to call that API and feed it the necessary information in the body</li>
</ol>
<hr>
<h6 id="step-1">Step 1:</h6>
<p>So, I need to provide a set of credentials to the CSP login URI. This will give me a refresh token which I can then feed to the IaaS login URI to get my access token. The access token will be what I can use to make the necessary calls into my Aria Automation environment. The URI‚Äôs and some more detail are provided in <a href="https://kb.vmware.com/s/article/89129" target="_blank" rel="noopener noreffer ">VMware KB 89129</a>.</p>
<p>¬†
There are some potentially easier methods to authenticate to Aria Automation and invoke a REST API call (like the PowerVRA Module), but for my example below, I used all native PowerShell.<br>
¬†</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c">#BasicInfo:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vraServer</span> <span class="p">=</span> <span class="s2">&#34;vra.corp.local&#34;</span>
</span></span><span class="line"><span class="cl">¬†
</span></span><span class="line"><span class="cl"><span class="c">#Get Credentials to build auth:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$credential</span> <span class="p">=</span> <span class="nb">Get-Credential</span>
</span></span><span class="line"><span class="cl"><span class="nv">$username</span> <span class="p">=</span> <span class="nv">$credential</span><span class="p">.</span><span class="py">UserName</span>
</span></span><span class="line"><span class="cl"><span class="nv">$pass</span> <span class="p">=</span> <span class="nv">$credential</span><span class="p">.</span><span class="py">Password</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span> <span class="p">=</span> <span class="p">[</span><span class="no">System.Runtime.InteropServices.Marshal</span><span class="p">]::</span><span class="n">PtrToStringAuto</span><span class="p">([</span><span class="no">System.Runtime.InteropServices.Marshal</span><span class="p">]::</span><span class="n">SecureStringToBSTR</span><span class="p">(</span><span class="nv">$pass</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nv">$authBody</span>¬† <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;username&#34;</span> <span class="p">=</span> <span class="nv">$username</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;password&#34;</span> <span class="p">=</span> <span class="nv">$password</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">¬†
</span></span><span class="line"><span class="cl"><span class="c">#Build Header:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$header</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="s2">&#34;System.Collections.Generic.Dictionary[[String],[String]]&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$header</span><span class="p">.</span><span class="py">Add</span><span class="p">(</span><span class="s2">&#34;Accept&#34;</span><span class="p">,</span><span class="s2">&#34;application/json&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$header</span><span class="p">.</span><span class="py">Add</span><span class="p">(</span><span class="s2">&#34;Content-Type&#34;</span><span class="p">,</span><span class="s2">&#34;application/json&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">¬†
</span></span><span class="line"><span class="cl"><span class="c">#Get Refresh Token:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;https://&#34;</span> <span class="p">+</span> <span class="nv">$vraServer</span> <span class="p">+</span> <span class="s2">&#34;/csp/gateway/am/api/login?access_token&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$refreshToken</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">POST</span> <span class="n">-Headers</span> <span class="nv">$header</span> <span class="n">-Body</span> <span class="p">(</span><span class="nv">$authBody</span> <span class="p">|</span> <span class="nb">ConvertTo-Json</span><span class="p">)</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl"><span class="nv">$refreshToken</span> <span class="p">=</span> <span class="nv">$refreshToken</span><span class="p">.</span><span class="py">refresh_token</span>
</span></span><span class="line"><span class="cl"><span class="nv">$refreshTokenBody</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;refreshToken&#34;</span> <span class="p">=</span> <span class="nv">$refreshToken</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">¬†
</span></span><span class="line"><span class="cl"><span class="c">#Get Access Token:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;https://&#34;</span> <span class="p">+</span> <span class="nv">$vraServer</span> <span class="p">+</span> <span class="s2">&#34;/iaas/api/login&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$accessToken</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">POST</span> <span class="n">-Headers</span> <span class="nv">$header</span> <span class="n">-body</span> <span class="p">(</span><span class="nv">$refreshTokenBody</span> <span class="p">|</span> <span class="nb">ConvertTo-JSON</span><span class="p">)</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl"><span class="nv">$accessToken</span> <span class="p">=</span> <span class="s2">&#34;Bearer &#34;</span> <span class="p">+</span> <span class="nv">$accessToken</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl">¬†
</span></span><span class="line"><span class="cl"><span class="c">#add access token to Header</span>
</span></span><span class="line"><span class="cl"><span class="nv">$header</span><span class="p">.</span><span class="py">Add</span><span class="p">(</span><span class="s2">&#34;Authorization&#34;</span><span class="p">,</span><span class="nv">$accessToken</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="step-2">Step 2:</h6>
<p>¬†
Now that I have the $accessToken variable set and added to my header, I can make any REST API calls I need.
¬†
For this example, we wanted to add a bunch of fabric-networks (in vSphere parlance DvPGs) to a network profile. In VMware Aria Automation, these are already available with the addition of my vCenter Cloud Account, just not associated with a network profile.
¬†
In order to enumerate the available fabric-networks, I am going to take my $header variable with the newly generated $accessToken added and call a ‚ÄòGet‚Äô against the /iaas/api/fabric-networks/ URI.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c">#Get Fabric Network Ids:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;https://&#34;</span> <span class="p">+</span> <span class="nv">$vraServer</span> <span class="p">+</span> <span class="s2">&#34;/iaas/api/fabric-networks&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fabricNetworks</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">GET</span> <span class="n">-Headers</span> <span class="nv">$header</span> <span class="p">-</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now that I have a full list, I wanted to isolate the list down to those on a specific Distributed Virtual Switch using the following:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="nv">$dvPGs</span> <span class="p">=</span> <span class="nv">$fabricNetworks</span><span class="p">.</span><span class="py">content</span> <span class="p">|</span> <span class="nb">Where </span><span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="py">name</span> <span class="o">-like</span> <span class="s1">&#39;*DvPG*&#39;</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="step-3">Step 3:</h6>
<p>¬†
Now that I have my list of fabric-networks, I wanted to build a JSON body that I could send to Aria Automation to add them to the network-profile in question. So, I used the following request to pull the necessary info:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c">#Get Network Profiles:</span>
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;https://&#34;</span> <span class="p">+</span> <span class="nv">$vraServer</span> <span class="p">+</span> <span class="s2">&#34;/iaas/api/network-profiles&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$networkProfiles</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">GET</span> <span class="n">-Headers</span> <span class="nv">$header</span> <span class="n">-SkipCertificateCheck</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>In my lab I had a single network profile, so if I just run $networkProfiles | ConvertTo-JSON in PowerShell, we get the info we need for our body.</p>
<p>The fun with this specific example is that the info in the ‚ÄòGET‚Äô request is slightly different than how we have to format it for the ‚ÄòPATCH‚Äô request. Looking at the SwaggerUI interface (https://&ldquo;YourAriaAutomationServer&rdquo;/iaas/api/swagger) and looking at the Network Profile Section, I can see the URI for the PATCH call (/iaas/api/network-profiles/{id}) and that we need to feed an array of ID‚Äôs to a property called ‚ÄòfabricNetworkIds‚Äô. A couple of other good points to call out is to pay attention to any field or property marked as ‚ÄòRequired‚Äô. If you‚Äôre unfamiliar with the SwaggerUI interface, selecting the ‚ÄòModel‚Äô link within a Specific URI will give you that information. In my example, I see I need to have the ID for the network profile, the name of the network profile, and the regionID of the network profile.</p>
<p>(Side note‚Ä¶ depending on what is in the REST Body, exercise some caution and testing with a PATCH or PUT command as in this specific case with the NetworkID‚Äôs, they will only add what is in the body and remove anything else. Essentially the body replaces what is already there instead of appending to an already existing list.)</p>
<p>Now that I have my body, we just repeat the process and invoke the call to the appropriate URI. The example below only has a couple of fabricNetworkIds specified, but the actual ask was for several hundred.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;name&#34;</span> <span class="p">=</span> <span class="s2">&#34;REST_API&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;id&#34;</span><span class="p">=</span>¬† <span class="s2">&#34;cce57ddd-d206-9999-870d-25b8775fb365&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;orgId&#34;</span> <span class="p">=</span> <span class="s2">&#34;12131928-3bdd-9999-9e69-3edf5c318a7d&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;customProperties&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">¬†¬†¬†¬†¬†¬†¬† <span class="s2">&#34;datacenterId&#34;</span> <span class="p">=</span> <span class="s2">&#34;Datacenter:datacenter-3&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="p">}</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;externalRegionId&#34;</span> <span class="p">=</span> <span class="s2">&#34;Datacenter:datacenter-3&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;cloudAccountId&#34;</span> <span class="p">=</span> <span class="s2">&#34;8274acb1-bad2-40cf-1969-e3ed60c16956&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;isolationType&#34;</span> <span class="p">=</span>¬† <span class="s2">&#34;NONE&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="s2">&#34;fabricNetworkIds&#34;</span> <span class="p">=</span> <span class="vm">@</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">¬†¬†¬†¬†¬†¬†¬† <span class="s2">&#34;fba96959-c0b2-99a6-bb7b-0da4c35b3eaf&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬†¬†¬†¬† ¬†<span class="s2">&#34;21a52412-85a3-4b9d-a99b-0aaf19185755&#34;</span>
</span></span><span class="line"><span class="cl">¬†¬†¬† <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">¬†
</span></span><span class="line"><span class="cl"><span class="nv">$uri</span> <span class="p">=</span> <span class="s2">&#34;https://&#34;</span> <span class="p">+</span> <span class="nv">$vraServer</span> <span class="p">+</span> <span class="s2">&#34;/iaas/api/network-profiles/&#34;</span> <span class="p">+</span> <span class="nv">$npId</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-RestMethod</span> <span class="n">-uri</span> <span class="nv">$uri</span> <span class="n">-Method</span> <span class="n">PATCH</span> <span class="n">-Headers</span> <span class="nv">$header</span> <span class="n">-Body</span> <span class="p">(</span><span class="nv">$body</span> <span class="p">|</span> <span class="nb">ConvertTo-JSON</span> <span class="n">-Depth</span> <span class="mf">5</span><span class="p">)</span> <span class="n">-SkipCertificateCheck</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<figure><a class="lightgallery" href="/rest-api-calls-vmware-aria-automation/dave01.png" title="/rest-api-calls-vmware-aria-automation/dave01.png" data-thumbnail="/rest-api-calls-vmware-aria-automation/dave01.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<p>The result is beneficial for two reasons.</p>
<ol>
<li>My colleague and his client have a way of adding the necessary DvPG‚Äôs to their network profile in a methodical way that avoids a lot of clicking.</li>
<li>The steps and much of the code above are reusable, so whatever the use case you‚Äôre attempting to solve for, you don‚Äôt have to start from scratch each time.</li>
</ol>
<p>Hopefully this example helps anyone who is stuck or just looking for an example to keep in their back pocket of ‚Äòhow to‚Äô for when that situation arises.</p>
<h6 id="guest-blogger">Guest Blogger:</h6>
<blockquote>
<p>I want to thank guest Blogger, <strong>Dave Kaber</strong> <a href="https://twitter.com/dave_kaber" target="_blank" rel="noopener noreffer ">@dave_kaber</a>, for taking the time to write this blog post and share with the <strong>#vCommunity</strong>. Hopefully Dave will be sharing some additional content in the future.</p>
</blockquote>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>The PowerShell Podcast | I was a Guest on the show</title>
    <link>https://www.vcrocs.info/the-powershell-podcast/</link>
    <pubDate>Sun, 12 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/the-powershell-podcast/</guid>
    <description><![CDATA[<p><strong>The PowerShell Podcast | I was a Guest on the show</strong></p>
<hr>
<h6 id="podcast-guest">Podcast Guest:</h6>
<p>I listen to Podcasts all the time. This past year, I started listening to a new podcast, <strong>&ldquo;The PowerShell Podcast&rdquo;</strong>. This podcast has become one of my favorites that I listen to every week. The hosts (<strong>Andrew Pla</strong> and <strong>Jordan Hammond</strong>) are funny, the content interests me a lot, and the list of guests has been awesome. The guests are people that I have read their books or use their PowerShell Modules to complete automation.</p>
<p>I thought it would be fun to join the podcast as a guest, to share how I use PowerShell with VMware products. VMware has a PowerShell Module, PowerCLI, that I use with almost all automation that I create. With VMware Aria Automation, you can use PowerShell with Workflows, Actions, and have salt execute PowerShell scripts with state files and functions. So I reached out to the hosts of &ldquo;The PowerShell Podcast&rdquo; and showed my interest to be a guest on the Podcast. They thought that my story would make a good episode, so we scheduled a time to record. The experience to record the podcast episode was great. The behind the scenes was funny. The guests talk to each other the same way they do when when recording an episode. They make you feel comfortable as a guest.</p>
<p>Hopefully the vCommunity enjoys this episode. I thought this would be another great way to give back to the community and share some information.</p>
<hr>
<p>The episode I recorded with &ldquo;The PowerShell Podcast&rdquo; was released on 03/20/2023. Here are the links:</p>
<ul>
<li><a href="https://powershellpodcast.podbean.com/e/using-powercli-with-dale-hassinger/" target="_blank" rel="noopener noreffer ">The PowerShell Podcast | &ldquo;Using PowerCLI with Dale Hassinger&rdquo; | on Podbean</a></li>
<li><a href="https://youtu.be/U8QwsnM4EkQ" target="_blank" rel="noopener noreffer ">The PowerShell Podcast | &ldquo;Using PowerCLI with Dale Hassinger&rdquo; | on Youtube</a></li>
</ul>
<hr>
<h6 id="podcast-discussion">Podcast Discussion:</h6>
<ul>
<li>How did I get started with PowerShell</li>
<li>My career path, CNC Programmer to a VMware TAM</li>
<li>The VMUG vCommunity and other User Groups</li>
<li>My favorite PowerShell Module, PowerCLI</li>
<li>Other PowerShell Modules I like to use.</li>
</ul>
<h6 id="link-to-podcast-website">Link to Podcast Website:</h6>
<ul>
<li><a href="https://powershellpodcast.podbean.com/" target="_blank" rel="noopener noreffer ">The PowerShell Podcast on Podbean</a></li>
<li><a href="https://www.youtube.com/playlist?list=PL1mL90yFExsjUS8DRkzfLUcHds7vlxqgM" target="_blank" rel="noopener noreffer ">The PowerShell Podcast on Youtube</a></li>
</ul>
<h6 id="hosts-and-show-on-twitter">Hosts and Show on Twitter:</h6>
<ul>
<li><a href="https://twitter.com/AndrewPlaTech" target="_blank" rel="noopener noreffer ">Andrew Pla</a></li>
<li><a href="https://twitter.com/DevOpsJordan" target="_blank" rel="noopener noreffer ">Jordan Hammond</a></li>
<li><a href="https://twitter.com/PowerShellpod" target="_blank" rel="noopener noreffer ">The PowerShell Podcast</a></li>
</ul>
<p><strong>Enjoy the listen!</strong></p>
<figure><a class="lightgallery" href="/the-powershell-podcast/powercli.jpg" title="/the-powershell-podcast/powercli.jpg" data-thumbnail="/the-powershell-podcast/powercli.jpg" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>Philly VMUG | VMware Aria Automation and Operations</title>
    <link>https://www.vcrocs.info/philly-vmug-03-2023/</link>
    <pubDate>Fri, 10 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/philly-vmug-03-2023/</guid>
    <description><![CDATA[<p><strong>Philly VMUG | VMware Aria Automation and Operations | Recorded Session now available!</strong></p>
<hr>
<h6 id="presentation">Presentation:</h6>
<p>On <strong>Friday, March 31, 2023,</strong> I will be doing at Presentation at the <strong>Philly VMUG</strong>. <a href="https://my.vmug.com/s/community-event?id=a1Y4x000002DEUEEA4" target="_blank" rel="noopener noreffer ">Click Here to register.</a></p>
<p>I am going to demo to the Philly VMUG Community, how to use <strong>VMware Aria Automation</strong> and <strong>VMware Aria Operations</strong> to create, manage and monitor VMs on-prem and in the cloud using the same VMware Aria Suite installation. Come see what working in a multi-cloud environment is like.</p>
<h6 id="demo">Demo:</h6>
<div style="background-color:#c8e6c9 ; Padding:20px; border: 1.5px solid #f2f2f2; color: black;" >
    <ul>
        <li>Create VMs on-prem and in the cloud</li>
        <li>Monitor VMs on-prem and in the cloud</li>
        <li>Use VMware Aria Automation Config to configure and maintain State on-prem and in the cloud.</li>
        <li>Stop the cloud chaos by using a single tool like VMware Aria for creation, management and monitoring.</li>
    </ul>
</div>
<hr>
<h6 id="update">Update:</h6>
<p>Here is the link to watch the Presentation on the Philly VMUG Youtube Channel:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/QWr64shPoBc" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p><figure><a class="lightgallery" href="/philly-vmug-03-2023/aria-automation.jpg" title="/philly-vmug-03-2023/aria-automation.jpg" data-thumbnail="/philly-vmug-03-2023/aria-automation.jpg" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/philly-vmug-03-2023/aria-operations.png" title="/philly-vmug-03-2023/aria-operations.png" data-thumbnail="/philly-vmug-03-2023/aria-operations.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure></p>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware Aria Automation | Working with Windows Server Drives</title>
    <link>https://www.vcrocs.info/vmware-aria-automation-config-windows-server-drives/</link>
    <pubDate>Sat, 18 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-aria-automation-config-windows-server-drives/</guid>
    <description><![CDATA[<p><strong>How to add Windows Server Drives to VMware Aria Automation Cloud Templates.</strong></p>
<hr>
<p>I want to create new Windows Servers in VMware Aria Automation that will be production ready when the server build process is complete. One item when building new Windows Servers is adding drives. I want a way to add additional drives and have the drive be online and formatted properly. Non SQL Windows Servers will have data drives formatted with 4k allocation unit size and Windows SQL Servers will have the data drives formatted with 64k allocation unit size. VMware Aria Automation provides a way to add drives OOTB (Out of the Box) but does not automatically format the drives. That is why I use a Salt state in my example. I use the salt state to bring the new drive online and format. This Blog post shows one way to accomplish these tasks. I always say, with automation there a 100 ways to do the same process. Hopefully this Blog gives you some ideas and options.</p>
<h6 id="use-case">Use Case</h6>
<ul>
<li>Add Cloud Agnostic Volumes to a VMware Aria Automation Cloud Template.</li>
<li>To make New Windows Server Builds consistent I show the drives that are available on the Catalog Item Custom Form. You don&rsquo;t need to add any additional drives. Keep the drive sizes at the default size of &ldquo;0&rdquo; and the drives DO NOT get created.</li>
<li>At the end of the new server build I want the new Windows Server drives to be online and formatted properly. Be production ready!</li>
</ul>
<hr>
<h6 id="steps-to-complete-the-process">Steps to complete the process:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Automated Salt minion installation. See the Blog Post I wrote that completes this step. <a href="https://www.vcrocs.info/vmware-aria-automation-saltstack-config-resource/" target="_blank" rel="noopener noreffer ">Click Here</a></li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Add grains data about the drives to minion when the minion installation completes. See example yaml code.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Run a state file when the minion installation completes that brings the new drive online and formats the drive so that it is ready to use immediately. See example yaml code.</li>
</ul>
<hr>
<h6 id="requirements">Requirements:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> This blog was created using VMware Aria Automation and VMware Aria Automation Config version 8.11.0 (Salt version 3005.1). The process may vary for different versions of VMware Aria Automation and Salt.</li>
</ul>
<hr>
<h6 id="cloud-template--windows-2019-server">Cloud Template | Windows 2019 Server:</h6>
<ul>
<li>There are (3) Cloud Agnostic Volumes on the Cloud Template for my use case. You can have as many as you want for your environment.</li>
<li>The SaltStack Config Resource is added to the Cloud Template.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-01.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-01.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="vmware-aria-automation-cloud-template-file">VMware Aria Automation Cloud Template file:</h6>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-09.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-09.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-09.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>Key elements to review in the yaml code:
<ul>
<li>The yaml code includes grains that saves the drive information. These values are based on input from the Catalog custom form.</li>
<li>the yaml code includes stateFiles to run.</li>
<li>If the drive size input specified is equal to &ldquo;0&rdquo; then the drive count will be &ldquo;0&rdquo;. Drive will NOT be created.</li>
</ul>
</li>
<li><strong>Click to expand yaml code</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">DBH-194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">EDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">E-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">LDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">L-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">TDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">T-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">SQL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Selecting SQL will format all DATA drives with 64k allocation.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;True&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Network</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Virtual_Machine</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">medium</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Network.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">attachedDisks</span><span class="p">:</span><span class="w"> </span><span class="l">${map_to_object(resource.Cloud_Volume_E[*].id + resource.Cloud_Volume_L[*].id + resource.Cloud_Volume_T[*].id , &#34;source&#34;)}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">edrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ldrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.LDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tdrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.TDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">sql</span><span class="p">:</span><span class="w"> </span><span class="l">${input.SQL}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max SCSI Controllers is 4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max Unit per SCSI Controllers is 15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_E</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.EDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_L</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.LDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.LDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_T</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.TDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.TDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_SaltStack_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.SaltStack</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${resource.Virtual_Machine.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">masterId</span><span class="p">:</span><span class="w"> </span><span class="l">saltstack_enterprise_installer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stateFiles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/windows-server-services.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/windows-server-new-drives.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">saltEnvironment</span><span class="p">:</span><span class="w"> </span><span class="l">base</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">additionalMinionParams</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Roles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">database</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Drive_E_Size</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Drive_L_Size</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.LDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Drive_T_Size</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.TDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.SQL}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="service-broker-catalog-item">Service Broker Catalog item:</h6>
<ul>
<li>Show the (3) drives that are available as a Standard Windows Server Build.</li>
<li>To create the drives is an option. Make drive size a &ldquo;0&rdquo; (default Value) and the drive will NOT be created.</li>
<li>Select SQL &ldquo;True&rdquo; will make the data drives be formatted with 64k allocation unit size, &ldquo;false&rdquo; will be 4k allocation unit size.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-03.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-03.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="completed-windows-server-deployment">Completed Windows Server Deployment:</h6>
<ul>
<li>Shows which salt states were used with the deployment.</li>
<li>You can view the grains data that was added to the minion.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-02.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-02.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="vmware-aria-automation-config-state-file">VMware Aria Automation Config State file:</h6>
<ul>
<li>Screen shot shows the state file in SaltTack Config File Server.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-04.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-04.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>The state file is very simple. Tells the minion which PowerShell script to run.</li>
<li><strong>Click to expand yaml code</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">onlinenewdrives</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">cmd.script</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">newdrives</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">source</span><span class="p">:</span><span class="w"> </span><span class="l">salt://scripts/windows-server-new-drives-ps.ps1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">shell</span><span class="p">:</span><span class="w"> </span><span class="l">PowerShell</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="powershell-script-to-online-and-format-new-drives">PowerShell Script to online and format new drives:</h6>
<ul>
<li>The PowerShell file is saved within the VMware Aria Automation Config file server.</li>
</ul>
<p><figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-05.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-05.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure><br>
¬†</p>
<ul>
<li>The PowerShell script gets the grain data and stores it as variables.</li>
<li>If the drive letter capacity is greater than &ldquo;0&rdquo; it will execute.</li>
<li>Script will only run on new drives in offline mode as a safety feature. Will not do anything with existing online drives. If state is run by accident after server is in production nothing will change.</li>
<li>Script uses the grain data SQL to determine how to format the drives. If grains value SQL is equal to &ldquo;True&rdquo; the it will use 64k allocation unit size, otherwise it uses 4k allocation unit size.</li>
<li><strong>Click to expand PowerShell code</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Get minion data ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nv">$eDrive</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_Drive_E_Size</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$eDrive</span> <span class="p">=</span> <span class="nv">$eDrive</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;E-Drive: &#39;</span> <span class="p">+</span> <span class="nv">$eDrive</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$lDrive</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_Drive_L_Size</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$lDrive</span> <span class="p">=</span> <span class="nv">$lDrive</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;L-Drive: &#39;</span> <span class="p">+</span><span class="nv">$lDrive</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$tDrive</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_Drive_T_Size</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$tDrive</span> <span class="p">=</span> <span class="nv">$tDrive</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;T-Drive: &#39;</span> <span class="p">+</span> <span class="nv">$tDrive</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$SQL</span> <span class="p">=</span> <span class="nb">salt-call</span> <span class="n">grains</span><span class="p">.</span><span class="py">get</span> <span class="n">vCROCS_SQL</span> <span class="p">-</span><span class="n">-output</span><span class="p">=</span><span class="n">json</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$SQL</span> <span class="p">=</span> <span class="nv">$SQL</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;SQL: &#39;</span> <span class="p">+</span> <span class="nv">$SQL</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Function to bring drive online and format ] -----</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span><span class="w"> </span><span class="nb">set-driveOnline</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">param</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="nb">parameter</span><span class="p">(</span><span class="na">mandatory</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">string</span><span class="p">]</span><span class="nv">$driveLetter</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="no">int</span><span class="p">]</span><span class="nv">$diskNumber</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$diskOnline</span> <span class="p">=</span> <span class="nb">Get-Disk</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Number</span> <span class="o">-EQ</span> <span class="nv">$diskNumber</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$diskOnline</span><span class="p">.</span><span class="py">OperationalStatus</span> <span class="o">-eq</span> <span class="s1">&#39;offline&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Get-Disk</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="n">Number</span> <span class="o">-EQ</span> <span class="nv">$diskNumber</span> <span class="p">|</span> <span class="nb">Set-Disk</span> <span class="n">-IsOffline</span> <span class="vm">$False</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$disksize</span> <span class="p">=</span> <span class="nb">Get-Disk</span> <span class="n">-Number</span> <span class="nv">$diskNumber</span> <span class="p">|</span> <span class="nb">Select-Object</span> <span class="n">size</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$disksize</span> <span class="p">=</span> <span class="nv">$disksize</span><span class="p">.</span><span class="py">size</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$disksize</span> <span class="p">=</span> <span class="nv">$disksize</span><span class="p">/</span><span class="mf">1073741824</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Disk &#39;</span> <span class="p">+</span> <span class="nv">$diskNumber</span> <span class="p">+</span> <span class="s1">&#39; Size: &#39;</span> <span class="p">+</span> <span class="nv">$disksize</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$disksize</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Initialize-Disk</span> <span class="nv">$diskNumber</span> <span class="n">-PartitionStyle</span> <span class="n">GPT</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="c"># End if</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="nb">New-Partition</span> <span class="n">-DiskNumber</span> <span class="nv">$diskNumber</span> <span class="n">-UseMaximumSize</span> <span class="n">-DriveLetter</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span><span class="p">(</span><span class="nv">$SQL</span> <span class="o">-eq</span> <span class="s1">&#39;True&#39;</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Format-Volume</span> <span class="n">-DriveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-FileSystem</span> <span class="n">NTFS</span> <span class="n">-NewFileSystemLabel</span> <span class="s2">&#34;SQL Data&#34;</span> <span class="n">-AllocationUnitSize</span> <span class="mf">65536</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Format-Volume</span> <span class="n">-DriveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-FileSystem</span> <span class="n">NTFS</span> <span class="n">-NewFileSystemLabel</span> <span class="s2">&#34;APP Data&#34;</span> <span class="n">-AllocationUnitSize</span> <span class="mf">4096</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="nv">$global:diskNumber</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Disk Number: &#39;</span> <span class="p">+</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># end if offline</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end function</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$global:diskNumber</span> <span class="p">=</span> <span class="mf">1</span>
</span></span><span class="line"><span class="cl"><span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Disk Number: &#39;</span> <span class="p">+</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$eDrive</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$driveLetter</span> <span class="p">=</span> <span class="s1">&#39;E&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Drive Letter: &#39;</span> <span class="p">+</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># run function</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set-driveOnline</span> <span class="n">-driveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-diskNumber</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$lDrive</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$driveLetter</span> <span class="p">=</span> <span class="s1">&#39;L&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Drive Letter: &#39;</span> <span class="p">+</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># run function</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set-driveOnline</span> <span class="n">-driveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-diskNumber</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$tDrive</span> <span class="o">-gt</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$driveLetter</span> <span class="p">=</span> <span class="s1">&#39;T&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Drive Letter: &#39;</span> <span class="p">+</span> <span class="nv">$driveLetter</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># run function</span>
</span></span><span class="line"><span class="cl">    <span class="nb">set-driveOnline</span> <span class="n">-driveLetter</span> <span class="nv">$driveLetter</span> <span class="n">-diskNumber</span> <span class="nv">$global:diskNumber</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end if</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<ul>
<li>This screen shot shows how the drives status will be in the Windows Server Disk Management when the New Server Build is Complete. No additional steps are required to start using the drives.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-06.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-06.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>This screen shot shows where the grains file is saved.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-07.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-07.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-07.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>This screen shot shows the grains file contents.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-config-windows-server-drives/windows-drives-08.png" title="/vmware-aria-automation-config-windows-server-drives/windows-drives-08.png" data-thumbnail="/vmware-aria-automation-config-windows-server-drives/windows-drives-08.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>Saving information as grains data is a great way to save input data when creating new servers.</li>
<li>The combination of having Salt State files run PowerShell scripts is very powerful when creating new Windows Servers with VMware Aria Automation.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>When I write about <b>VMware Aria Automation</b>, I always say there are many ways to accomplish the same task.  <b>VMware Aria Automation Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your VMware Aria Suite Advanced/Enterprise license. If you own the VMware Aria Suite, you own VMware Aria Automation Config.</p>
<ul>
<li>VMware Aria Automation = vRealize Automation</li>
<li>VMware Aria Automation Config = SaltStack Config</li>
</ul></div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>vExpert 2023 | vExpert Cloud Management</title>
    <link>https://www.vcrocs.info/vexpert-2023/</link>
    <pubDate>Fri, 17 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vexpert-2023/</guid>
    <description><![CDATA[<p>VMware vExpert 2020 - Present | VMware vExpert Cloud Management 2021 - Present</p>
<hr>
<h5 id="vmware-vexpert-2020---present--vmware-vexpert-cloud-management-2021---present">VMware vExpert 2020 - Present | VMware vExpert Cloud Management 2021 - Present</h5>
<p><a class="lightgallery" href="/vexpert-2023/vexpert-2023.png" title="/vexpert-2023/vexpert-2023.png" data-thumbnail="/vexpert-2023/vexpert-2023.png">
        
    </a><br>
<a class="lightgallery" href="/vexpert-2023/vexpert-2023-4-stars.png" title="/vexpert-2023/vexpert-2023-4-stars.png" data-thumbnail="/vexpert-2023/vexpert-2023-4-stars.png">
        
    </a><br>
<a class="lightgallery" href="/vexpert-2023/vexpert-cloud-management.png" title="/vexpert-2023/vexpert-cloud-management.png" data-thumbnail="/vexpert-2023/vexpert-cloud-management.png">
        
    </a></p>
<hr>
<p>I am very proud to be part of the VMware vExpert program.  This is the fourth year that I was accepted into the program. One part of the vExpert program that I think is great is that the program recognizes people for sharing their knowledge and &ldquo;Giving Back&rdquo;. A person selected into the vExpert programs is someone that likes to share, wants to make themselves and everyone around them smarter.</p>
<p>One of my goals as an VMware employee is to be able to give more back to the vCommunity than I was able to as an end user of the VMware Products.</p>
<p>2023 is also the 3rd year that I was accepted into the VMware vExpert Cloud Management subprogram.</p>
<hr>
<h6 id="what-is-the-vmware-vexpert-program">What is the VMware vExpert Program?</h6>
<h6 id="program-overview">Program Overview</h6>
<p>The VMware vExpert program is VMware&rsquo;s global evangelism and advocacy program. The program is designed to put VMware&rsquo;s marketing resources towards your advocacy efforts. Promotion of your articles, exposure at our global events, co-op advertising, traffic analysis, and early access to beta programs and VMware&rsquo;s roadmap. The awards are for individuals, not companies, and last for one year. Employees of both customers and partners can receive the awards. In the application, we consider various community activities from the previous year as well as the current year&rsquo;s (only for 2nd half applications) activities in determining who gets awards. We look to see that not only were you active but are still active in the path you chose to apply for.</p>
<h6 id="criteria">Criteria</h6>
<p>If you are interested in becoming a vExpert the criteria is simple. We are looking for IT Professionals who are sharing their VMware knowledge and contributing that back to the community. The term &ldquo;giving back&rdquo; is defined as going above and beyond your day job. There are several ways to share your knowledge and engage with the community. Some of those activities are blogging, book authoring, magazine articles, CloudCred task writing, active in Facebook groups, forum (VMTN as well as other non VMware) platforms, public speaking, VMUG leadership, videos and so on.</p>
<hr>
<h6 id="thanks">Thanks:</h6>
<p>I have worked with a great group of people at VMware, past and present. I would like to thank everyone that has helped me on my journey called a career.</p>
<hr>
<p>Email: <a href="mailto:Dale.Hassinger@vCrocs.info" rel="">Dale.Hassinger@vCrocs.info</a><br>
Location: Dillsburg, PA</p>
<blockquote>
<p>&ldquo;9 - 5 pays the bills, 5 - 10 advances your career&rdquo;</p>
</blockquote>]]></description>
</item>
<item>
    <title>VMware Aria Automation and SaltStack Config Resource</title>
    <link>https://www.vcrocs.info/vmware-aria-automation-saltstack-config-resource/</link>
    <pubDate>Sat, 11 Feb 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-aria-automation-saltstack-config-resource/</guid>
    <description><![CDATA[<p><strong>How to start using the SaltStack Config Resource with VMware Aria Automation Cloud Templates.</strong></p>
<hr>
<h6 id="use-case">Use Case</h6>
<p>VMware Aria Automation Config has been the Configuration Management tool that I like to use with Servers, Windows and Linux. The first process to use salt with new servers is to install the salt minion, which is an agent that needs installed on the Server. There are many different ways to install the salt minion agent and what I wanted to show in this blog post is how to use the SaltStack Config Resource with the VMware Automation Cloud Template. When creating a Cloud Template in VMware Aria Automation, one of the options is to add the SaltStack Config Resource.</p>
<hr>
<p>What the SaltStack Config Resource provides:</p>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Automated Salt minion installation</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Ability to add grains data to minion when the minion installation completes. See example yaml code.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> The minion key is auto-accepted in SaltStack Config</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> If you delete the VM deployment in VMware Aria Automation, the minion key will be automatically removed from VMware Aria Automation Config. Built-in decommission.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Ability to run a state file when the minion installation completes. See example yaml code.</li>
</ul>
<hr>
<p>Requirements:</p>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> This blog was created using VMware Aria Automation version 8.11.0. The process may vary for different version of VMware Aria Automation.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> TCP Port 445 needs to be open between VMware Aria Automation Config server and the new Server that the minion is being installed on.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Check the VMware Aria Automation Config server. The OS that you are using for the new server must have an agent file in the /etc/salt/cloud.deploy.d folder.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Check the VMware Aria Automation Config server. The version of the agent files in the /etc/salt/cloud.deploy.d folder must match the version of the salt master.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> The script that creates the grains file when using the SaltStack Config Resource and VMware Aria cloud templates with Windows Servers needs to be manually replaced on the VMware Aria Automation Config Server (salt master). Future VMware Aria Automation Config installs with LCM (VMware Aria Suite LifeCycle) will include this fix. The script creates the grains file in the incorrect folder.
<ul>
<li>Location of script on salt master:¬†/lib64/python3.7/site-packages/salt/utils/cloud.py</li>
<li>Make a copy of the original cloud.py before replacing with updated version.</li>
<li>Where to get new script: <a href="https://github.com/saltstack/salt/blob/master/salt/utils/cloud.py" target="_blank" rel="noopener noreffer ">https://github.com/saltstack/salt/blob/master/salt/utils/cloud.py</a></li>
<li>The grains file will be created in &ldquo;C:\ProgramData\Salt Project\Salt\conf&rdquo; after the script is updated.</li>
<li><strong>Update:</strong> When I installed VMware Aria Automation Config 8.12, 8.13 and 8.14 I still needed to update the cloud.py file for the grains to be created properly.</li>
</ul>
</li>
</ul>
<hr>
<h6 id="current-os-support">Current OS support:</h6>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-03.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-03.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-03.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<p>Any OS not listed is currently not supported at this time.</p>
<hr>
<h6 id="cloud-template--windows-2019-server">Cloud Template | Windows 2019 Server:</h6>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-02.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-02.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-02.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>Windows 2019 Server cloud template yaml code:</li>
<li>You <strong>MUST</strong> add the remoteAccess code in the Virtual_Machine section for minion installation.</li>
<li>grains data is added in the additionalMinionParams section of the yaml code.</li>
<li>When the minion agent installation is complete, you will see the new minion listed in the targets automatically. You do not need to accept the minion key.</li>
<li>click to expand yaml code</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span><span class="lnt">97
</span><span class="lnt">98
</span><span class="lnt">99
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">FEformatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">DBH-194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.194</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">EDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">E-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">FDrive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">integer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">F-Drive</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Enter 0 to disable the disk and not create</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">SQL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Selecting SQL will format all DATA drives with 64k allocation.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;True&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="s1">&#39;False&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Network</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Virtual_Machine</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">W2K19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">medium</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Network.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">attachedDisks</span><span class="p">:</span><span class="w"> </span><span class="l">${map_to_object(resource.Cloud_Volume_E[*].id + resource.Cloud_Volume_F[*].id , &#34;source&#34;)}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">edrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">fdrivesize</span><span class="p">:</span><span class="w"> </span><span class="l">${input.FDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">sql</span><span class="p">:</span><span class="w"> </span><span class="l">${input.SQL}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max SCSI Controllers is 4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># - VMware Max Unit per SCSI Controllers is 15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_E</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.EDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Volume_F</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Volume</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">capacityGb</span><span class="p">:</span><span class="w"> </span><span class="l">${input.FDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">count</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;${input.FDrive == 0 ? 0 : 1 }&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">SCSIController</span><span class="p">:</span><span class="w"> </span><span class="l">SCSI_Controller_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unitNumber</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">provisioningType</span><span class="p">:</span><span class="w"> </span><span class="l">thin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_SaltStack_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.SaltStack</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${resource.Virtual_Machine.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">masterId</span><span class="p">:</span><span class="w"> </span><span class="l">saltstack_enterprise_installer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stateFiles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/windows.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">saltEnvironment</span><span class="p">:</span><span class="w"> </span><span class="l">base</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># - This is how you add grains data to the minion</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">additionalMinionParams</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_Roles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">webserver</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">database</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_E_Drive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.EDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_F_Drive</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.FDrive}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">vCROCS_SQL</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">${input.SQL}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="cloud-template--ubuntu-20-server">Cloud Template | Ubuntu 20 Server:</h6>
<ul>
<li>Ubuntu 20 Server cloud template yaml code:</li>
<li>You <strong>MUST</strong> add the remoteAccess code in the Virtual_Machine section for minion installation.</li>
<li>grains data is added in the additionalMinionParams section of the yaml code.</li>
<li>When the minion agent installation is complete, you will see the new minion listed in the targets automatically. You do not need to accept the minion key.</li>
<li>click to expand yaml code</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">DBH-197</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.197</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Network_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Machine_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu-20</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">small</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">remoteAccess</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">authentication</span><span class="p">:</span><span class="w"> </span><span class="l">usernamePassword</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">administrator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">env:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_Network_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_SaltStack_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.SaltStack</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">hosts</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${resource.Cloud_Machine_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">masterId</span><span class="p">:</span><span class="w"> </span><span class="l">saltstack_enterprise_installer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">stateFiles</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">/vcrocs/ubuntu.sls</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">saltEnvironment</span><span class="p">:</span><span class="w"> </span><span class="l">base</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">additionalMinionParams</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">grains</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">roles</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="l">webserver</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<ul>
<li>This screen shot shows how to get the &ldquo;masterId&rdquo; to use in the Cloud Template yaml code.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-05.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-05.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-05.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>This screen shot shows how to see the SaltMaster version.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-06.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-06.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-06.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="completed-deployment">Completed Deployment</h6>
<ul>
<li>This shows what the deployment looks like after it is completed.</li>
<li>Grain data is shown within the Salt Configuration section.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-01.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-01.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-01.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="custom-form-to-create-the-windows-server-deployment">Custom Form to create the Windows Server Deployment</h6>
<ul>
<li>Example of a Custom Form for Windows Server Builds</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-saltstack-config-resource/ssc-04.png" title="/vmware-aria-automation-saltstack-config-resource/ssc-04.png" data-thumbnail="/vmware-aria-automation-saltstack-config-resource/ssc-04.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>See &ldquo;Requirements&rdquo; listed above</li>
<li>See &ldquo;What the SaltStack Config Resource provides&rdquo; above</li>
<li>If you need to update the minion agent files on the salt master server, in folder /etc/salt/cloud.deploy.d, you will have to have your VMware account team download the files for you or open an SR. The files are not public facing.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="helpful-links">Helpful Links</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>VMware Aria Automation | Ansible Links I found to be very helpful:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><a href="https://docs.vmware.com/en/vRealize-Automation/8.11/Using-and-Managing-Cloud-Assembly/GUID-5555BD8D-506C-40C9-8CE9-138297FB8F30.html#GUID-5555BD8D-506C-40C9-8CE9-138297FB8F30" target="_blank" rel="noopener noreffer ">Configure a SaltStack Config integration in vRealize Automation</a></li>
<li><a href="https://docs.vmware.com/en/vRealize-Automation/8.11/Using-and-Managing-Cloud-Assembly/GUID-70F29C74-848F-41F2-91B1-8E96A918DD93.html" target="_blank" rel="noopener noreffer ">Add the SaltStack Config resource to the cloud template</a></li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>When I write about <b>VMware Aria Automation</b>, I always say there are many ways to accomplish the same task.  <b>VMware Aria Automation Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your VMware Aria Suite Advanced/Enterprise license. If you own the VMware Aria Suite, you own VMware Aria Automation Config.</p>
<ul>
<li>VMware Aria Automation = vRealize Automation</li>
<li>VMware Aria Automation Config = SaltStack Config</li>
</ul></div>
        </div>
    </div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Use vCenter TAGs to maintain VM Storage Placement</title>
    <link>https://www.vcrocs.info/use-vcenter-tags-to-maintain-vm-storage-placement/</link>
    <pubDate>Fri, 27 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/use-vcenter-tags-to-maintain-vm-storage-placement/</guid>
    <description><![CDATA[<p><strong>Use vCenter TAGs to maintain VM Storage Placement.</strong></p>
<hr>
<p>A question was recently asked, How can we specify and maintain which DataStore Cluster a VM should use within the VMware vCenter UI? I like using vCenter TAGs for specifying details about VMs, so I thought I would use VMware vCenter TAGs to specify which DataStore Cluster to place a VM.</p>
<p>I looked at using a Configuration management tool like salt but one of the requirements was to make it easy for the VMware Admin to specify and maintain VM DataStore placement within the VMware vCenter UI.</p>
<p>I have included sample code that will:</p>
<ul>
<li>Create a VMware vCenter TAG Category</li>
<li>Create a VMware vCenter TAG based on DataStore Cluster Name</li>
<li>Add the DataStore Cluster VMware vCenter TAG to all VMs within a DataStore cluster</li>
<li>Verify that each VM has only (1) vCenter DataStore Cluster TAG</li>
<li>Verify that the VM is in the correct DataStore Cluster. Do a VM move if it is not in correct DataStore Cluster.</li>
</ul>
<hr>
<h6 id="use-case">Use Case:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Have a way to specify which DataStore Cluster the VM will use within VMware vCenter UI.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Have a process in place that will maintain which DataStore Cluster will be used with each VM within VMware vCenter.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> If a user moves a VM to a DataStore Cluster that it shouldn&rsquo;t be located, move it back to the correct Datastore Cluster to match the assigned VMware vCenter TAG.</li>
</ul>
<h6 id="solution">Solution:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Create a VMware vCenter TAG for every DataStore Cluster within VMware vCenter.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Assign a VMware vCenter TAG to every VM within vCenter, to specify which DataStore Cluster it should be located.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Schedule a VMware Aria Automation Orchestrator Workflow to run everyday to make sure VM DataStore Cluster placement matches VMware vCenter TAG assigned.</li>
</ul>
<hr>
<p><strong>Steps to connect to VMware vCenter:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Script created by: Dale Hassinger</span>
</span></span><span class="line"><span class="cl"><span class="c"># Script provided for Demo Use Only</span>
</span></span><span class="line"><span class="cl"><span class="c"># Date: 2023-01-27</span>
</span></span><span class="line"><span class="cl"><span class="c"># Purpose: Create and Assign vCenter TAGs to be used for VM Storage placement</span>
</span></span><span class="line"><span class="cl"><span class="c"># Notes: VMs with ISOs attached and Snap Shots may be listed in more than 1 Datastore Cluster</span>
</span></span><span class="line"><span class="cl"><span class="c"># In my lab I made sure there were no SNAPs or ISOs attached before applying TAGs with Automation</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Connect to vCenter ] -----</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="n">-Server</span> <span class="s1">&#39;vCenter.vCROCS.info&#39;</span> <span class="n">-User</span> <span class="s1">&#39;administrator@vCROCS.info&#39;</span> <span class="n">-Password</span> <span class="s1">&#39;HackMe1!&#39;</span> <span class="n">-Force</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="code-to-create-a-vmware-vcenter-tag-category">Code to create a VMware vCenter TAG Category:</h6>
<ul>
<li>For any custom VMware vCenter TAGs that I create to use with Automation, I use a TAG category &ldquo;Automation&rdquo;.</li>
<li>You don&rsquo;t need to do this step. You could use a category that already exists within VMware vCenter.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Start Create vCenter TAG Category ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># New TAG Category Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$newCategory</span> <span class="p">=</span> <span class="s1">&#39;Automation&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Get all existing vCenter TAG Categories</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allCategory</span> <span class="p">=</span> <span class="nb">Get-TagCategory</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Check to see if category already exists</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allCategory</span> <span class="p">=</span> <span class="nv">$allCategory</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$categoryExists</span> <span class="p">=</span> <span class="nv">$allCategory</span><span class="p">.</span><span class="py">Contains</span><span class="p">(</span><span class="nv">$newCategory</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># If TAG category already exists it will not try to re-create</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$categoryExists</span> <span class="o">-eq</span> <span class="vm">$true</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Output</span> <span class="s1">&#39;Category Already exists within vCenter!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End if</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Creating New Category within vCenter: &#39;</span> <span class="p">+</span> <span class="nv">$newCategory</span>  
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Create New TAG Category in vCenter</span>
</span></span><span class="line"><span class="cl">  <span class="nb">New-TagCategory</span> <span class="n">-Name</span> <span class="nv">$newCategory</span> <span class="n">-Cardinality</span> <span class="n">Multiple</span> <span class="n">-Description</span> <span class="s1">&#39;Used with Automation&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Create vCenter TAG Category ] -----</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="code-to-create-a-vmware-vcenter-tag-for-every-datastore-cluster">Code to create a VMware vCenter TAG for every Datastore Cluster:</h6>
<ul>
<li>The code gets all DataStore Cluster Names and creates a VMware vCenter TAG to match DataStore Cluster Name. I prefix the DataStore Cluster Name with &ldquo;TAG-VM-&rdquo;.</li>
<li>The code does check to see if the VMware vCenter TAG already exists. If the vCenter TAG does exist, it does not try and create a new vCenter TAG.</li>
<li>include code to connect to vCenter</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Start Create vCenter TAG for every Datastore Cluster ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># New TAG Category Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$newCategory</span> <span class="p">=</span> <span class="s1">&#39;Automation&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$allDatastoreClusters</span> <span class="p">=</span> <span class="nb">Get-DatastoreCluster</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allDatastoreClusters</span> <span class="p">=</span> <span class="nv">$allDatastoreClusters</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$allTAGs</span> <span class="p">=</span> <span class="nb">Get-Tag</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allTAGs</span> <span class="p">=</span> <span class="nv">$allTAGs</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$newTAGs</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Create new TAG Names</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$newTAG</span> <span class="k">in</span> <span class="nv">$allDatastoreClusters</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$newTAGname</span> <span class="p">=</span> <span class="s1">&#39;TAG-VM-&#39;</span> <span class="p">+</span> <span class="nv">$newTAG</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;New TAG Name: &#39;</span> <span class="p">+</span> <span class="nv">$newTAGname</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$newTAGs</span><span class="p">+=</span> <span class="nv">$newTAGname</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Add TAGs to vCenter if they don&#39;t already exist</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$newTAG</span> <span class="k">in</span> <span class="nv">$newTAGs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="c"># Check to see if category already exists</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$TagExists</span> <span class="p">=</span> <span class="nv">$allTAGs</span><span class="p">.</span><span class="py">Contains</span><span class="p">(</span><span class="nv">$newTAG</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="nv">$TagExists</span> <span class="o">-eq</span> <span class="vm">$true</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Tag &#39;</span> <span class="p">+</span> <span class="nv">$newTAG</span> <span class="p">+</span> <span class="s1">&#39; already Exists: &#39;</span> <span class="p">+</span> <span class="nv">$TagExists</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">  <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Tag &#39;</span> <span class="p">+</span> <span class="nv">$newTAG</span> <span class="p">+</span> <span class="s1">&#39; Exists: &#39;</span> <span class="p">+</span> <span class="nv">$TagExists</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="c"># Create New TAG</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Get-TagCategory</span> <span class="n">-Name</span> <span class="nv">$newCategory</span> <span class="p">|</span> <span class="nb">New-Tag</span> <span class="n">-Name</span> <span class="nv">$newTAG</span> <span class="n">-Description</span> <span class="s1">&#39;VM Storage TAG used with Automation&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="c"># end else</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Create vCenter TAG for every Datastore Cluster ] -----</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="code-to-add-datastore-cluster-vcenter-tag-to-vms-for-a-specific-datastore-cluster">Code to add DataStore Cluster vCenter TAG to VMs for a specific Datastore Cluster:</h6>
<ul>
<li>You specify DataStore Cluster Name. The code with get all VM names and assign the correct VMware vCenter TAG. It will check to see if TAG is already assigned to the VM.</li>
<li>include code to connect to vCenter</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Start add Storage vCenter TAG to VMs for a specific DataStore Cluster ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$datastoreCluster</span> <span class="p">=</span> <span class="s1">&#39;DS-CLSTR-03&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$datastoreCluster = &#39;DS-CLSTR-04&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$TAGname</span> <span class="p">=</span> <span class="s1">&#39;TAG-VM-&#39;</span> <span class="p">+</span> <span class="nv">$datastoreCluster</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$allVMs</span> <span class="p">=</span> <span class="nb">Get-DatastoreCluster</span> <span class="n">-Name</span> <span class="nv">$datastoreCluster</span> <span class="p">|</span> <span class="nb">Get-VM</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allVMs</span> <span class="p">=</span> <span class="nv">$allVMs</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$vm</span> <span class="k">in</span> <span class="nv">$allVMs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="c"># Get existing TAGs assigned to VM</span>
</span></span><span class="line"><span class="cl">  <span class="c">#$assignedTAGs = &#39;&#39;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$assignedTAGs</span> <span class="p">=</span> <span class="nb">Get-VM</span> <span class="nv">$vm</span> <span class="p">|</span> <span class="nb">Get-TagAssignment</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$assignedTAGs</span> <span class="p">=</span> <span class="nv">$assignedTAGs</span><span class="p">.</span><span class="py">Tag</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(!</span><span class="nv">$assignedTAGs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;VM: &#39;</span> <span class="p">+</span> <span class="nv">$vm</span> <span class="p">+</span> <span class="s1">&#39; has no tags&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    <span class="nb">New-TagAssignment</span> <span class="n">-Tag</span> <span class="nv">$TAGname</span> <span class="n">-Entity</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">  <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$TagExists</span> <span class="p">=</span> <span class="nv">$assignedTAGs</span><span class="p">.</span><span class="py">Contains</span><span class="p">(</span><span class="nv">$TAGname</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="k">if</span><span class="p">(</span><span class="nv">$TagExists</span> <span class="o">-eq</span> <span class="vm">$false</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="nb">New-TagAssignment</span> <span class="n">-Tag</span> <span class="nv">$TAGname</span> <span class="n">-Entity</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Assigned TAG: &#39;</span> <span class="p">+</span> <span class="nv">$TAGname</span> <span class="p">+</span> <span class="s1">&#39; to VM: &#39;</span> <span class="p">+</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl">      <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;TAG: &#39;</span> <span class="p">+</span> <span class="nv">$TAGname</span> <span class="p">+</span> <span class="s1">&#39; already assigned to VM: &#39;</span> <span class="p">+</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl">      <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="c"># end else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End add Storage vCenter TAG to VMs for a specific DataStore Cluster ] -----</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="code-to-verify-that-each-vm-only-has-1-datastore-cluster-tag-assigned">Code to Verify that each VM only has (1) DataStore Cluster TAG assigned:</h6>
<ul>
<li>The code looks to see if one than (1) DataStore Cluster TAG is assigned.</li>
<li>If a VM has an iso mounted from a 2nd Datastore that could make (2) TAGs get assigned.</li>
<li>If a VM was located on a DataStore Cluster and had a SNAP Shot and was moved to a 2nd DataStore Cluster, it could get (2) DataStore Cluster TAGs assigned until the SNAP is Deleted.</li>
<li>For this use case, I ONLY want (1) Datastore Cluster to be used per VM.</li>
<li>include code to connect to vCenter</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Start Verify that VM has only (1) DS Cluster TAG ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$allVMs</span> <span class="p">=</span> <span class="nb">Get-VM</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allVMs</span> <span class="p">=</span> <span class="nv">$allVMs</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allVMs</span> <span class="p">=</span> <span class="nv">$allvms</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="s1">&#39;Starting TAG count check...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$vm</span> <span class="k">in</span> <span class="nv">$allVMs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$assignedTAGs</span> <span class="p">=</span> <span class="nb">Get-VM</span> <span class="nv">$vm</span> <span class="p">|</span> <span class="nb">Get-TagAssignment</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$assignedTAGs</span> <span class="p">=</span> <span class="nv">$assignedTAGs</span><span class="p">.</span><span class="py">Tag</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$assignedTAGs</span> <span class="p">=</span> <span class="nv">$assignedTAGs</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span> <span class="o">-like</span> <span class="s1">&#39;TAG-VM-DS-CLSTR-*&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nv">$tagCount</span> <span class="p">=</span> <span class="nv">$assignedTAGs</span><span class="p">.</span><span class="py">count</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">if</span><span class="p">(</span><span class="nv">$tagCount</span> <span class="o">-gt</span> <span class="mf">1</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;VM: &#39;</span> <span class="p">+</span> <span class="nv">$vm</span> <span class="p">+</span> <span class="s1">&#39; has more than 1 DS Cluter Tag Assigned!&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Write-Output</span> <span class="s1">&#39;TAG count check complete&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Verify that VM has only (1) DS Cluster TAG ] -----</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="code-to-verify-that-each-vm-is-located-in-the-correct-datastore-cluster-based-in-vcenter-tag">Code to verify that each VM is located in the correct DataStore Cluster based in vCenter TAG:</h6>
<ul>
<li>The code gets all the DataStore Cluster VMware vCenter TAGs.</li>
<li>The code then gets all VMs assigned a TAG and verifies that the VM is located in the correct DataStore Cluster.</li>
<li>If the VM is NOT located in the DataStore Cluster that matches the vCenter TAG, it moves the VM to the correct DataStore Cluster.</li>
<li>include code to connect to vCenter</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># ----- [ Start Verify that VM is in correct DS Cluster based in TAG ] -----</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$newCategory</span> <span class="p">=</span> <span class="s1">&#39;Automation&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$allTAGs</span> <span class="p">=</span> <span class="nb">Get-Tag</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allTAGs</span> <span class="p">=</span> <span class="nv">$allTAGs</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$allTAGs</span> <span class="p">=</span> <span class="nv">$allTAGs</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span> <span class="o">-like</span> <span class="s1">&#39;TAG-VM-DS-CLSTR-*&#39;</span><span class="p">}</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$tag</span> <span class="k">in</span> <span class="nv">$allTAGs</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;--- TAG: &#39;</span> <span class="p">+</span> <span class="nv">$tag</span>
</span></span><span class="line"><span class="cl">  <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nv">$dsCluster</span> <span class="p">=</span> <span class="nv">$tag</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$dsCluster</span> <span class="p">=</span> <span class="nv">$dsCluster</span><span class="p">.</span><span class="py">replace</span><span class="p">(</span><span class="s1">&#39;TAG-VM-&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nv">$tagfilter</span> <span class="p">=</span> <span class="nv">$newCategory</span> <span class="p">+</span> <span class="s1">&#39;/&#39;</span> <span class="p">+</span> <span class="nv">$tag</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$vmList</span> <span class="p">=</span> <span class="nb">Get-TagAssignment</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="py">Tag</span> <span class="o">-like</span> <span class="nv">$tagfilter</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nv">$vmList</span> <span class="p">=</span> <span class="nv">$vmList</span><span class="p">.</span><span class="py">Entity</span><span class="p">.</span><span class="py">Name</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">foreach</span><span class="p">(</span><span class="nv">$vm</span> <span class="k">in</span> <span class="nv">$vmlist</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$currentDSCluster</span> <span class="p">=</span> <span class="nb">Get-VM</span> <span class="nv">$vm</span> <span class="p">|</span> <span class="nb">Get-DatastoreCluster</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$currentDSCluster</span> <span class="p">=</span> <span class="nv">$currentDSCluster</span><span class="p">.</span><span class="py">Name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">if</span><span class="p">(</span><span class="nv">$currentDSCluster</span> <span class="o">-eq</span> <span class="nv">$dsCluster</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">      <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;Already in DS Cluster: &#39;</span> <span class="p">+</span> <span class="nv">$dsCluster</span> <span class="p">+</span> <span class="s1">&#39; - VM: &#39;</span> <span class="p">+</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl">      <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># end if</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nv">$output</span> <span class="p">=</span> <span class="s1">&#39;*Moving to DS Cluster: &#39;</span> <span class="p">+</span> <span class="nv">$dsCluster</span> <span class="p">+</span> <span class="s1">&#39; - VM: &#39;</span> <span class="p">+</span> <span class="nv">$vm</span>
</span></span><span class="line"><span class="cl">      <span class="nb">Write-Output</span> <span class="nv">$output</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      <span class="nb">Move-VM</span> <span class="n">-VM</span> <span class="nv">$vm</span> <span class="n">-Datastore</span> <span class="nv">$dsCluster</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="p">}</span> <span class="c"># End foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># end foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Verify that VM is in correct DS Cluster based in TAG ] -----</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="code-to-disconnect-cd-from-all-vms">Code to Disconnect CD from all VMs:</h6>
<ul>
<li>include code to connect to vCenter</li>
<li>Before I assigned the vCenter TAGs to the VMs using a script to automate the process, I made sure that none of the VMs had a SNAP or a iso attached. Here is the code to disconnect all iso images mounted to a VM.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-PowerShell" data-lang="PowerShell"><span class="line"><span class="cl"><span class="c"># Code Disconnect CD from all VMs</span>
</span></span><span class="line"><span class="cl"><span class="nb">Get-VM</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="py">PowerState</span> <span class="err">‚Äì</span><span class="n">eq</span> <span class="err">‚Äú</span><span class="n">PoweredOn</span><span class="err">‚Äù</span><span class="p">}</span> <span class="p">|</span> <span class="nb">Get-CDDrive</span> <span class="p">|</span> <span class="nb">Set-CDDrive</span> <span class="n">-NoMedia</span> <span class="n">-Confirm:</span><span class="vm">$False</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>You can use this code to maintain VM placement, but you could also use this code to move VMs to new DatStore Clusters. Assign a new TAG to the VM and the process will do a Storage vMotion for you. Great way to move VMs if you get a new SAN.</li>
<li>I located the VM based on DataStore Cluster. You could change code slightly and specify a specific DataStore.</li>
<li>If there is a member on your VMware Team that changes which DataStore Cluster a VM should be located for no reason, you could also fix the issue by giving that Team Member 30 days in the electric chair so they don&rsquo;t do it again. :)</li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write about <b>vRealize Aria Automation</b>,  I always say there are many ways to accomplish the same task.  This article is just one way that you could accomplish this task.  I am showing what I felt was a good way to complete the use case but every organization/environment will be different. There is no right or wrong way to complete automation as long as it completes successfully and consistently.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>VMware Aria Automation and Ansible Integration</title>
    <link>https://www.vcrocs.info/vmware-aria-automation-ansible-integration/</link>
    <pubDate>Fri, 30 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-aria-automation-ansible-integration/</guid>
    <description><![CDATA[<p>How to setup and configure your VMware Aria Automation environment to work with Ansible.</p>
<hr>
<h6 id="use-case">Use Case</h6>
<p>I was recently asked how the VMware Aria Automation | Ansible Integration worked. I never used Ansible before so I thought this would be great time to learn Ansible and demo the integration with VMware Aria Automation. If you look at some of my previous blog posts I wrote about SaltStack Config a lot. I thought this would be a good time for myself to learn Ansible and compare the two products.</p>
<p>When I started reading about the VMware Aria Automation and Ansible Integration, I didn&rsquo;t find a single blog post or article that covered everything from installing Ansible to creating a new Server Build in Aria Automation. I am going to document all the steps that it took for me to do a complete Aria Automation | Ansible integration. I hope that someone will find this blog post useful on their Automation journey.</p>
<p>A lot of people that write about Ansible use it with Red Hat Linux.  For my demo environment, I chose to use Rocky Linux so that I don&rsquo;t need to worry about any Red Hat licenses. Some people online recommend using Rocky Linux to replace CentOS. Sometimes it seems that the version of Linux you choose and what product to you use for Automation and Config management can be almost a religious debate. This blog post is to cover a specific use case. How to use VMware Aria Automation | Ansible Integration. Use whatever version of Linux you want. The details that I write about may need to be modified slightly if you use a different version of Linux. This blog post will at least give you the framework to get started.</p>
<p>When I wrote this Blog Post I was using VMware Aria Automation version 8.10.2, Ansible 2.13.3 and Rocky Linux 9.</p>
<p>To use the details in this blog post you will need a working install of VMware Aria Automation.</p>
<hr>
<h6 id="create-a-ansible-control-server-and-install-ansible">Create a Ansible Control Server and install Ansible:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Create a new Server. I created a clean Rocky Linux VM.</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> This server will be used as the Ansible Control Node.</li>
</ul>
<p><strong>Steps to install Ansible:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Step 1 | Install Rocky Linux EPEL repository</span>
</span></span><span class="line"><span class="cl">dnf install epel-release -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Step 2 | Install Ansible</span>
</span></span><span class="line"><span class="cl">dnf install ansible -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Check Ansible Version after Install</span>
</span></span><span class="line"><span class="cl">ansible --version
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p>Results from ansible &ndash;version:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ansible <span class="o">[</span>core 2.13.3<span class="o">]</span>
</span></span><span class="line"><span class="cl">  config <span class="nv">file</span> <span class="o">=</span> /etc/ansible/ansible.cfg
</span></span><span class="line"><span class="cl">  configured module search <span class="nv">path</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;/root/.ansible/plugins/modules&#39;</span>, <span class="s1">&#39;/usr/share/ansible/plugins/modules&#39;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">  ansible python module <span class="nv">location</span> <span class="o">=</span> /usr/lib/python3.9/site-packages/ansible
</span></span><span class="line"><span class="cl">  ansible collection <span class="nv">location</span> <span class="o">=</span> /root/.ansible/collections:/usr/share/ansible/collections
</span></span><span class="line"><span class="cl">  executable <span class="nv">location</span> <span class="o">=</span> /usr/bin/ansible
</span></span><span class="line"><span class="cl">  python <span class="nv">version</span> <span class="o">=</span> 3.9.14 <span class="o">(</span>main, Nov  <span class="m">7</span> 2022, 00:00:00<span class="o">)</span> <span class="o">[</span>GCC 11.3.1 <span class="m">20220421</span> <span class="o">(</span>Red Hat 11.3.1-2<span class="o">)]</span>
</span></span><span class="line"><span class="cl">  jinja <span class="nv">version</span> <span class="o">=</span> 3.1.2
</span></span><span class="line"><span class="cl">  <span class="nv">libyaml</span> <span class="o">=</span> True
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-install-step-01.gif" title="/vmware-aria-automation-ansible-integration/ansible-install-step-01.gif" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-install-step-01.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="edit-the-hosts-file">Edit the hosts file:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Edit the /etc/ansible/hosts file:</li>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> I like to use nano to edit files. To save file changes in Nano use cntrl-o. To exit Nano use cntrl-x.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># the cmd at the cli to edit the hosts file</span>
</span></span><span class="line"><span class="cl">nano /etc/ansible/hosts
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>This is the contents of the /etc/ansible/hosts file:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="p">[</span><span class="l">rocky]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="m">192.168.110.201</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">[</span><span class="l">rocky:vars]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">ansible_user=root</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">ansible_password=&#39;VMware1!&#39;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-install-step-02.gif" title="/vmware-aria-automation-ansible-integration/ansible-install-step-02.gif" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-install-step-02.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="edit-the-ansiblecfg-file">Edit the ansible.cfg file:</h6>
<ul>
<li><i class="far fa-check-square fa-fw" aria-hidden="true"></i> Edit the /etc/ansible/ansible.cfg file:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"><span class="c1"># the cmd at the cli to edit the ansible.cfg file</span>
</span></span><span class="line"><span class="cl">nano /etc/ansible/ansible.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><p>This is the minium contents of the /etc/ansible/ansible.cfg file:</p>
<ul>
<li><strong>BOTH</strong> of these lines <strong>MUST</strong> be in the ansible.cfg file to add Ansible to VMware Aria Automation. If they are not present, adding the Integration will fail!</li>
<li>The vault password file can be named something different, <strong>BUT IT MUST BE SPECIFIED!</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="p">[</span><span class="l">defaults]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">host_key_checking = False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">vault_password_file = /etc/ansible/vault-pass.txt</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-install-step-03.gif" title="/vmware-aria-automation-ansible-integration/ansible-install-step-03.gif" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-install-step-03.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="test-ansible-install">Test Ansible Install</h6>
<p><strong>To test the Ansible install you can do a ping:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># the cmd at the cli to run a ping</span>
</span></span><span class="line"><span class="cl">ansible rocky -m ping
</span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-install-step-04.gif" title="/vmware-aria-automation-ansible-integration/ansible-install-step-04.gif" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-install-step-04.gif" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="vmware-aria-automation-configuration">VMware Aria Automation Configuration</h6>
<p><strong>Add Ansible Integration to VMware Aria Automation:</strong></p>
<figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-vra-integration.png" title="/vmware-aria-automation-ansible-integration/ansible-vra-integration.png" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-vra-integration.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<ul>
<li>You need to specify the Inventory File path. Default is /etc/ansible/hosts</li>
<li>You need to make sure the /etc/ansible/ansible.cfg file has the following two lines of code to add as an VMware Aria Automation Integration.</li>
</ul>
<p><strong>ansible.cfg file:</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="p">[</span><span class="l">defaults]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">host_key_checking = False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="l">vault_password_file = /etc/ansible/vault-pass.txt</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Ansible Integration screen:</strong></p>
<figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-vra-integration-details.png" title="/vmware-aria-automation-ansible-integration/ansible-vra-integration-details.png" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-vra-integration-details.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<h6 id="vmware-aria-automation-cloud-template">VMware Aria Automation Cloud Template</h6>
<p><strong>Add Ansible to Cloud Template</strong></p>
<figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-cloud-template.png" title="/vmware-aria-automation-ansible-integration/ansible-cloud-template.png" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-cloud-template.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<p><strong>Cloud Template YAML code</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># Cloud Template using Ansible Integration</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">formatVersion</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">inputs</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">CustomizationSpec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Customization Specification</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">ubuntu</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">CustomizationSpec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">VMName</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">VM Name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">minLength</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">maxLength</span><span class="p">:</span><span class="w"> </span><span class="m">12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">VCROCS-001</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">IP</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.110.200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ServerGroups</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">ServerGroups</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Ansible Server Groups</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">rocky</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rocky</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">WebServers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">AppServers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">DBServers</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">PlayBooks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">string</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">title</span><span class="p">:</span><span class="w"> </span><span class="l">PlayBooks</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">Ansible PlayBooks</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="l">web-server-rocky</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">web-server-rocky</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rocky-web</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rocky-db</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">resources</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Ansible_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Ansible</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_Machine_1.*}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">osType</span><span class="p">:</span><span class="w"> </span><span class="l">linux</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">account</span><span class="p">:</span><span class="w"> </span><span class="l">rocky-ansible</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">username</span><span class="p">:</span><span class="w"> </span><span class="l">root</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">password</span><span class="p">:</span><span class="w"> </span><span class="l">VMware1!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">groups</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="l">${input.ServerGroups}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">playbooks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">provision</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="l">${&#34;/etc/ansible/&#34; + input.PlayBooks + &#34;.yml&#34; }</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Network_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Network</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networkType</span><span class="p">:</span><span class="w"> </span><span class="l">existing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">network:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">Cloud_Machine_1</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">Cloud.Machine</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">properties</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">rocky</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">flavor</span><span class="p">:</span><span class="w"> </span><span class="l">small</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${input.VMName}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">customizationSpec</span><span class="p">:</span><span class="w"> </span><span class="l">${input.CustomizationSpec}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">constraints</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">tag</span><span class="p">:</span><span class="w"> </span><span class="l">env:VMs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">network</span><span class="p">:</span><span class="w"> </span><span class="l">${resource.Cloud_Network_1.id}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">assignment</span><span class="p">:</span><span class="w"> </span><span class="l">static</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">${input.IP}</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>Example Ansible Playbook</li>
<li>Creates a txt file, adds text to txt file, installs web server, starts web server service, enables cockpit, installs git, and does a git pull request from GitHub to copy web site files to new server.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># web-server-rocky.yml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">hosts</span><span class="p">:</span><span class="w"> </span><span class="l">rocky</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Ansible Playbook to Install Web Server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tasks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Create a new txt file | web-server.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">file</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/root/web-server.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">touch</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Add a line of text to txt file | web-server.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">lineinfile</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">path</span><span class="p">:</span><span class="w"> </span><span class="l">/root/web-server.txt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">line</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;vRA created this VM and used Ansible to create and modify this txt file | web-server.txt&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install Apache web server</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dnf</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">httpd</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Ensure HTTP server is running</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">service</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">httpd</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">started</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Run systemctl enable --now cockpit.socket command</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">shell</span><span class="p">:</span><span class="w"> </span><span class="l">systemctl enable --now cockpit.socket</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Install Git</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">dnf</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">git</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="l">latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Github Pull request of www.vCROCS.info</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">ansible.builtin.git</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">repo</span><span class="p">:</span><span class="w"> </span><span class="l">https://github.com/dalehassinger/Blog.git</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">dest</span><span class="p">:</span><span class="w"> </span><span class="l">/var/www/html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">single_branch</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="l">master</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p><strong>VMware Aria Automation Service Broker Catalog:</strong></p>
<figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-catalog.png" title="/vmware-aria-automation-ansible-integration/ansible-catalog.png" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-catalog.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<ul>
<li>VMware Aria Automation Service Broker Request</li>
<li>You can make the Ansible Server Group and Playbooks a dropdown with the custom form. The code to do this is within the YAML code of the Cloud Template.</li>
</ul>
<figure><a class="lightgallery" href="/vmware-aria-automation-ansible-integration/ansible-new-request.png" title="/vmware-aria-automation-ansible-integration/ansible-new-request.png" data-thumbnail="/vmware-aria-automation-ansible-integration/ansible-new-request.png" data-sub-html="<h2>Click to see Larger Image of Screen Shot</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image of Screen Shot</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Lessons Learned:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>The VMware Aria Automation | Ansible Integration works well if you follow all the configuration steps.</li>
<li>Ansible installation is very easy when you follow the directions.</li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="helpful-links">Helpful Links</h6>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>VMware Aria Automation | Ansible Links I found to be very helpful:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><a href="https://www.ansible.com" target="_blank" rel="noopener noreffer ">Red Hat Ansible Web Site</a></li>
<li><a href="https://blogs.vmware.com/management/2020/07/deeper-look-at-the-vrealize-automation-and-ansible-open-source-integration.html" target="_blank" rel="noopener noreffer ">Deeper look at the vRealize Automation and Ansible Open Source Integration</a></li>
<li><a href="https://docs.vmware.com/en/vRealize-Automation/8.10/Using-and-Managing-Cloud-Assembly/GUID-9244FFDE-2039-48F6-9CB1-93508FCAFA75.html" target="_blank" rel="noopener noreffer ">Configure Ansible Open Source integration in Cloud Assembly</a></li>
</ul>
</div>
        </div>
    </div>
<hr>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">When I write about <b>VMware Aria Automation</b> I always say there are many ways to accomplish the same task.  <b>Ansible</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Ansible.</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>
<hr>]]></description>
</item>
<item>
    <title>Productive APPs | 2022</title>
    <link>https://www.vcrocs.info/productive-apps-2022/</link>
    <pubDate>Sat, 26 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/productive-apps-2022/</guid>
    <description><![CDATA[<p><strong>APPs that I use everyday to be Productive | 2022</strong></p>
<hr>
<p>If you have any APPs that you like better than I have listed please send them my way. I am always open to looking at new APPs. If you would ever want to see how I use these APPs reach out! I can do a demo.</p>
<hr>
<h6 id="recent-apps">Recent APPs</h6>
<p><strong>Here are some APPs that I started using recently to be productive:</strong></p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Recent APPs:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><a href="https://ticktick.com" target="_blank" rel="noopener noreffer ">TickTick | To-Do and Notes App in one.</a></li>
<li><a href="https://cleanshot.com/" target="_blank" rel="noopener noreffer ">CleanShot X | Screen Shot and Screen recording App</a></li>
<li><a href="https://www.mmhmm.app" target="_blank" rel="noopener noreffer ">mmhmm | Makes on-screen meetings and presentations a little more fun.</a></li>
</ul>
</div>
        </div>
    </div>
<hr>
<h6 id="proven-apps">Proven APPs</h6>
<p><strong>Here are some APPs that I have been using Daily for work or Blogging for awhile. They have proven their place in my workflows:</strong></p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Proven APPs:<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreffer ">Visual Studio Code | Creating Code</a></li>
<li><a href="https://docs.github.com/en/get-started/using-github/github-desktop" target="_blank" rel="noopener noreffer ">Github Desktop</a></li>
<li><a href="https://affinity.serif.com/en-us/photo/" target="_blank" rel="noopener noreffer ">Affinity Photo | Photo editing</a></li>
<li><a href="https://www.vmware.com/products/fusion.html" target="_blank" rel="noopener noreffer ">VMware Fusion</a></li>
<li><a href="https://termius.com/" target="_blank" rel="noopener noreffer ">Termius | SSH Client</a></li>
<li><a href="https://binarynights.com/" target="_blank" rel="noopener noreffer ">Forklift | SFTP Client</a></li>
<li><a href="https://slack.com/" target="_blank" rel="noopener noreffer ">Slack</a></li>
<li><a href="https://zoom.us/" target="_blank" rel="noopener noreffer ">Zoom | Online Meetings, Chat, etc&hellip;</a></li>
<li><a href="https://gohugo.io/" target="_blank" rel="noopener noreffer ">Hugo | The world‚Äôs fastest framework for building websites</a></li>
<li><a href="https://www.microsoft.com" target="_blank" rel="noopener noreffer ">Microsoft Teams | Online Meetings, Chat, etc&hellip;</a></li>
<li><a href="https://www.microsoft.com" target="_blank" rel="noopener noreffer ">Microsoft Office | Word, Excel, Outlook, Powerpoint, OneNote</a></li>
<li><a href="https://www.backblaze.com/" target="_blank" rel="noopener noreffer ">Backblaze | Online Backup to keep all my important files offsite.</a></li>
<li><a href="https://www.dashlane.com/" target="_blank" rel="noopener noreffer ">Dashlane | Password Manager</a></li>
<li><a href="https://folivora.ai/bettersnaptool" target="_blank" rel="noopener noreffer ">BetterSnapTool | easily manage your window positions</a></li>
<li><a href="https://raindrop.io" target="_blank" rel="noopener noreffer ">Raindrop.io | All-in-one bookmark manager</a></li>
</ul>
</div>
        </div>
    </div>
<hr>
<ul>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>What have I been up to? | 2nd half 2022</title>
    <link>https://www.vcrocs.info/2nd-half-2022/</link>
    <pubDate>Tue, 01 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/2nd-half-2022/</guid>
    <description><![CDATA[<p><strong>New Job | August 2022 | Technical Account Manager (TAM)</strong></p>
<hr>
<p>On August 1, 2022 I became an employee of <strong>VMware</strong> as a <strong>Technical Account Manager, TAM</strong>.</p>
<p>I was hired to be a TAM with a focus on the <strong>vRealize Suite</strong>. Within a month of my hire date VMware announced <strong>VMware Aria</strong>. So now I am a TAM with a focus on the VMware Aria Product.</p>
<p>To work for VMware was a career goal of mine. I was always impressed by the VMware employees that I worked with the past 10+ years. Everyone was always very professional and had a great attitude to help their customers. I wanted to know personally what it was like to work in that type of culture. If you know me you know that I have a passion for the VMware Aria suite of Products. So to be a TAM with a focus on Aria is a good fit for me.</p>
<p>After several months at VMware, this is what I learned.</p>
<ul>
<li>The <strong>culture</strong> overall is very positive. A lot of people helped me in my on-boarding and wanted to see me be successful. People that I knew before I joined VMware reached out to me and said &ldquo;What can I do to help you&rdquo;.</li>
<li>The employee <strong>benefits</strong> are the best that I ever had in my career so far.</li>
<li>You get to do a lot of <strong>training</strong> to keep your skills up to date and at a level the customers expect.</li>
<li>The on-boarding process can take days, weeks, months&hellip;</li>
<li>To get started I received a laptop of my choice 3 days before my start date. Never experienced that before.</li>
<li>Having a <strong>Mentor</strong> at <strong>VMware</strong> is very important. Someone that wants to help you be successful and will take the time to show you how to do your job, recommend training, help you pick benefits, let you know about different programs to get involved with, let you know about weekly zoom training sessions, help you get a lab setup, etc&hellip;</li>
<li>VMware wants all employees to <strong>give back</strong> by making donations to non-profits, 100% match by VMware.</li>
<li>VMware wants all employees to <strong>donate</strong> time to non-profits.</li>
</ul>
<hr>
<p><strong>Special thanks</strong> to some people that went above and beyond when I started at VMware to help me, in no particular order:</p>
<p>Marshall Cline, Ariel Sanchez, Brock Peterson, Cosmin Trif, Christopher Kusek, Anton Wesztergom, Alex Musicante, Chad Thomas, David Kruse, Steve Lieberson, Paul Schlosser, Christina Griffus and some I may have missed.</p>
<hr>
<p>Now that I am getting more engaged with the customers that I will be working with, I plan to start blogging more again to continue giving back to the vCommunity. Share the knowledge!</p>
<p>If anyone that reads my blogs would ever want to talk to me about being a VMware employee, please reach out to me. I will share my experience 1:1.</p>
<p>Another area that I want to give back to the vCommunity is to help Mentor others. If anyone wants to ever talk, please reach out.</p>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>Central PA VMUG | August 2022</title>
    <link>https://www.vcrocs.info/centra-pa-vmug-08-2022/</link>
    <pubDate>Wed, 24 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/centra-pa-vmug-08-2022/</guid>
    <description><![CDATA[<p><strong>VMware Explore 2022 | San Francisco</strong></p>
<hr>
<p>VMware Explore is always one of the premiere Technology Events every year. Here is a collection of links and tips to some of the activities that I would attend and enjoy.</p>
<ul>
<li>I always tried to attend the Keynotes to learn about new product announcements and to hear the direction that VMware was going.</li>
<li>I attended a lot of sessions. See list of sessions that I would enjoy.</li>
<li>I would do Hands on Labs that were not available to do anytime. There are some HOLs that are available only during the conference and there are VMware people to help you with the labs.</li>
<li>If you are a TAM customer, there are sessions dedicated to TAM customers.</li>
<li>Go to the Expo Area. You can always talk to VMware Engineers at the booths in the Expo Area and watch demos. A lot of Vendors in the Expo Area.</li>
<li>I would allows attend some of the vBrownbag Tech Talks. The Tech Talks were a 10 - 15 minute presentation.</li>
<li>Watch for Vendor Parties. They are always fun and drinks | food are always free. The Veeam party in the past was always one of the better parties.</li>
<li>See a McLaren F1 car in person, experience the speed of F1 in a fun simulator and learn how VMware helps McLaren F1 accelerate innovation.</li>
</ul>
<figure><a class="lightgallery" href="/centra-pa-vmug-08-2022/f1.jpg" title="/centra-pa-vmug-08-2022/f1.jpg" data-thumbnail="/centra-pa-vmug-08-2022/f1.jpg" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<h6 id="vmware-explore-sessions">VMware Explore Sessions:</h6>
<p><a href="https://www.vmware.com/explore/us.html" target="_blank" rel="noopener noreffer ">Login to VMware Explore 2022 before clicking on session links. (Click Here)</a></p>
<div style="background-color:#fff5e6; Padding:20px; border: 1.5px solid #f2f2f2; color: black;" >
    <b>Agenda:</b>
        <ul>
            <li><a href='https://www.vmware.com/explore/us/attend/agenda.html' target="_blank" style="color: black;">VMware Explore Agenda</a></li>
        </ul>
    <b>Speakers:</b>
        <ul>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="William Lam"'      target="_blank" style="color: black;">William Lam | Cloud Infrastructure Business Group</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Vincent Riccio"'   target="_blank" style="color: black;">Vincent Riccio | Cloud Management Business Unit</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Chris McClanahan"' target="_blank" style="color: black;">Chris McClanahan | Cloud Management Business Unit</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Ariel Sanchez"'    target="_blank" style="color: black;">Ariel Sanchez | One of the most accomplished TAMs you will meet. A mentor to many people in TECH</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="John Nicholson"'   target="_blank" style="color: black;">John Nicholson | Storage and Availability Business Unit</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Sam McGeown"'      target="_blank" style="color: black;">Sam McGeown | Technical Marketing team for Cloud Automation</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="John Dias"'        target="_blank" style="color: black;">John Dias | Cloud Management solutions</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Amanda Blevins"'   target="_blank" style="color: black;">Amanda Blevins | Vice President and Chief Technology Officer for the Americas</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Kyle Ruddy"'       target="_blank" style="color: black;">Kyle Ruddy | Senior Technical Product Marketing Manager for HashiCorp</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Graham Lockard"'   target="_blank" style="color: black;">Graham Lockard | IT Infrastructure Manager | Penn State University | SaaS with Horizon</a></li>
        </ul>
    <b>Topics:</b>
        <ul>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search=saltstack"'                        target="_blank" style="color: black;">SaltStack</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="Powercli"'                        target="_blank" style="color: black;">PowerCLI</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="PowerShell"'                      target="_blank" style="color: black;">PowerShell | More sessions this year than I have seen in the past.</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="VMware {code} Theater Session"'   target="_blank" style="color: black;">VMware {code}</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="vRealize Automation"'             target="_blank" style="color: black;">vRealize Automation</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="vRealize Operations"'             target="_blank" style="color: black;">vRealize Operations</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="vRealize Orchestrator"'           target="_blank" style="color: black;">vRealize Orchestrator</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="vRealize Log Insight"'            target="_blank" style="color: black;">vRealize Log Insight</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="virtually speaking"'              target="_blank" style="color: black;">Virtually Speaking Podcast Live</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="vSAN"'                            target="_blank" style="color: black;">vSAN</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="vsphere"'                         target="_blank" style="color: black;">vSphere</a></li>
            <li><a href='https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="DevOps"'                          target="_blank" style="color: black;">DevOps</a></li>
        </ul>
</div>
<div><br></div>
<div style="background-color:#fff5e6; Padding:20px; border: 1.5px solid #f2f2f2; color: black;" >
    <b>Sessions:</b>
        <ul>
            <li><a href="https://twitter.com/VMwareExplore"                                                                                   target="_blank" style="color: black;">VMware Explore | Twitter</a></li>
            <li><a href=https://event.vmware.com/flow/vmware/explore2022us/content/page/catalog?search="VMTN TechTalk"'                       target="_blank" style="color: black;">VMTN TechTalk</a></li>
            <li><a href="https://vmblog.com/archive/2022/08/04/vmwareexplore-2022-us-list-of-parties-and-events.aspx" target="_blank" style="color: black;">VMware Explore Party List</a></li>
            <li><a href="https://www.eventbrite.com/e/veeams-legendary-party-at-vmware-explore-us-2022-ft-walk-the-moon-tickets-383044023987" target="_blank" style="color: black;">Veeam Party Registration</a></li>
            <li><a href="https://octo.vmware.com/kit-colberts-dont-miss-playlist-vmware-explore-2022/"                                        target="_blank" style="color: black;">Kit Colbert‚Äôs Don‚Äôt Miss Playlist</a></li>
            <li><a href="https://www.vladan.fr/top-7-sessions-vmware-explore-2022/"                                                           target="_blank" style="color: black;">TOP 7 Sessions VMware Explore 2022 | By Vladan SEGET</a></li>
            <li><a href="https://www.yellow-bricks.com/2022/07/12/top-15-vmware-explore-sessions-to-attend/"                                  target="_blank" style="color: black;">Top 15 VMware Explore Sessions to attend! | By Duncan Epping</a></li>
        </ul>
</div>
<div><br></div>
<ul>
<li>If your schedule gives you some free time there is a lot of cool stuff to do and see in the SanFrancisco area.</li>
<li>If you are a baseball fan the stadium where the Giants play is an awesome facility.</li>
<li>One year I rented a bike and rode across the Golden Gate Bridge. That was a fun experience.</li>
<li>To rent a car and go see the Red Wood trees was fun.</li>
</ul>
<div style="background-color:#fff5e6; Padding:20px; border: 1.5px solid #f2f2f2; color: black;" >
    <b>Fun Stuff:</b>
        <ul>
            <li><a href="https://www.blazingsaddles.com/san-francisco" target="_blank" style="color: black;">Blazing Saddles San Francisco Bike Rentals & Tours</a>
            <li><a href="https://www.mlb.com/giants/schedule/2022-08"  target="_blank" style="color: black;">San Francisco Giants Schedule</a>
            <li><a href="https://www.nps.gov/muwo/index.htm"           target="_blank" style="color: black;">Muir Woods</a>
        </ul>
</div>
<h6 id="product-updates">Product Updates:</h6>
<p>The vRealize Suite is updated quarterly and the SaaS version is now updated monthly. To see BIG announcements at VMware Explore probably will not happen, BUT you never know&hellip;</p>
<div style="background-color:#fff5e6; Padding:20px; border: 1.5px solid #f2f2f2; color: black;" >
    <b>Products:</b>
        <ul>
            <li><a href="https://youtu.be/c9aw_kvwF_A"                       target="_blank" style="color: black;">Introducing vSphere+ and vSAN+: Delivering Benefits of the Cloud to Your On-premises Workloads</a>
            <li><a href="https://pathfinder.vmware.com/v3/path/vsphere_plus" target="_blank" style="color: black;">VMware vSphere+ Overview</a></li>
            <li><a href="https://blogs.vmware.com"                           target="_blank" style="color: black;">blogs.VMware.com</a></li>
            <li><a href="https://flings.vmware.com/esxi-arm-edition"         target="_blank" style="color: black;">ESXi Arm Edition | version 1.10 | Can run on Raspberry PI | Cool Project to use in your Home Lab</a>
            <li><a href="https://blogs.vmware.com/vsphere/product-news"                          target="_blank" style="color: black;">Product Announcements</a>
            <li><a href="https://blogs.vmware.com/vsphere/2021/10/project-monterey-updates.html" target="_blank" style="color: black;">Project Monterey | I am interested to see what updates are announced at VMware Explore</a>
        </ul>
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware PowerBlock | August 2022</title>
    <link>https://www.vcrocs.info/vmware-powerblock-08-2022/</link>
    <pubDate>Fri, 19 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vmware-powerblock-08-2022/</guid>
    <description><![CDATA[<p><strong>VMware PowerBlock | August 2022</strong></p>
<hr>
<p>The August PowerBlock is absolutely going to be a well attended event. We are gong to have an all-star lineup, of highly qualified automation engineers, including Ariel Sanchez, Tom Gillaspy, Chris McClanahan, Dale Hassinger and our powerblock discussing a variety of topics.</p>
<p>Here is the general outline for the conversation:</p>
<ul>
<li>How do you get started with automation?</li>
<li>What does success look like?</li>
<li>What are some of the common mistakes / misperceptions when getting started with automation?</li>
<li>What are some examples of customer success using vRealize Automation?</li>
</ul>
<hr>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube-nocookie.com/embed/Mswok2Q4E8w" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<hr>
<div>
  <br>
</div>
<ul>
<li>Why Automate?</li>
<li>How to get started?</li>
<li>What does success look like?</li>
<li>What are some common mistakes / misperception&rsquo;s</li>
<li>Examples of customer success</li>
</ul>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config API</title>
    <link>https://www.vcrocs.info/saltstack-config-api/</link>
    <pubDate>Sun, 26 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-api/</guid>
    <description><![CDATA[<p>Using SaltStack Config api for Automation from vRA Catalog or cmd</p>
<hr>
<p>A personal goal of mine for 2022 was to start doing more with Python when working with VMware SaltStack Config. As a Windows Admin most of my automation was done with PowerShell. All the examples you see in the salt documentation are written in Python, so to use Python for some processes makes sense.</p>
<p>I had a use case that made sense to use Python. I want to schedule reboots of AWS EC2 instances using SaltStack Config. For Servers that are on-prem I would always automate the process to create a server reboot scheduled task in vCenter.  With AWS I want to use VMware SaltStack Config to schedule the Server Reboot.</p>
<p>Manual Steps:</p>
<ul>
<li>Create a SaltStack Config Job to do the reboot.<br>
I create a job named &ldquo;vRA | Server Reboot&rdquo;. This job will be used for all scheduled server reboots.</li>
<li>Copy the Python Code below and create a ScheduleServerReboot.py file that will be copied to the SSC server.</li>
</ul>
<p>The Python Code completes the following steps:</p>
<ul>
<li>Creates a Target that uses the grain &ldquo;id&rdquo; and will only target the Server that you want to reboot.</li>
<li>Creates a Run Once Schedule to use the job and new target that was created.</li>
<li>Sends an email to show that the run once schedule to reboot server  was created.</li>
</ul>
<hr>
<h6 id="saltstack-config-server">SaltStack Config Server:</h6>
<div>
  <b>My SaltStack Config Server (SSC) is what VMware provides when using Life Cycle Manager (LCM) running Photon OS.</b>
</div>
<div>
  <br>
</div>
<hr>
<h6 id="python-code">Python Code:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># --- Python Code ---</span>
</span></span><span class="line"><span class="cl"><span class="c1"># --- In my code I show the Password. In Production DO NOT DO THIS.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># --- There are so many different ways to include encrypted PWs in the code. </span>
</span></span><span class="line"><span class="cl"><span class="c1"># --- Use what works best in your environment.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># example to run the script</span>
</span></span><span class="line"><span class="cl"><span class="c1"># python3 /scripts/ScheduleServerReboot.py -name &#39;2019DC&#39; -dateTime &#39;2022-06-25T23:00&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">argparse</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">pprint</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">json</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">timedelta</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">random</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">smtplib</span><span class="o">,</span> <span class="nn">ssl</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">email.mime.multipart</span> <span class="kn">import</span> <span class="n">MIMEMultipart</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Generate a random ID number</span>
</span></span><span class="line"><span class="cl"><span class="n">randomNumber</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">randomNumber</span> <span class="o">=</span> <span class="s1">&#39;0000&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">randomNumber</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">randomNumber</span> <span class="o">=</span> <span class="n">randomNumber</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">:]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;ID:&#39;</span><span class="p">,</span><span class="n">randomNumber</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- parse arguments</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s2">&#34;Create Targets&#34;</span><span class="p">,</span> <span class="n">formatter_class</span><span class="o">=</span><span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentDefaultsHelpFormatter</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s2">&#34;-name&#34;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s2">&#34;Target Name&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s2">&#34;-dateTime&#34;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s2">&#34;Schedule Date | Time&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">args</span> <span class="o">=</span> <span class="nb">vars</span><span class="p">(</span><span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Set up variables</span>
</span></span><span class="line"><span class="cl"><span class="n">argName</span>     <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s2">&#34;name&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">argDateTime</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="s2">&#34;dateTime&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">argDate</span>     <span class="o">=</span> <span class="n">argDateTime</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">10</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Print the variables</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Server Name: &#39;</span><span class="p">,</span><span class="n">argName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Date | Time: &#39;</span><span class="p">,</span><span class="n">argDateTime</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Connect to SSC Server</span>
</span></span><span class="line"><span class="cl"><span class="n">host</span>     <span class="o">=</span> <span class="s1">&#39;https://192.168.86.110&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">user</span>     <span class="o">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">password</span> <span class="o">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">sseapiclient.tornado</span> <span class="kn">import</span> <span class="n">SyncClient</span>
</span></span><span class="line"><span class="cl"><span class="n">client</span> <span class="o">=</span> <span class="n">SyncClient</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="n">user</span><span class="p">,</span> <span class="n">password</span><span class="p">,</span> <span class="n">ssl_validate_cert</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Check to make sure minion exists</span>
</span></span><span class="line"><span class="cl"><span class="n">minionName</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">minionReturn</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">minions</span><span class="o">.</span><span class="n">get_minion_presence</span><span class="p">(</span><span class="n">minion_id</span> <span class="o">=</span> <span class="n">argName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#print(targetReturn)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">minionReturn</span><span class="o">.</span><span class="n">ret</span><span class="p">[</span><span class="s1">&#39;results&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#print(x)</span>
</span></span><span class="line"><span class="cl">    <span class="n">minionName</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="s1">&#39;minion&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;minionName:&#39;</span><span class="p">,</span> <span class="n">minionName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">minionName</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Minion not found!&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">minionExists</span> <span class="o">=</span> <span class="s1">&#39;false&#39;</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Minion found!&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">minionExists</span> <span class="o">=</span> <span class="s1">&#39;true&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># --- Create Target ID | Name</span>
</span></span><span class="line"><span class="cl">    <span class="n">targetID</span> <span class="o">=</span> <span class="s1">&#39;id:&#39;</span> <span class="o">+</span> <span class="n">argName</span>
</span></span><span class="line"><span class="cl">    <span class="n">targetName</span> <span class="o">=</span> <span class="s2">&#34;vRA | Reboot | &#34;</span> <span class="o">+</span> <span class="n">argName</span> <span class="o">+</span> <span class="s1">&#39; | &#39;</span> <span class="o">+</span> <span class="n">argDate</span> <span class="o">+</span> <span class="s1">&#39; | ID:&#39;</span> <span class="o">+</span> <span class="n">randomNumber</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Target ID:&#39;</span><span class="p">,</span><span class="n">targetID</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Target Name:&#39;</span><span class="p">,</span><span class="n">targetName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># --- Create New SSC Target</span>
</span></span><span class="line"><span class="cl">    <span class="n">client</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">tgt</span><span class="o">.</span><span class="n">save_target_group</span><span class="p">(</span><span class="n">tgt</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;*&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;tgt_type&#39;</span><span class="p">:</span> <span class="s1">&#39;grain&#39;</span><span class="p">,</span> <span class="s1">&#39;tgt&#39;</span><span class="p">:</span><span class="n">targetID</span><span class="p">}},</span> <span class="n">name</span><span class="o">=</span><span class="n">targetName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># --- Get UUID of new Target Created</span>
</span></span><span class="line"><span class="cl">    <span class="n">targetReturn</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">tgt</span><span class="o">.</span><span class="n">get_target_group</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">targetName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">targetReturn</span><span class="o">.</span><span class="n">ret</span><span class="p">[</span><span class="s1">&#39;results&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#print(x)</span>
</span></span><span class="line"><span class="cl">        <span class="n">targetUUID</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="s1">&#39;uuid&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Target UUID:&#39;</span><span class="p">,</span> <span class="n">targetUUID</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># --- Get UUID of Job to run in Schedule</span>
</span></span><span class="line"><span class="cl">    <span class="c1">#jobReturn=client.api.job.get_jobs()</span>
</span></span><span class="line"><span class="cl">    <span class="n">jobName</span> <span class="o">=</span> <span class="s1">&#39;vRA | Server Reboot&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Job Name: &#39;</span><span class="p">,</span><span class="n">jobName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">jobReturn</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">job</span><span class="o">.</span><span class="n">get_jobs</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">jobName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">jobReturn</span><span class="o">.</span><span class="n">ret</span><span class="p">[</span><span class="s1">&#39;results&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="c1">#print(x)</span>
</span></span><span class="line"><span class="cl">        <span class="n">jobUUID</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="s1">&#39;uuid&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Job UUID:&#39;</span><span class="p">,</span> <span class="n">jobUUID</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># -- Create a run once Schedule</span>
</span></span><span class="line"><span class="cl">    <span class="c1"># 2022-06-21T13:21 - Date|Time format from vRA</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Schedule Time:&#39;</span><span class="p">,</span><span class="n">argDateTime</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># --- Create Schedule Name</span>
</span></span><span class="line"><span class="cl">    <span class="n">scheduleName</span> <span class="o">=</span> <span class="s1">&#39;vRA | Reboot | &#39;</span> <span class="o">+</span> <span class="n">argName</span> <span class="o">+</span> <span class="s1">&#39; | &#39;</span> <span class="o">+</span> <span class="n">argDate</span> <span class="o">+</span> <span class="s1">&#39; | ID:&#39;</span> <span class="o">+</span> <span class="n">randomNumber</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;Schedule Name:&#39;</span><span class="p">,</span> <span class="n">scheduleName</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c1"># --- Create Run Once Schedule</span>
</span></span><span class="line"><span class="cl">    <span class="n">scheduleReturn</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">schedule</span><span class="o">.</span><span class="n">save</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">name</span><span class="o">=</span><span class="n">scheduleName</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">schedule</span><span class="o">=</span><span class="p">{</span><span class="s1">&#39;once&#39;</span><span class="p">:</span> <span class="n">argDateTime</span><span class="p">,</span> <span class="s1">&#39;timezone&#39;</span><span class="p">:</span> <span class="s1">&#39;America/New_York&#39;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="n">cmd</span><span class="o">=</span><span class="s2">&#34;local&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">tgt_uuid</span><span class="o">=</span><span class="n">targetUUID</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">job_uuid</span><span class="o">=</span><span class="n">jobUUID</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Send Email about vRA Request using gmail.</span>
</span></span><span class="line"><span class="cl"><span class="n">sender_email</span>   <span class="o">=</span> <span class="s2">&#34;dale.hassinger@gmail.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">receiver_email</span> <span class="o">=</span> <span class="s2">&#34;dale.hassinger@vcrocs.info&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">password</span>       <span class="o">=</span> <span class="s2">&#34;HackMe!&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">message</span> <span class="o">=</span> <span class="n">MIMEMultipart</span><span class="p">(</span><span class="s2">&#34;alternative&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">message</span><span class="p">[</span><span class="s2">&#34;Subject&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;vRA Scheduled EC2 Reboot | &#34;</span> <span class="o">+</span> <span class="n">argName</span>
</span></span><span class="line"><span class="cl"><span class="n">message</span><span class="p">[</span><span class="s2">&#34;From&#34;</span><span class="p">]</span>    <span class="o">=</span> <span class="n">sender_email</span>
</span></span><span class="line"><span class="cl"><span class="n">message</span><span class="p">[</span><span class="s2">&#34;To&#34;</span><span class="p">]</span>      <span class="o">=</span> <span class="n">receiver_email</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Create HTML Body</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="n">minionExists</span> <span class="o">==</span> <span class="s1">&#39;true&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">html</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;html&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;body&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;b&gt;A Request to reboot a AWS EC2 was run from vRA.&lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;/div&gt;&lt;br&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;b&gt;EC2 Information:&lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;ul style=&#34;list-style-type:disc&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 12px;&#34;&gt;&lt;li&gt;&lt;b&gt;EC2 Name: &#34;&#34;&#34;</span>         <span class="o">+</span> <span class="n">argName</span>      <span class="o">+</span> <span class="s2">&#34;&#34;&#34;&lt;/b&gt;&lt;/li&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 12px;&#34;&gt;&lt;li&gt;Target Created: &#34;&#34;&#34;</span>      <span class="o">+</span> <span class="n">targetName</span>   <span class="o">+</span> <span class="s2">&#34;&#34;&#34;&lt;/li&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 12px;&#34;&gt;&lt;li&gt;Schedule Created: &#34;&#34;&#34;</span>    <span class="o">+</span> <span class="n">scheduleName</span> <span class="o">+</span> <span class="s2">&#34;&#34;&#34;&lt;/li&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 12px;&#34;&gt;&lt;li&gt;Reboot Date | Time: &#34;&#34;&#34;</span>  <span class="o">+</span> <span class="n">argDateTime</span>  <span class="o">+</span> <span class="s2">&#34;&#34;&#34;&lt;/li&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;/ul&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 11px;&#34;&gt;&lt;b&gt;vCROCS - Automated IT &lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 10px;&#34;&gt;#VMware #vRealize #SaltStackConfig&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;/body&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;/html&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">elif</span> <span class="n">minionExists</span> <span class="o">==</span> <span class="s1">&#39;false&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">html</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;html&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;body&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;b&gt;A Request to reboot a AWS EC2 was run from vRA.&lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;/div&gt;&lt;br&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;b&gt;EC2 Information:&lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;ul style=&#34;list-style-type:disc&#34;&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 12px;&#34;&gt;&lt;li&gt;&lt;b&gt;EC2 Name: &#34;&#34;&#34;</span>         <span class="o">+</span> <span class="n">argName</span>      <span class="o">+</span> <span class="s2">&#34;&#34;&#34;&lt;/b&gt;&lt;/li&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;/ul&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;b&gt;The Server Name was not found in Salt! Please double check name and try again!&lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 14px;&#34;&gt;&lt;/div&gt;&lt;br&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 11px;&#34;&gt;&lt;b&gt;vCROCS - Automated IT &lt;/b&gt;&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;div style=&#34;font-family: Arial, sans-serif; font-size: 10px;&#34;&gt;#VMware #vRealize #SaltStackConfig&lt;/div&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;/body&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &lt;/html&gt;
</span></span></span><span class="line"><span class="cl"><span class="s2">    &#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- HTML MIMEText objects</span>
</span></span><span class="line"><span class="cl"><span class="n">emailHTML</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">html</span><span class="p">,</span> <span class="s2">&#34;html&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Add the HTML part to MIMEMultipart message</span>
</span></span><span class="line"><span class="cl"><span class="n">message</span><span class="o">.</span><span class="n">attach</span><span class="p">(</span><span class="n">emailHTML</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># --- Create secure connection and send HTML email</span>
</span></span><span class="line"><span class="cl"><span class="n">context</span> <span class="o">=</span> <span class="n">ssl</span><span class="o">.</span><span class="n">create_default_context</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">with</span> <span class="n">smtplib</span><span class="o">.</span><span class="n">SMTP_SSL</span><span class="p">(</span><span class="s2">&#34;smtp.gmail.com&#34;</span><span class="p">,</span> <span class="mi">465</span><span class="p">,</span> <span class="n">context</span><span class="o">=</span><span class="n">context</span><span class="p">)</span> <span class="k">as</span> <span class="n">server</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">server</span><span class="o">.</span><span class="n">login</span><span class="p">(</span><span class="n">sender_email</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">server</span><span class="o">.</span><span class="n">sendmail</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">sender_email</span><span class="p">,</span> <span class="n">receiver_email</span><span class="p">,</span> <span class="n">message</span><span class="o">.</span><span class="n">as_string</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<p>Example of email that is sent when process completes.</p>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-53.PNG" title="/saltstack-config-api/Salt-53.PNG" data-thumbnail="/saltstack-config-api/Salt-53.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<p>Screen Shots of the SaltStack Config Job, Target and Schedule:</p>
<p>SSC Job:</p>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-58.PNG" title="/saltstack-config-api/Salt-58.PNG" data-thumbnail="/saltstack-config-api/Salt-58.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-59.PNG" title="/saltstack-config-api/Salt-59.PNG" data-thumbnail="/saltstack-config-api/Salt-59.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>SSC Target:</p>
<p><figure><a class="lightgallery" href="/saltstack-config-api/Salt-60.PNG" title="/saltstack-config-api/Salt-60.PNG" data-thumbnail="/saltstack-config-api/Salt-60.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-61.PNG" title="/saltstack-config-api/Salt-61.PNG" data-thumbnail="/saltstack-config-api/Salt-61.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-62.PNG" title="/saltstack-config-api/Salt-62.PNG" data-thumbnail="/saltstack-config-api/Salt-62.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-63.PNG" title="/saltstack-config-api/Salt-63.PNG" data-thumbnail="/saltstack-config-api/Salt-63.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure></p>
<hr>
<p>To run this process to reboot an AWS EC2 from the vRA catalog for Day 2 operations I used the OOTB (Out of The Box) orchestrator workflow named &ldquo;Run SSH command&rdquo;.  I never modify the OOTB workflows.  I cloned this Workflow and named it &ldquo;Schedule EC2 Reboot&rdquo;.</p>
<p>Original OOTB Workflow from vRO:</p>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-54.PNG" title="/saltstack-config-api/Salt-54.PNG" data-thumbnail="/saltstack-config-api/Salt-54.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<p>Cloned Worked in vRO:</p>
<p><figure><a class="lightgallery" href="/saltstack-config-api/Salt-55.PNG" title="/saltstack-config-api/Salt-55.PNG" data-thumbnail="/saltstack-config-api/Salt-55.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-56.PNG" title="/saltstack-config-api/Salt-56.PNG" data-thumbnail="/saltstack-config-api/Salt-56.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-api/Salt-57.PNG" title="/saltstack-config-api/Salt-57.PNG" data-thumbnail="/saltstack-config-api/Salt-57.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure></p>
<p>Very simple form to fill out. Enter EC2 name and Date|Time.</p>
<p>The Workflow takes the data from the vRA custom form and does an SSH Connection to the SSC server and runs a single line command using the data from the form as arguments:</p>
<p>python3 /scripts/ScheduleServerReboot.py -name &lsquo;2019DC&rsquo; -dateTime 2022-06-25T23:00&rsquo;</p>
<hr>
<ul>
<li>I hope the provided code and screenshots were helpful to get you started.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>If you are a Windows Server Admin that knows PowerShell, to start using Python will take some time but the languages are similar.</li>
<li>SaltStack Config api is a great way to create Day 2 automation processes in vRA.</li>
<li><a href="https://developer.vmware.com/apis/1179/saltstack-config-raas" target="_blank">SaltStack Config - RaaS API Documentation</a></li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 9</title>
    <link>https://www.vcrocs.info/saltstack-config-part-09/</link>
    <pubDate>Fri, 10 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-09/</guid>
    <description><![CDATA[<p>Part 9: Using salt-api with PowerShell for Windows Server Automation</p>
<hr>
<p><strong>Update: It was brought to my attention that adding cherypy will break the salt master. After a quick test in my lab I had the same issue with the newest version of SaltStack Config. DO NOT use this blog post until I get a working version in my lab.</strong></p>
<p><strong>If you want to work with the VMware Aria Automation Config API please use this newer Blog Post that I created:</strong></p>
<ul>
<li><a href="https://www.vcrocs.info/unlocking-the-potential-vmware-aria-automation-config-api/" target="_blank" rel="noopener noreffer ">Unlocking the Potential | VMware Aria Automation Config API</a></li>
</ul>
<hr>
<p>This post is to show how to use PowerShell to make RESTful API calls to SaltStack Config. This is something that I have wanted to do for awhile. I could never find any examples in my Google searches, so I took the time to learn how the examples that use curl work and translated that into PowerShell Code. I hope some Windows Server Admins will find this post helpful. I like using salt to do Windows Server Configuration Management more than remote PowerShell. You can run changes against many servers at the exact same time instead of looping thru a list of servers names.</p>
<p>I am also going to look at use salt-api with vRealize Automation ABX action scripts.</p>
<p>In some previous posts I used the POSH-SSH module but when you use the salt-api, the PowerShell Module POSH-SSH is no longer needed.</p>
<hr>
<h6 id="configuration-changes-to-the--saltstack-config-server">Configuration Changes to the  SaltStack Config Server:</h6>
<div>
  <b>My SaltStack Config Server (SSC) is what VMware provides when using Life Cycle Manager (LCM) running Photon OS.</b>
</div>
<div>
  <b>The following steps are what I needed to do in my Lab environment from the SSC CLI to enable salt-api:</b>
</div>
<div>
  <br>
</div>
<div>
  <b> * Always make sure you have a good snap | backup before making any changes to SSC Server</b>
</div>
<div>
  <br>
</div>
<ul>
<li>Install CherryPy:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">pip3</span> <span class="n">install</span> <span class="n">cherrypy</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Install the PyOpenSSL package:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">pip3</span> <span class="n">install</span> <span class="n">pyopenssl</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Generate a self-signed certificate:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="p">-</span><span class="n">-local</span> <span class="n">tls</span><span class="p">.</span><span class="n">create_self_signed_cert</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>open firewall port 8000:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">iptables</span> <span class="n">-A</span> <span class="n">INPUT</span> <span class="n">-i</span> <span class="n">eth0</span> <span class="n">-p</span> <span class="n">tcp</span> <span class="p">-</span><span class="n">-dport</span> <span class="mf">8000</span> <span class="n">-j</span> <span class="n">ACCEPT</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Edit /etc/salt/master file:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">vi</span> <span class="p">/</span><span class="n">etc</span><span class="p">/</span><span class="n">salt</span><span class="p">/</span><span class="n">master</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p>Add these lines to the /etc/salt/master file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">external_auth</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">pam</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">root</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">      <span class="p">-</span> <span class="p">.*</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">rest_cherrypy</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">  <span class="n">port</span><span class="err">:</span> <span class="mf">8000</span>
</span></span><span class="line"><span class="cl">  <span class="n">ssl_crt</span><span class="err">:</span> <span class="p">/</span><span class="n">etc</span><span class="p">/</span><span class="n">pki</span><span class="p">/</span><span class="n">tls</span><span class="p">/</span><span class="n">certs</span><span class="p">/</span><span class="n">localhost</span><span class="p">.</span><span class="py">crt</span>
</span></span><span class="line"><span class="cl">  <span class="n">ssl_key</span><span class="err">:</span> <span class="p">/</span><span class="n">etc</span><span class="p">/</span><span class="n">pki</span><span class="p">/</span><span class="n">tls</span><span class="p">/</span><span class="n">certs</span><span class="p">/</span><span class="n">localhost</span><span class="p">.</span><span class="n">key</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Restart salt-master and check service status for any errors:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">restart</span> <span class="nb">salt-master</span>
</span></span><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">status</span> <span class="nb">salt-master</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Enable | Start salt-api and check service status for any errors:</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">enable</span> <span class="nb">salt-api</span>
</span></span><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="nb">start salt-api</span>
</span></span><span class="line"><span class="cl"><span class="n">systemctl</span> <span class="n">status</span> <span class="nb">salt-api</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="tests-to-make-sure-saltstack-config-changes-are-working">Tests to make sure SaltStack Config Changes are working:</h6>
<ul>
<li>I did all this PowerShell code from my mac.  To use self-signed certs I use -SkipCertificateCheck. On a Windows OS the code is different.</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-WebRequest</span> <span class="n">-Uri</span> <span class="s1">&#39;https://192.168.86.141:8000&#39;</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Results</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">StatusCode</span>        <span class="err">:</span> <span class="mf">200</span>
</span></span><span class="line"><span class="cl"><span class="n">StatusDescription</span> <span class="err">:</span> <span class="n">OK</span>
</span></span><span class="line"><span class="cl"><span class="n">Content</span>           <span class="err">:</span> <span class="p">{</span><span class="s2">&#34;return&#34;</span><span class="err">:</span> <span class="s2">&#34;Welcome&#34;</span><span class="p">,</span> <span class="s2">&#34;clients&#34;</span><span class="err">:</span> <span class="p">[</span><span class="s2">&#34;local&#34;</span><span class="p">,</span> <span class="s2">&#34;local_async&#34;</span><span class="p">,</span> <span class="s2">&#34;local_batch&#34;</span><span class="p">,</span> <span class="s2">&#34;local_subset&#34;</span><span class="p">,</span> <span class="s2">&#34;runner&#34;</span><span class="p">,</span> <span class="s2">&#34;runner_async&#34;</span><span class="p">,</span> <span class="s2">&#34;ssh&#34;</span><span class="p">,</span> <span class="s2">&#34;wheel&#34;</span><span class="p">,</span> <span class="s2">&#34;wheel_async&#34;</span><span class="p">]}</span>
</span></span><span class="line"><span class="cl"><span class="n">RawContent</span>        <span class="err">:</span> <span class="n">HTTP</span><span class="p">/</span><span class="mf">1.1</span> <span class="mf">200</span> <span class="n">OK</span>
</span></span><span class="line"><span class="cl">                    <span class="n">Server</span><span class="err">:</span> <span class="n">CherryPy</span><span class="p">/</span><span class="mf">8.9</span><span class="p">.</span><span class="py">1</span>
</span></span><span class="line"><span class="cl">                    <span class="n">Date</span><span class="err">:</span> <span class="n">Sat</span><span class="p">,</span> <span class="mf">11</span> <span class="n">Jun</span> <span class="mf">2022</span> <span class="mf">20</span><span class="err">:</span><span class="mf">57</span><span class="err">:</span><span class="mf">46</span> <span class="n">GMT</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Access-Control</span><span class="n">-Allow-Origin:</span> <span class="p">*</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Access-Control</span><span class="n">-Expose-Headers:</span> <span class="n">GET</span><span class="p">,</span> <span class="n">POST</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Access-Control</span><span class="n">-Allow-Credentials:</span> <span class="n">true</span>
</span></span><span class="line"><span class="cl">                    <span class="n">Vary</span><span class="err">:</span> <span class="nb">Accept-E</span><span class="err">‚Ä¶</span>
</span></span><span class="line"><span class="cl"><span class="n">Headers</span>           <span class="err">:</span> <span class="p">{[</span><span class="no">Server, System.String[]], [Date, System.String[]</span><span class="p">],</span> <span class="p">[</span><span class="nb">Access-Control</span><span class="n">-Allow-Origin</span><span class="p">,</span> <span class="n">System</span><span class="p">.</span><span class="n">String</span><span class="p">[]],</span> <span class="p">[</span><span class="nb">Access-Control</span><span class="n">-Expose-Headers</span><span class="p">,</span> 
</span></span><span class="line"><span class="cl">                    <span class="n">System</span><span class="p">.</span><span class="n">String</span><span class="p">[]]</span><span class="err">‚Ä¶</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">Images</span>            <span class="err">:</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">InputFields</span>       <span class="err">:</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">Links</span>             <span class="err">:</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl"><span class="n">RawContentLength</span>  <span class="err">:</span> <span class="mf">146</span>
</span></span><span class="line"><span class="cl"><span class="n">RelationLink</span>      <span class="err">:</span> <span class="p">{}</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>
<p>Make sure you see StatusCode: 200</p>
</li>
<li>
<p>Next step is to make sure you get a token:</p>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="c"># --- In my code I show the PassWord. In Production DO NOT DO THIS.</span>
</span></span><span class="line"><span class="cl"><span class="c"># --- There are so many different ways to include encrypted PWs in the code. </span>
</span></span><span class="line"><span class="cl"><span class="c"># --- Use what works best in your environment.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{ &#34;username&#34;: &#34;root&#34;,&#34;password&#34;: &#34;HackMe!&#34;,&#34;eauth&#34;: &#34;pam&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Fetch New Token from salt master</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/login&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="py">token</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">Results</span><span class="err">:</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">return</span>
</span></span><span class="line"><span class="cl"><span class="p">------</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span><span class="vm">@</span><span class="p">{</span><span class="n">token</span><span class="p">=</span><span class="n">6696846c802f78d5326a69b79d36e95015d37f5a</span><span class="p">;</span> <span class="n">expire</span><span class="p">=</span><span class="mf">1655025071.22838</span><span class="p">;</span> <span class="n">start</span><span class="p">=</span><span class="mf">1654981871.22838</span><span class="p">;</span> <span class="n">user</span><span class="p">=</span><span class="n">root</span><span class="p">;</span> <span class="n">eauth</span><span class="p">=</span><span class="n">pam</span><span class="p">;</span> <span class="n">perms</span><span class="p">=</span><span class="n">System</span><span class="p">.</span><span class="n">Object</span><span class="p">[]}}</span>
</span></span><span class="line"><span class="cl"><span class="n">6696846c802f78d5326a69b79d36e95015d37f5a</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>You will see &ldquo;token=&rdquo; in the return data</li>
</ul>
<hr>
<h6 id="powershell-api-code-examples">PowerShell API Code Examples:</h6>
<ul>
<li>Run a test.ping</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;test.ping&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{ &#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Showing different ways to show the return data</span>
</span></span><span class="line"><span class="cl"><span class="c">#$fetch</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Check disk.usage</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;disk.usage&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{ &#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Showing different ways to show the return data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span><span class="p">.</span><span class="s1">&#39;C:\&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span><span class="p">.</span><span class="s1">&#39;C:\&#39;</span><span class="p">.</span><span class="n">capacity</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Check Service Status</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;service.status&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$arg</span>               <span class="p">=</span> <span class="s1">&#39;spooler&#39;</span> <span class="c"># -Service Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{&#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;arg&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$arg</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Service Status | True = Running | False = Stopped</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Stop Service</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;service.stop&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$arg</span>               <span class="p">=</span> <span class="s1">&#39;spooler&#39;</span> <span class="c"># -Service Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{&#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;arg&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$arg</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Service Stopped | True = Stopped | False = Not Stopped</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Disable Service</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- PowerShell Code ---</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minionName</span>        <span class="p">=</span> <span class="s1">&#39;2019DC&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltServerAddress</span> <span class="p">=</span> <span class="s1">&#39;https://192.168.86.110:8000&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span>          <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$password</span>          <span class="p">=</span> <span class="s1">&#39;HackMe!&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fun</span>               <span class="p">=</span> <span class="s1">&#39;service.disable&#39;</span> <span class="c"># -salt function</span>
</span></span><span class="line"><span class="cl"><span class="nv">$arg</span>               <span class="p">=</span> <span class="s1">&#39;spooler&#39;</span> <span class="c"># -Service Name</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span>             <span class="p">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Set the json body</span>
</span></span><span class="line"><span class="cl"><span class="nv">$body</span> <span class="p">=</span> <span class="s1">&#39;{&#34;username&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$userName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;password&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$password</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;eauth&#34;: &#34;pam&#34;,&#34;tgt&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minionName</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;fun&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$fun</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;arg&#34;: &#34;&#39;</span> <span class="p">+</span> <span class="nv">$arg</span> <span class="p">+</span> <span class="s1">&#39;&#34;,&#34;client&#34;: &#34;local&#34;}&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create RESTful API Request</span>
</span></span><span class="line"><span class="cl"><span class="nv">$url</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="nv">$saltServerAddress</span><span class="s2">/run&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">Method</span> <span class="p">=</span> <span class="s2">&#34;Post&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">Uri</span> <span class="p">=</span> <span class="nv">$url</span>
</span></span><span class="line"><span class="cl">    <span class="n">Body</span> <span class="p">=</span> <span class="nv">$Body</span>
</span></span><span class="line"><span class="cl">    <span class="n">ContentType</span> <span class="p">=</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="nv">@Params</span> <span class="n">-SkipCertificateCheck</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Service Disabled | True = Disabled | False = Not Disabled</span>
</span></span><span class="line"><span class="cl"><span class="nv">$fetch</span><span class="p">.</span><span class="k">return</span><span class="p">.</span><span class="nv">$minionName</span></span></span></code></pre></td></tr></table>
</div>
</div>
<ul>
<li>I hope the code was helpful to get started.</li>
</ul>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>OOTB (Out of the Box) a SaltStack Config Server is NOT setup to use CherryPY to use api calls.</li>
<li>Using PowerShell Invoke-RestMethod is a great way to automate SaltStack Config.</li>
<li>The more I use salt with Windows Servers the more I like how it works.  So fast. Many different ways to do automation | configuration Management.</li>
<li>To get the proper args for a salt function I always test from the CLI.</li>
<li><a href="https://docs.saltproject.io/en/latest/ref/netapi/all/salt.netapi.rest_cherrypy.html" target="_blank">SaltStack REST_CHERRYPY Documentation</a></li>
<li><a href="https://docs.saltproject.io/en/latest/topics/eauth/index.html"                       target="_blank">SaltStack EXTERNAL AUTHENTICATION SYSTEM Documentation</a></li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config cheat sheet for a Windows Server Admin</title>
    <link>https://www.vcrocs.info/saltstack-cheatsheet/</link>
    <pubDate>Sun, 06 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-cheatsheet/</guid>
    <description><![CDATA[<p>Salt functions that I find myself using the most.</p>
<hr>
<p>I have been using VMware vRealize SaltStack Config for several months and I thought I would share and create my own cheat sheet to show which functions I use the most as a Windows Server admin and how to format the syntax. I still feel that I barely use all the capabilities that salt has to offer. SaltStack Config is a very Powerful tool to have available for anyone that has a vRealize Suite License. As a Windows Server admin don&rsquo;t be afraid of salt because you feel it was made for Linux admins.  That is NOT the case. I will be managing all Windows Server in my environment with salt.  That includes VMs in vCenter and cloud native Azure VMs.</p>
<p>This cheat sheet will be updated often to show examples as my journey into the salt world continues. Check back often.</p>
<p><a href="https://docs.saltproject.io/en/latest/py-modindex.html" target="_blank" rel="noopener noreffer ">Link to salt module Documentation</a></p>
<hr>
<h6 id="ping---make-sure-server-responds">Ping - Make sure server responds:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> test.ping OR salt <span class="s2">&#34;*&#34;</span> test.ping OR salt <span class="s2">&#34;vC*&#34;</span> test.ping
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    True
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command using --output<span class="o">=</span>json:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> test.ping --output<span class="o">=</span>json
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;vCROCS01&#34;</span>: <span class="nb">true</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="windows-disk-usage">Windows Disk Usage:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> disk.usage
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    ----------
</span></span><span class="line"><span class="cl">    C:<span class="se">\:</span>
</span></span><span class="line"><span class="cl">        ----------
</span></span><span class="line"><span class="cl">        1K-blocks:
</span></span><span class="line"><span class="cl">            67642364.0
</span></span><span class="line"><span class="cl">        available:
</span></span><span class="line"><span class="cl">            15229492.0
</span></span><span class="line"><span class="cl">        capacity:
</span></span><span class="line"><span class="cl">            77%
</span></span><span class="line"><span class="cl">        filesystem:
</span></span><span class="line"><span class="cl">            C:<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        used:
</span></span><span class="line"><span class="cl">            52412872.0
</span></span><span class="line"><span class="cl">    E:<span class="se">\:</span>
</span></span><span class="line"><span class="cl">        ----------
</span></span><span class="line"><span class="cl">        1K-blocks:
</span></span><span class="line"><span class="cl">            41809856.0
</span></span><span class="line"><span class="cl">        available:
</span></span><span class="line"><span class="cl">            38486208.0
</span></span><span class="line"><span class="cl">        capacity:
</span></span><span class="line"><span class="cl">            8%
</span></span><span class="line"><span class="cl">        filesystem:
</span></span><span class="line"><span class="cl">            E:<span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>        used:
</span></span><span class="line"><span class="cl">            3323648.0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> disk.usage --output<span class="o">=</span>json
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl"><span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;vCROCS01&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;C:\\&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;filesystem&#34;</span>: <span class="s2">&#34;C:\\&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;1K-blocks&#34;</span>: 67642364.0,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;used&#34;</span>: 52424392.0,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;available&#34;</span>: 15217972.0,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;capacity&#34;</span>: <span class="s2">&#34;78%&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>,
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;E:\\&#34;</span>: <span class="o">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;filesystem&#34;</span>: <span class="s2">&#34;E:\\&#34;</span>,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;1K-blocks&#34;</span>: 41809856.0,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;used&#34;</span>: 3323648.0,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;available&#34;</span>: 38486208.0,
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;capacity&#34;</span>: <span class="s2">&#34;8%&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="o">}</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span>
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="windows-services">Windows Services:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command stop a Windows Service:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> service.stop <span class="s2">&#34;spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    True
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command disable a Windows Service:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> service.disable <span class="s2">&#34;spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    True
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command get status of a Windows Service:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> service.status <span class="s2">&#34;spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    False
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command see <span class="k">if</span> a Windows Service is enabled:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> service.enabled <span class="s2">&#34;spooler&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    False
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="copy-files-to--delete-files-from--windows-server">Copy files to | Delete files from | Windows Server:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command Copy a file to a Windows Service - Source File <span class="p">|</span> Destination File:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> cp.get_file <span class="s2">&#34;salt://installer_file.msi&#34;</span> <span class="s2">&#34;C:\install_files\installer_file.msi&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    C:<span class="se">\i</span>nstall_files<span class="se">\i</span>nstaller_file.msi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command Delete a file from a Windows Service:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> file.remove <span class="s1">&#39;C:\install_files\installer_file.msi&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    True
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="minion-grain-data">minion grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command add grain data to a minion:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> grains.append azure_vm <span class="s2">&#34;True&#34;</span>
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    ----------
</span></span><span class="line"><span class="cl">    azure_vm:
</span></span><span class="line"><span class="cl">        - True
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command get grain custom data from a minion:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> grains.get azure_vm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    - True
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command get grain os data from a minion:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> grains.get os
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    Windows
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command get grain os data from a minion:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> grains.get osfullname
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    Microsoft Windows Server <span class="m">2016</span> Datacenter
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command get grain domain data from a minion:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> grains.get domain
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    vcrocs.info
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command get grain IP data from a minion:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> grains.get fqdn_ip4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    - 192.168.99.99
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command sync minion grain data with salt master:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> saltutil.sync_grains
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="powershell">PowerShell:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command run powershell command:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> cmd.run <span class="s1">&#39;Get-Service | Where-Object {$_.Status -eq &#34;Running&#34;}&#39;</span> <span class="nv">shell</span><span class="o">=</span>PowerShell
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    Status   Name               DisplayName
</span></span><span class="line"><span class="cl">    ------   ----               -----------
</span></span><span class="line"><span class="cl">    Running  AppHostSvc         Application Host Helper Service
</span></span><span class="line"><span class="cl">    Running  BFE                Base Filtering Engine
</span></span><span class="line"><span class="cl">    Running  BrokerInfrastru... Background Tasks Infrastructure Ser...
</span></span><span class="line"><span class="cl">    Running  CbDefense          CB Defense
</span></span><span class="line"><span class="cl">    Running  CDPSvc             Connected Devices Platform Service
</span></span><span class="line"><span class="cl">    Running  CertPropSvc        Certificate Propagation
</span></span><span class="line"><span class="cl">    Running  COMSysApp          COM+ System Application
</span></span><span class="line"><span class="cl">    Running  CoreMessagingRe... CoreMessaging
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Command run powershell script with script saved on salt master File Server: 
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> cmd.script <span class="nv">source</span><span class="o">=</span><span class="s2">&#34;salt://dev/qualys_install_azure.ps1&#34;</span> <span class="nv">shell</span><span class="o">=</span>powershell
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">Runs all line of code in script the same as <span class="k">if</span> script was saved <span class="nb">local</span> on minion.
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="minion-reboot">Minion Reboot:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command minion reboot:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> system.reboot <span class="m">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    True
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="join-domain">Join Domain:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command join minion to a Windows Domain. You can also specify OU that computer object will be located:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> system.join_domain <span class="nv">domain</span><span class="o">=</span><span class="s1">&#39;vcrocs.info&#39;</span> <span class="nv">username</span><span class="o">=</span><span class="s1">&#39;vcrocs\administrator&#39;</span> <span class="nv">password</span><span class="o">=</span><span class="s1">&#39;VMware1!&#39;</span> <span class="nv">account_ou</span><span class="o">=</span><span class="s1">&#39;OU=Dev,OU=Servers,DC=vcrocs,DC=info&#39;</span> <span class="nv">account_exists</span><span class="o">=</span>False <span class="nv">restart</span><span class="o">=</span>True
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><h6 id="windows-registry">Windows Registry:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Bash" data-lang="Bash"><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl">&gt; Command add a registry key to minion or change value of an existing registry key:
</span></span><span class="line"><span class="cl">salt <span class="s2">&#34;vCROCS01&#34;</span> reg.set_value HKEY_LOCAL_MACHINE <span class="s1">&#39;SYSTEM\vCROCS&#39;</span> <span class="s1">&#39;Created_by_User&#39;</span> <span class="s1">&#39;dhassinger&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">&gt; Results:
</span></span><span class="line"><span class="cl">vCROCS01:
</span></span><span class="line"><span class="cl">    True
</span></span><span class="line"><span class="cl"> 
</span></span></code></pre></td></tr></table>
</div>
</div><figure><a class="lightgallery" href="/saltstack-cheatsheet/registry01.png" title="/saltstack-cheatsheet/registry01.png" data-thumbnail="/saltstack-cheatsheet/registry01.png" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<div><br></div>
<div style="background-color:#fff5e6; Padding:20px; color: black;" >
    <b>Salt Links I found to be very helpful:</b>
        <ul>
          <li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
          <li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
          <li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
          <li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
          <li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
          <li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
        </ul>
</div>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task. <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>vExpert 2022 | vExpert Cloud Management</title>
    <link>https://www.vcrocs.info/vexpert-2022/</link>
    <pubDate>Tue, 22 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/vexpert-2022/</guid>
    <description><![CDATA[<p>VMware vExpert 2020 - 2022 | VMware vExpert Cloud Management 2021 - 2022</p>
<hr>
<h5 id="vmware-vexpert-2020---2022--vmware-vexpert-cloud-management-2021---2022">VMware vExpert 2020 - 2022 | VMware vExpert Cloud Management 2021 - 2022</h5>
<p><a class="lightgallery" href="/vexpert-2022/vexpert-2022-01.png" title="/vexpert-2022/vexpert-2022-01.png" data-thumbnail="/vexpert-2022/vexpert-2022-01.png">
        
    </a><br>
<a class="lightgallery" href="/vexpert-2022/vexpert-2022-3-stars.png" title="/vexpert-2022/vexpert-2022-3-stars.png" data-thumbnail="/vexpert-2022/vexpert-2022-3-stars.png">
        
    </a><br>
<a class="lightgallery" href="/vexpert-2022/vexpert-cloud-management.png" title="/vexpert-2022/vexpert-cloud-management.png" data-thumbnail="/vexpert-2022/vexpert-cloud-management.png">
        
    </a></p>
<hr>
<p>I am very proud to be part of the VMware vExpert program.  This is the third year that I was accepted into the program. One part of the vExpert program that I think is great is that the program recognizes people for sharing their knowledge and &ldquo;Giving Back&rdquo;. A person selected into the vExpert programs is someone that likes to share, wants to make themselves and everyone around them smarter.</p>
<p>2022 is also the 2nd year that I was accepted into the VMware vExpert Cloud Management subprogram.</p>
<p>I think that 2021 was one of my most productive years and one that I advanced my own personal knowledge the most.</p>
<h6 id="highlights-of-2021-to-get-accepted-into-the-vexpert-program">Highlights of 2021 to get accepted into the vExpert Program:</h6>
<ul>
<li>VMworld 2021 session (Presentation): Manage Windows Workloads Through vRealize Automation SaltStack Config [MCL1895]</li>
<li>SaltConf21 session (Presentation): Managing Windows with SaltStack Config</li>
<li>(6) of my personal Blogs were shared by the VMware ‚ÄúvExpert Cloud Management Community‚Äù on the Vmware Blog Web Site.</li>
<li>I did several vRealize Automation Presentations at VMware HVC (Healthcare Virtualization Community) Events.</li>
<li>PowerBlock Customer Showcase - VM ‚ÄúRight Sizing‚Äù</li>
<li>I did a IDC interview for VMware on Automation that will be released in 2022.</li>
<li>I did a VMware Customer Reference Interview that will be released in 2022. <a href="https://blogs.vmware.com/management/2022/03/vra-optimize-healthcare-outcomes.html" target="_blank">Link to Customer Reference</a></li>
<li>I shared a vRealize Operations ‚ÄúRight Sizing‚Äù Dashboard on the code.vmware.com web site.</li>
</ul>
<hr>
<h6 id="what-is-the-vmware-vexpert-program">What is the VMware vExpert Program?</h6>
<h6 id="program-overview">Program Overview</h6>
<p>The VMware vExpert program is VMware&rsquo;s global evangelism and advocacy program. The program is designed to put VMware&rsquo;s marketing resources towards your advocacy efforts. Promotion of your articles, exposure at our global events, co-op advertising, traffic analysis, and early access to beta programs and VMware&rsquo;s roadmap. The awards are for individuals, not companies, and last for one year. Employees of both customers and partners can receive the awards. In the application, we consider various community activities from the previous year as well as the current year&rsquo;s (only for 2nd half applications) activities in determining who gets awards. We look to see that not only were you active but are still active in the path you chose to apply for.</p>
<h6 id="criteria">Criteria</h6>
<p>If you are interested in becoming a vExpert the criteria is simple. We are looking for IT Professionals who are sharing their VMware knowledge and contributing that back to the community. The term &ldquo;giving back&rdquo; is defined as going above and beyond your day job. There are several ways to share your knowledge and engage with the community. Some of those activities are blogging, book authoring, magazine articles, CloudCred task writing, active in Facebook groups, forum (VMTN as well as other non VMware) platforms, public speaking, VMUG leadership, videos and so on.</p>
<hr>
<h6 id="thanks">Thanks:</h6>
<p>I have worked with a great group of people at VMware, past and present. I would like to thank the following people for all their support in no particular order: Steve Leiberson, Karl Hauck, Cosmin Trif, Brock Peterson, Kevin Holland, Daniel Thomas, Marcus Roberts, Paul Schlosser.</p>
<p>Special Thanks to David Kruse for getting me started with vRA.</p>
<p>Special Thanks to some past co-workers, SEs, TAMs, HVC Members that I learned a lot from: Kirk Shaffer, Robert Mitchell, Dan Grove, Steve Holmes, Steve Pittenger, Anton Wesztergom (Opened my eyes to vRA Day 2).</p>
<p>List of Bloggers that I follow and have learned a lot by them &ldquo;Giving Back&rdquo;: Cody De Arkland, Luc Dekens, Kyle Ruddy, William Lam, Nathen Bennett, Vince Wood, Alan Renouf.</p>
<p>Special Thanks to the person that gave me my first Job in IT: David Cornelius</p>
<p>and anyone else that helped me in my journey called my career&hellip;</p>
<hr>
<p>I have learned a lot from the vCommunity. I want to use this blog as a way for me to &ldquo;give back&rdquo;. If one person finds anything I post helpful I will consider my efforts successful. I am always open to talking to any person, group or organization about what I do with VMware products.  Please reach out to me if you ever want to have a discussion.</p>
<p>Email: <a href="mailto:Dale.Hassinger@vCrocs.info" rel="">Dale.Hassinger@vCrocs.info</a><br>
Location: Dillsburg, PA</p>
<div style="background-color:#ffcc80; Padding:20px; font-size:18px;" >
  <b>"9 - 5 pays the bills, 5 - 10 advances your career"</b>
</div>
<div><br></div>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 8</title>
    <link>https://www.vcrocs.info/saltstack-config-part-08/</link>
    <pubDate>Sat, 12 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-08/</guid>
    <description><![CDATA[<p>Part 8: Pouring the salt grains</p>
<hr>
<p>My previous posts about grain data were to show how to add minion grain data during the creation of a new server with vRA using PowerShell. This post I want to show how I&rsquo;m going to maintain the grain data that is not default out of the box grain data.</p>
<hr>
<p>Windows Server grain data not available out of the of box that I want to add to every minion AND make sure the grain data stays up to date:</p>
<ul>
<li>Windows Server Features | Roles</li>
<li>Windows Server Installed Software</li>
<li>Windows Server Running Services</li>
</ul>
<hr>
<p>These are the steps that I use to maintain custom grain data with a Windows Server:</p>
<ul>
<li>Create a PowerShell Script that can run locally on a minion. Add the script to the SaltStack Config File Manager. Use salt-call to run salt.functions locally on a minion. See screen shot and my code examples below.</li>
<li>Create a SaltStack Config Job to execute the PowerShell Script remotely on the minion. See Screen Shot.</li>
<li>Create a SaltStack Config Schedule to run the job that you create. The job can run every day, once a week, every 4 hours. Whatever makes sense for your use case. See Screen Shot.</li>
</ul>
<hr>
<p>If you want to run a script locally on a minion and use salt functions that is where you use the salt-call command. After you learn the salt-functions and are logged into a Windows Server locally, you can still use salt commands by using salt-call.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># --- example code</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="p">-</span><span class="n">-version</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">test</span><span class="p">.</span><span class="py">ping</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Show Disk Usage</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">disk</span><span class="p">.</span><span class="py">usage</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Show Installed Features|Roles</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">win_servermanager</span><span class="p">.</span><span class="py">list_installed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Show Installed Sofwtare</span>
</span></span><span class="line"><span class="cl"><span class="nb">salt-call</span> <span class="n">pkg</span><span class="p">.</span><span class="n">list_pkgs</span></span></span></code></pre></td></tr></table>
</div>
</div>
<p><a href="https://docs.saltproject.io/en/latest/ref/cli/salt-call.html" target="_blank" rel="noopener noreffer ">Link to salt-call Documentation</a></p>
<hr>
<h6 id="step-1---add-script-to-saltstack-config-file-manager">Step 1 - Add script to SaltStack Config File Manager:</h6>
<p>See code examples below to add Windows Server Features|Roles, Installed Software, and Runnings Services as grain data.</p>
<p><figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-49.PNG" title="/saltstack-config-part-08/Salt-49.PNG" data-thumbnail="/saltstack-config-part-08/Salt-49.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure><br>
<figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-50.PNG" title="/saltstack-config-part-08/Salt-50.PNG" data-thumbnail="/saltstack-config-part-08/Salt-50.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure></p>
<h6 id="step-3---create-saltstack-config-schedule">Step 3 - Create SaltStack Config Schedule:</h6>
<figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-51.PNG" title="/saltstack-config-part-08/Salt-51.PNG" data-thumbnail="/saltstack-config-part-08/Salt-51.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<h6 id="code-examples">Code Examples:</h6>
<h6 id="--add-windows-features--roles-as-grain-data">- Add Windows Features | Roles as grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  This Script is used to Get Windows Servers Features and add as Grain Data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Windows Servers Features
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">PARAMETER</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No Parameters
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">INPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No inputs
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">OUTPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  salt grain data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.00
</span></span></span><span class="line"><span class="cl"><span class="cm">  Author:         Dale Hassinger
</span></span></span><span class="line"><span class="cl"><span class="cm">  Creation Date:  04/20/2022
</span></span></span><span class="line"><span class="cl"><span class="cm">  Purpose/Change: Initial script development
</span></span></span><span class="line"><span class="cl"><span class="cm">  Revisions:
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    N/A
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start of Code ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Minion Get Windows Server Features Installed</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains features data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_Windows_Feature force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call win_servermanager.list_installed --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl"><span class="c">#$results</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$results</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="c">#$features</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="c">#$features</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;@{&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;}&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span><span class="p">.</span><span class="py">trim</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;=&#34;</span><span class="p">,</span><span class="s2">&#34; | &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl"><span class="c">#$features</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$feature</span> <span class="k">in</span> <span class="nv">$features</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_Windows_Feature &#34;&#39;</span> <span class="p">+</span> <span class="nv">$feature</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains last update data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_last_grains_update force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add a Date that grains last updated</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy | hh:mm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$grainsupdateDate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_last_grains_update &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsupdateDate</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Sync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="--add-windows-server-installed-packagessoftware-as-grain-data">- Add Windows Server Installed Packages|Software as grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  This Script is used to Get Windows Installed Packages and add as Grain Data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Windows Servers Installed Packages
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">PARAMETER</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No Parameters
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">INPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No inputs
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">OUTPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  salt grain data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.00
</span></span></span><span class="line"><span class="cl"><span class="cm">  Author:         Dale Hassinger
</span></span></span><span class="line"><span class="cl"><span class="cm">  Creation Date:  04/20/2022
</span></span></span><span class="line"><span class="cl"><span class="cm">  Purpose/Change: Initial script development
</span></span></span><span class="line"><span class="cl"><span class="cm">  Revisions:
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    N/A
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start of Code ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Minion Get Windows Server Installed Packages|Software</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains features data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_Windows_Installed_Software force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call pkg.list_pkgs --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl"><span class="c">#$results</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$results</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">local</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="n">-split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;@{&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;}&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">trim</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="o">-replace</span><span class="p">(</span><span class="s2">&#34;=&#34;</span><span class="p">,</span><span class="s2">&#34; | &#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="p">|</span> <span class="nb">Sort-Object</span>
</span></span><span class="line"><span class="cl"><span class="c">#$installedPackages</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$installedPackage</span> <span class="k">in</span> <span class="nv">$installedPackages</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_Windows_Installed_Software &#34;&#39;</span> <span class="p">+</span> <span class="nv">$installedPackage</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains last update data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_last_grains_update force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add a Date that grains last updated</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy | hh:mm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$grainsupdateDate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_last_grains_update &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsupdateDate</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Sync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="--add-windows-running-services-as-grain-data">- Add Windows Running Services as grain data:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  This Script is used to Get Windows Servers Running Services and add as Grain Data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Windows Servers Running Services
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">PARAMETER</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No Parameters
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">INPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  No inputs
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">OUTPUTS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  salt grain data
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">  Version:        1.00
</span></span></span><span class="line"><span class="cl"><span class="cm">  Author:         Dale Hassinger
</span></span></span><span class="line"><span class="cl"><span class="cm">  Creation Date:  04/20/2022
</span></span></span><span class="line"><span class="cl"><span class="cm">  Purpose/Change: Initial script development
</span></span></span><span class="line"><span class="cl"><span class="cm">  Revisions:
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">.</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    N/A
</span></span></span><span class="line"><span class="cl"><span class="cm">#&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start of Code ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Minion Get Windows Server Running Services</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains running services data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_Windows_Services_Running force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Get all Running Services</span>
</span></span><span class="line"><span class="cl"><span class="nv">$serviceNames</span> <span class="p">=</span> <span class="nb">Get-Service</span> <span class="p">|</span> <span class="nb">Where-Object</span> <span class="p">{</span><span class="nv">$_</span><span class="p">.</span><span class="py">Status</span> <span class="o">-eq</span> <span class="s1">&#39;Running&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Create Array</span>
</span></span><span class="line"><span class="cl"><span class="nv">$servicesGrains</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add Service data to the array</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$serviceName</span> <span class="k">in</span> <span class="nv">$serviceNames</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$grainString</span> <span class="p">=</span> <span class="nv">$serviceName</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39; | &#39;</span> <span class="p">+</span> <span class="nv">$serviceName</span><span class="p">.</span><span class="py">DisplayName</span>
</span></span><span class="line"><span class="cl">  <span class="nv">$servicesGrains</span> <span class="p">=</span> <span class="nv">$servicesGrains</span> <span class="p">+</span> <span class="nv">$grainString</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl"><span class="c">#$servicesGrains</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add Windows Running Services as Grain Data</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$servicesGrain</span> <span class="k">in</span> <span class="nv">$servicesGrains</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_Windows_Services_Running &#34;&#39;</span> <span class="p">+</span> <span class="nv">$servicesGrain</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Delete existing grains last update data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.delkey sem_last_grains_update force=True&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Add a Date that grains last updated</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy | hh:mm&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c">#$grainsupdateDate</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call grains.append sem_last_grains_update &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsupdateDate</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Grains Sync</span>
</span></span><span class="line"><span class="cl"><span class="nv">$saltCommand</span> <span class="p">=</span> <span class="s1">&#39;salt-call saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># --- Run Salt Command</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-Expression</span> <span class="n">-Command</span> <span class="nv">$saltCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="saltstack-config-target-using-windows-server-running-service-sql-server">SaltStack Config Target using Windows Server Running Service (SQL Server):</h6>
<figure><a class="lightgallery" href="/saltstack-config-part-08/Salt-52.PNG" title="/saltstack-config-part-08/Salt-52.PNG" data-thumbnail="/saltstack-config-part-08/Salt-52.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Windows Server Features|Roles make a great way to target minions.</li>
<li>Windows Server installed software also makes a great way to target minions.</li>
<li>Windows Server Running Services is a good way to target minions.</li>
<li>If you add custom grain data when the server is created you also need a way to maintain the grain data so it stays up to date and is current.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>VMware vRealize SaltStack Config as a Windows Server Admin - Part 7</title>
    <link>https://www.vcrocs.info/saltstack-config-part-07/</link>
    <pubDate>Fri, 14 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/saltstack-config-part-07/</guid>
    <description><![CDATA[<p>VMware vRealize SaltStack Config as a Windows Server Admin - Part 7</p>
<hr>
<div>
The more I use <b>VMware vRealize SaltStack Config</b> as a <b>Windows Server Admin</b> the more I see the importance of having grain information added to the minion to be able to target servers many different ways. During a recent discussion it was suggested to have the ability to target Windows Server minions by the Windows server Features|Roles that were installed on the server and by which software was installed on a server.  There are built-in salt functions to get Features|Roles and installed software.  Here is the code I used to get the information and add to the minion grain file using PowerShell.  
</div>
<p>This will allow you to create targets to:</p>
<ul>
<li>minions with specific VMware Tools Versions</li>
<li>minion with Web Server Feature|Role enabled</li>
<li>etc&hellip;</li>
</ul>
<hr>
<h6 id="salt-functions">Salt Functions:</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># The POSH-SSH PowerShell module MUST be installed to use this code.</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Name of Minion that you want to add grain data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$minion</span> <span class="p">=</span> <span class="s1">&#39;DBH-210&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ SSH Connection to SalStack Config Server ] ------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Making SSH Connection to SaltStack Config Server...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Server</span>   <span class="p">=</span> <span class="s1">&#39;ssc.vCROCS.local&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$userName</span> <span class="p">=</span> <span class="s1">&#39;root&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$Password</span> <span class="p">=</span> <span class="s1">&#39;VMware#1&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># The next line is how to create the encrypted password</span>
</span></span><span class="line"><span class="cl"><span class="nv">$psPassword</span> <span class="p">=</span> <span class="nb">ConvertTo-SecureString</span> <span class="n">-String</span> <span class="nv">$Password</span> <span class="n">-AsPlainText</span> <span class="n">-Force</span>
</span></span><span class="line"><span class="cl"><span class="nv">$creds</span> <span class="p">=</span> <span class="nb">new-object</span> <span class="n">-typename</span> <span class="n">System</span><span class="p">.</span><span class="py">Management</span><span class="p">.</span><span class="py">Automation</span><span class="p">.</span><span class="py">PSCredential</span> <span class="n">-argumentlist</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$psPassword</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;ComputerName&#34;</span> <span class="p">=</span> <span class="nv">$Server</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Credential&#34;</span>   <span class="p">=</span> <span class="nv">$creds</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># SSH Connection to SaltStack Server</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshSession</span> <span class="p">=</span> <span class="nb">Get-SSHSession</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span><span class="p">(</span><span class="nv">$sshSession</span><span class="p">.</span><span class="py">SessionId</span> <span class="o">-eq</span> <span class="mf">0</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s1">&#39;SSH Connection to SSC Server already completed&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End If</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Write-Host</span> <span class="s1">&#39;Creating new SSH Connection to SSC Server&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="nb">New-SSHSession</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Else</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start Adding Grain Data ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion Get Windows Server Features|Roles Installed ] ------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Getting Windows Server Features|Roles Installed...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; win_servermanager.list_installed --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span><span class="p">.</span><span class="py">PsObject</span><span class="p">.</span><span class="py">Properties</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl"><span class="nv">$features</span> <span class="p">=</span> <span class="nv">$features</span> <span class="p">|</span> <span class="nb">ConvertTo-Xml</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Append Each Feature|Role information to grains</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Appending Windows Server Features|Roles Installed to grains...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$grainsKey</span> <span class="p">=</span> <span class="s1">&#39;vCROCS_Windows_Feature&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$feature</span> <span class="k">in</span> <span class="nv">$features</span><span class="p">.</span><span class="py">Objects</span><span class="p">.</span><span class="py">Object</span><span class="p">.</span><span class="n">Property</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$grainsValue</span> <span class="p">=</span> <span class="nv">$feature</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39; | &#39;</span> <span class="p">+</span> <span class="nv">$feature</span><span class="p">.</span><span class="s1">&#39;#text&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#39;</span> <span class="p">+</span> <span class="nv">$grainsKey</span> <span class="p">+</span> <span class="s1">&#39; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsValue</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Minion Get Windows Server Installed Software ] ------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Getting Windows Server Installed Software...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Get Installed Software</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; pkg.list_pkgs --output=json&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$results</span> <span class="p">=</span> <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$results</span><span class="p">.</span><span class="py">Output</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="p">|</span> <span class="nb">ConvertFrom-Json</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">PsObject</span><span class="p">.</span><span class="py">Properties</span><span class="p">.</span><span class="py">Value</span>
</span></span><span class="line"><span class="cl"><span class="nv">$installedPackages</span> <span class="p">=</span> <span class="nv">$installedPackages</span> <span class="p">|</span> <span class="nb">ConvertTo-Xml</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$grainsKey</span> <span class="p">=</span> <span class="s1">&#39;vCROCS_Windows_Installed_Software&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Append Windows Server Installed Software to grains</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Appending Windows Server Installed Software to grains...&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="nv">$installedPackage</span> <span class="k">in</span> <span class="nv">$installedPackages</span><span class="p">.</span><span class="py">Objects</span><span class="p">.</span><span class="py">Object</span><span class="p">.</span><span class="n">Property</span><span class="p">){</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$grainsValue</span> <span class="p">=</span> <span class="nv">$installedPackage</span><span class="p">.</span><span class="py">Name</span> <span class="p">+</span> <span class="s1">&#39; | &#39;</span> <span class="p">+</span> <span class="nv">$installedPackage</span><span class="p">.</span><span class="s1">&#39;#text&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl">    <span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#39;</span> <span class="p">+</span> <span class="nv">$grainsKey</span> <span class="p">+</span> <span class="s1">&#39; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsValue</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">    <span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Foreach</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Add a Date that grains last updated ] ----------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsupdateDate</span> <span class="p">=</span> <span class="nb">Get-Date</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsValue</span> <span class="p">=</span> <span class="nv">$grainsupdateDate</span><span class="p">.</span><span class="py">ToString</span><span class="p">(</span><span class="s2">&#34;MM/dd/yyyy&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">$grainsKey</span> <span class="p">=</span> <span class="s1">&#39;vCROCS_last_grains_update&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Grains Append</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; grains.append &#39;</span> <span class="p">+</span> <span class="nv">$grainsKey</span> <span class="p">+</span> <span class="s1">&#39; &#34;&#39;</span> <span class="p">+</span> <span class="nv">$grainsValue</span> <span class="p">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Adding Grain Data ] ---------------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Sync minion Grain Data ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Syncing Minion Grain Data...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c"># Sync Grains Data</span>
</span></span><span class="line"><span class="cl"><span class="nv">$sshCommand</span> <span class="p">=</span> <span class="s1">&#39;salt &#34;&#39;</span> <span class="p">+</span> <span class="nv">$minion</span> <span class="p">+</span> <span class="s1">&#39;&#34; saltutil.sync_grains&#39;</span>
</span></span><span class="line"><span class="cl"><span class="c">#$sshCommand</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$Params</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;SessionId&#34;</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Command&#34;</span>   <span class="p">=</span> <span class="nv">$sshCommand</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span> <span class="c"># End Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-SSHCommand</span> <span class="nv">@Params</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Disconnect from SaltStack Config Server ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="s1">&#39;Disconnecting from SaltStack Config Server...&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Remove-SSHSession</span> <span class="n">-SessionId</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End of Code ] ---------------------------------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="example-grains-file-after-running-script">Example grains file after running script</h6>
<p>The default location of the grains file is in directory ‚ÄúC:\salt\conf&quot;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="n">vCROCS_Windows_Feature</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">FileAndStorage-Services</span> <span class="p">|</span> <span class="n">File</span> <span class="n">and</span> <span class="n">Storage</span> <span class="n">Services</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="p">-</span><span class="mf">45</span><span class="n">-Core</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">4.7</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="p">-</span><span class="mf">45</span><span class="n">-Features</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">4.7</span> <span class="n">Features</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="n">-Core</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">3.5</span> <span class="p">(</span><span class="n">includes</span> <span class="p">.</span><span class="py">NET</span> <span class="mf">2.0</span> <span class="n">and</span> <span class="mf">3.0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-Framework</span><span class="n">-Features</span> <span class="p">|</span> <span class="p">.</span><span class="py">NET</span> <span class="n">Framework</span> <span class="mf">3.5</span> <span class="n">Features</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-WCF</span><span class="n">-Services45</span> <span class="p">|</span> <span class="n">WCF</span> <span class="n">Services</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">NET-WCF</span><span class="n">-TCP-PortSharing45</span> <span class="p">|</span> <span class="n">TCP</span> <span class="n">Port</span> <span class="n">Sharing</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">PowerShell</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span> <span class="mf">5.1</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">PowerShell-ISE</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span> <span class="nb">ISE
</span></span></span><span class="line"><span class="cl"><span class="nb"></span><span class="p">-</span> <span class="n">PowerShellRoot</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">PowerShell-V2</span> <span class="p">|</span> <span class="n">Windows</span> <span class="n">PowerShell</span> <span class="mf">2.0</span> <span class="n">Engine</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">RSAT</span> <span class="p">|</span> <span class="n">Remote</span> <span class="n">Server</span> <span class="n">Administration</span> <span class="n">Tools</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">RSAT-Feature</span><span class="n">-Tools</span> <span class="p">|</span> <span class="n">Feature</span> <span class="n">Administration</span> <span class="n">Tools</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">RSAT-SNMP</span> <span class="p">|</span> <span class="n">SNMP</span> <span class="n">Tools</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">SNMP-Service</span> <span class="p">|</span> <span class="n">SNMP</span> <span class="n">Service</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">SNMP-WMI</span><span class="n">-Provider</span> <span class="p">|</span> <span class="n">SNMP</span> <span class="n">WMI</span> <span class="n">Provider</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">Storage-Services</span> <span class="p">|</span> <span class="n">Storage</span> <span class="n">Services</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">System-DataArchiver</span> <span class="p">|</span> <span class="n">System</span> <span class="n">Data</span> <span class="n">Archiver</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">Telnet-Client</span> <span class="p">|</span> <span class="n">Telnet</span> <span class="n">Client</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">WoW64-Support</span> <span class="p">|</span> <span class="n">WoW64</span> <span class="n">Support</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="nb">XPS-Viewer</span> <span class="p">|</span> <span class="n">XPS</span> <span class="n">Viewer</span>
</span></span><span class="line"><span class="cl"><span class="n">vCROCS_Windows_Installed_Software</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Silverlight</span> <span class="p">|</span> <span class="mf">5.1</span><span class="p">.</span><span class="py">50918</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2013</span> <span class="n">Redistributable</span> <span class="p">(</span><span class="n">x64</span><span class="p">)</span> <span class="p">-</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span> <span class="p">|</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2013</span> <span class="n">x64</span> <span class="n">Additional</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span> <span class="p">|</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2013</span> <span class="n">x64</span> <span class="n">Minimum</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span> <span class="p">|</span> <span class="mf">12.0</span><span class="p">.</span><span class="py">40664</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2015</span><span class="p">-</span><span class="mf">2022</span> <span class="n">Redistributable</span> <span class="p">(</span><span class="n">x64</span><span class="p">)</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2015</span><span class="p">-</span><span class="mf">2022</span> <span class="n">Redistributable</span> <span class="p">(</span><span class="n">x86</span><span class="p">)</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X64</span> <span class="n">Additional</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X64</span> <span class="n">Minimum</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X86</span> <span class="n">Additional</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Microsoft</span> <span class="n">Visual</span> <span class="n">C</span><span class="p">++</span> <span class="mf">2022</span> <span class="n">X86</span> <span class="n">Minimum</span> <span class="n">Runtime</span> <span class="p">-</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span> <span class="p">|</span> <span class="mf">14.30</span><span class="p">.</span><span class="py">30704</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">Salt</span> <span class="n">Minion</span> <span class="mf">3003.1</span> <span class="p">(</span><span class="n">Python</span> <span class="mf">3</span><span class="p">)</span> <span class="p">|</span> <span class="mf">3003.1</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">UniversalForwarder</span> <span class="p">|</span> <span class="mf">8.2</span><span class="p">.</span><span class="py">4</span><span class="p">.</span><span class="py">0</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="n">VMware</span> <span class="n">Tools</span> <span class="p">|</span> <span class="mf">11.3</span><span class="p">.</span><span class="py">5</span><span class="p">.</span><span class="py">18557794</span>
</span></span><span class="line"><span class="cl"><span class="n">vCROCS_last_grains_update</span><span class="err">:</span>
</span></span><span class="line"><span class="cl"><span class="p">-</span> <span class="mf">01</span><span class="p">/</span><span class="mf">14</span><span class="p">/</span><span class="mf">2022</span></span></span></code></pre></td></tr></table>
</div>
</div>
<hr>
<h6 id="saltstack-target-using-windows-server-software-installed">SaltStack Target using Windows Server Software Installed:</h6>
<p>Show all minions that have VMware Tools | 11.3.5.18557794 installed</p>
<figure><a class="lightgallery" href="/saltstack-config-part-07/Salt-48.PNG" title="/saltstack-config-part-07/Salt-48.PNG" data-thumbnail="/saltstack-config-part-07/Salt-48.PNG" data-sub-html="<h2>Click to see Larger Image</h2>">
        
    </a><figcaption class="image-caption">Click to see Larger Image</figcaption>
    </figure>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Windows Server Features|Roles make a great way to target minions.</li>
<li>Windows Server installed software also makes a great way to target minions.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/"                            target="_blank">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html"                   target="_blank">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com"                                  target="_blank">SaltStack Community Slack Channel</a></li>
<li><a href="https://learnvrealizeautomation.github.io"                             target="_blank">Learn vRealize Automation</a></li>
<li><a href="https://learnsaltstackconfig.github.io/"                               target="_blank">Learn SaltStack Config</a></li>
</ul>
<div style="background-color:#ccffcc; Padding:20px;" >
When I write about <b>vRealize Automation</b> ("vRA") I always say there are many ways to accomplish the same task.  <b>SaltStack Config</b> is the same way.  I am showing what I felt was important to see but every organization/environment will be different. There is no right or wrong way to use Salt. This is a <b>GREAT Tool</b> that is included with your vRealize Suite Advanced/Enterprise license. If you own the vRealize Suite, you own SaltStack Config.
</div>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>Year in Review - 2021 | 2022 Goals</title>
    <link>https://www.vcrocs.info/look-back-2021/</link>
    <pubDate>Sat, 01 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/look-back-2021/</guid>
    <description><![CDATA[<p><strong>Get-Review 2021</strong></p>
<hr>
<p>2021 was a good year for me with my career. I spent the entire year working from home and I find myself to be more productive when WFH. My wife and I moved into a different home and I now have a dedicated office area on the 2nd floor away from everyone. I still share my office with Belle (Rescue Dog adopted in 2020 before covid) everyday and she loves the fenced in back yard that she can run around in without a leash.</p>
<p>In 2021, I started living the &ldquo;Salt Life&rdquo;. In July, I installed SaltStack Config for the first time and started taking a serious look at Salt. I went from zero to doing a presentation about SaltStack at VMworld 2021 in October and another presentation at SaltConf21 in November. Having a session selected for VMworld 2021 was a career &ldquo;Bucket List&rdquo; for me.</p>
<p>After creating a vRealize Operations Dashboard on &ldquo;Right Sizing&rdquo; that I use in production, my vRealize Account Executive setup a meeting for me to meet Iwan &rsquo;e1&rsquo; Rahabok, who is the co-creator of the book &ldquo;Operationalize Your World&rdquo;. Iwan liked the Dashboard I created and included some details about the Dashboard in his book &ldquo;Operationalize Your World&rdquo;.</p>
<p>I always say if one person finds anything I post helpful, I will consider my efforts successful. In 2021, between the presentations and blogs posts, I feel I have given back and helped some people. I shared the knowledge.  2021 was a successful year for me.</p>
<hr>
<h6 id="highlights-of-2021">Highlights of 2021</h6>
<ul>
<li>VMworld 2021 session (Presentation): Manage Windows Workloads Through vRealize Automation SaltStack Config [MCL1895]</li>
<li>SaltConf21 session (Presentation): Managing Windows with SaltStack Config</li>
<li>(6) of my personal Blogs were shared by the VMware &ldquo;vExpert Cloud Management Community&rdquo; on the Vmware Blog Web Site.</li>
<li>I did several vRealize Automation Presentations at VMware HVC (Healthcare Virtualization Community) Events.</li>
<li>PowerBlock Customer Showcase - VM &ldquo;Right Sizing&rdquo;</li>
<li>I did a IDC interview for VMware on Automation that will be released in 2022.</li>
<li>I did a VMware Customer Reference Interview that will be released in 2022. <a href="https://blogs.vmware.com/management/2022/03/vra-optimize-healthcare-outcomes.html" target="_blank">Link to Customer Reference</a></li>
<li>I shared a vRealize Operations &ldquo;Right Sizing&rdquo; Dashboard on the code.vmware.com web site.</li>
</ul>
<hr>
<h6 id="my-top-10-blog-posts-of-2021">My Top 10 Blog Posts of 2021</h6>
<ol>
<li>How to use PowerShell modules with vRA 8.2 | 978</li>
<li>How vRealize Operations can help with &ldquo;Right sizing&rdquo; VMs | 799</li>
<li>vRA 8.1 ABX PS | 508</li>
<li>Automating Automation | 415</li>
<li>VMware vRealize SaltStack Config as a Windows Server Admin  part 1 | 333</li>
<li>VMware vRealize SaltStack Config as a Windows Server Admin  part 2 | 280</li>
<li>vRealize automation 8.1 PowerShell abx | 216</li>
<li>VMware vRealize SaltStack Config as a Windows Server Admin  part 4 | 195</li>
<li>VMware vRealize SaltStack Config as a Windows Server Admin  part 6 | 164</li>
<li>VMworld 2021 SaltStack Config session | 147</li>
</ol>
<p>What the top 10 list shows me is there is a lot of interest to use PowerShell with the vRealize Products, VMware admins are interested in Right Sizing and since VMware Purchased SaltStack people what to get started with the product.</p>
<p>*Stats from Google Analytics.</p>
<hr>
<h6 id="set-goals-2022">Set-Goals 2022</h6>
<ul>
<li>I do a lot of posts on PowerShell and I use it everyday. I want to take some time in 2022 and learn Python. I have done a little bit of Python but not enough to call myself a Python Programmer. I think there are some use cases with vRealize Automation and SaltStack Config that knowing Python may help.</li>
<li>I want to spend more time with Salt. Salt is a powerful tool and I want to expand my knowledge with Salt.</li>
<li>Get a session approved for VMworld 2022 and SaltConf22.</li>
<li>Do more VMware PowerBlock Presentations.</li>
<li>Create more Blog Posts.</li>
<li>Never Stop Learning&hellip;</li>
</ul>
<hr>
<h6 id="thanks-for-visiting-in-2021">Thanks for visiting in 2021!</h6>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
<item>
    <title>NSX-T security Tags and PowerShell</title>
    <link>https://www.vcrocs.info/powershell-nsx-t/</link>
    <pubDate>Fri, 31 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>Dale Hassinger</author>
    <guid>https://www.vcrocs.info/powershell-nsx-t/</guid>
    <description><![CDATA[<p><strong>How to work with NSX-T security Tags using PowerShell</strong></p>
<hr>
<h6 id="powershell-code-to-work-with-nsx-t-apis">PowerShell Code to work with NSX-T APIs</h6>
<p>Included some examples of code to Automate adding/removing NSX-T Security Tags from VMs. Also some code to show which VMs are assigned to a Security TAG or which TAGs are assigned to a VM.</p>
<p>Code Samples:</p>
<ul>
<li>Add NSX-T Security TAG to a VM.</li>
<li>Remove NSX-T Security TAG from a VM.</li>
<li>Show All VMs assigned to a NSX-T Security TAG</li>
<li>Show All Security TAGs assigned to a VM</li>
</ul>
<p>Hope you find these snippets of code useful.</p>
<hr>
<p>Click to expand code:
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="c"># Connect to vCenter</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vCenterName</span> <span class="p">=</span> <span class="s1">&#39;vCenter.vCrocs.info&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="nv">$vCenterName</span> <span class="n">-Credential</span> <span class="nv">$cred</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Disconnect-VIServer</span> <span class="p">*</span> <span class="n">-Force</span> <span class="n">-Confirm:</span><span class="vm">$false</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Start NSX-T</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start Add a Single NSX-T TAG to VM ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Add code to allow untrusted SSL certs</span>
</span></span><span class="line"><span class="cl"><span class="c"># Use when connecting to NSX-T Server and running from a Windows Computer</span>
</span></span><span class="line"><span class="cl"><span class="nb">Add-Type</span> <span class="p">@</span><span class="s2">&#34; 
</span></span></span><span class="line"><span class="cl"><span class="s2">    using System; 
</span></span></span><span class="line"><span class="cl"><span class="s2">    using System.Net; 
</span></span></span><span class="line"><span class="cl"><span class="s2">    using System.Net.Security; 
</span></span></span><span class="line"><span class="cl"><span class="s2">    using System.Security.Cryptography.X509Certificates; 
</span></span></span><span class="line"><span class="cl"><span class="s2">    public class ServerCertificateValidationCallback 
</span></span></span><span class="line"><span class="cl"><span class="s2">    { 
</span></span></span><span class="line"><span class="cl"><span class="s2">        public static void Ignore() 
</span></span></span><span class="line"><span class="cl"><span class="s2">        { 
</span></span></span><span class="line"><span class="cl"><span class="s2">            ServicePointManager.ServerCertificateValidationCallback +=  
</span></span></span><span class="line"><span class="cl"><span class="s2">                delegate 
</span></span></span><span class="line"><span class="cl"><span class="s2">                ( 
</span></span></span><span class="line"><span class="cl"><span class="s2">                    Object obj,  
</span></span></span><span class="line"><span class="cl"><span class="s2">                    X509Certificate certificate,  
</span></span></span><span class="line"><span class="cl"><span class="s2">                    X509Chain chain,  
</span></span></span><span class="line"><span class="cl"><span class="s2">                    SslPolicyErrors errors 
</span></span></span><span class="line"><span class="cl"><span class="s2">                ) 
</span></span></span><span class="line"><span class="cl"><span class="s2">                { 
</span></span></span><span class="line"><span class="cl"><span class="s2">                    return true; 
</span></span></span><span class="line"><span class="cl"><span class="s2">                }; 
</span></span></span><span class="line"><span class="cl"><span class="s2">        } 
</span></span></span><span class="line"><span class="cl"><span class="s2">    } 
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;</span><span class="p">@</span>  
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="no">ServerCertificateValidationCallback</span><span class="p">]::</span><span class="n">Ignore</span><span class="p">();</span> 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ This section connects you to vCenter ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vCenterName</span> <span class="p">=</span> <span class="s1">&#39;vCenter.vCROCS.info&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Connect-VIServer</span> <span class="nv">$vCenterName</span> <span class="n">-Credential</span> <span class="nv">$cred</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># Connect to vCenter and fetch virtual machine info.</span>
</span></span><span class="line"><span class="cl"><span class="nv">$vmInfo</span> <span class="p">=</span> <span class="nb">Get-VM</span> <span class="n">-Name</span> <span class="n">DBH</span><span class="p">-</span><span class="mf">213</span> <span class="p">|</span> <span class="nb">Get-View</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ This section defines the API header ] ------------------------------------------------------------------</span>
</span></span><span class="line"><span class="cl"><span class="c"># Set Username/Password info for API</span>
</span></span><span class="line"><span class="cl"><span class="nv">$user</span> <span class="p">=</span> <span class="s1">&#39;srv_vRA_NSXT@vCROCS.info&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$nsxpassword</span> <span class="p">=</span> <span class="s1">&#39;VMware!1&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$pair</span> <span class="p">=</span> <span class="s2">&#34;</span><span class="p">$(</span><span class="nv">$user</span><span class="p">)</span><span class="s2">:</span><span class="p">$(</span><span class="nv">$nsxpassword</span><span class="p">)</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$encodedCredentials</span> <span class="p">=</span> <span class="p">[</span><span class="no">System.Convert</span><span class="p">]::</span><span class="n">ToBase64String</span><span class="p">([</span><span class="no">System.Text.Encoding</span><span class="p">]::</span><span class="n">ASCII</span><span class="p">.</span><span class="py">GetBytes</span><span class="p">(</span><span class="nv">$Pair</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nv">$headers</span> <span class="p">=</span> <span class="vm">@</span><span class="p">{</span> <span class="n">Authorization</span> <span class="p">=</span> <span class="s2">&#34;Basic </span><span class="nv">$encodedCredentials</span><span class="s2">&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$vmid</span> <span class="p">=</span> <span class="nv">$vm</span><span class="p">.</span><span class="py">Config</span><span class="p">.</span><span class="py">InstanceUuid</span>
</span></span><span class="line"><span class="cl"><span class="nv">$newtag</span> <span class="p">=</span> <span class="s1">&#39;UST.SM.UBUNTU_SERVER&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$JSON</span> <span class="p">=</span> <span class="sh">@&#34;
</span></span></span><span class="line"><span class="cl"><span class="sh">{
</span></span></span><span class="line"><span class="cl"><span class="sh">    &#34;external_id&#34;: &#34;</span><span class="nv">$vmid</span><span class="sh">&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sh">    &#34;tags&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sh">        {&#34;scope&#34;: &#34;&#34;, &#34;tag&#34;: &#34;</span><span class="nv">$newtag</span><span class="sh">&#34;}
</span></span></span><span class="line"><span class="cl"><span class="sh">    ]
</span></span></span><span class="line"><span class="cl"><span class="sh">}
</span></span></span><span class="line"><span class="cl"><span class="sh">&#34;@</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$posturl</span> <span class="p">=</span> <span class="s2">&#34;https://</span><span class="nv">$nsxmanager</span><span class="s2">/api/v1/fabric/virtual-machines?action=add_tags&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$posturl</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Body</span> <span class="nv">$JSON</span> <span class="n">-ContentType</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Add a Single TAG ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start Get NSX-T TAGs assigned to VM ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$vmid</span> <span class="p">=</span> <span class="nv">$vm</span><span class="p">.</span><span class="py">Config</span><span class="p">.</span><span class="py">InstanceUuid</span>
</span></span><span class="line"><span class="cl"><span class="nv">$geturl</span> <span class="p">=</span> <span class="s2">&#34;https://</span><span class="nv">$nsxmanager</span><span class="s2">/api/v1/fabric/virtual-machines?external_id=</span><span class="nv">$vmid</span><span class="s2">&amp;included_fields=tags&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$getrequest</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$geturl</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-ContentType</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$currenttags</span> <span class="p">=</span> <span class="nv">$getrequest</span><span class="p">.</span><span class="py">results</span><span class="p">.</span><span class="py">tags</span><span class="p">.</span><span class="py">Tag</span>
</span></span><span class="line"><span class="cl"><span class="nv">$currenttags</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Get NSX-T TAGs assigned to VM ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start remove NSX-T TAG from VM ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$vmid</span> <span class="p">=</span> <span class="nv">$vm</span><span class="p">.</span><span class="py">Config</span><span class="p">.</span><span class="py">InstanceUuid</span>
</span></span><span class="line"><span class="cl"><span class="nv">$newtag</span> <span class="p">=</span> <span class="s1">&#39;UST.SM.UBUNTU_SERVER&#39;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$JSON</span> <span class="p">=</span> <span class="sh">@&#34;
</span></span></span><span class="line"><span class="cl"><span class="sh">{
</span></span></span><span class="line"><span class="cl"><span class="sh">    &#34;external_id&#34;: &#34;</span><span class="nv">$vmid</span><span class="sh">&#34;,
</span></span></span><span class="line"><span class="cl"><span class="sh">    &#34;tags&#34;: [
</span></span></span><span class="line"><span class="cl"><span class="sh">        {&#34;scope&#34;: &#34;&#34;, &#34;tag&#34;: &#34;</span><span class="nv">$newtag</span><span class="sh">&#34;}
</span></span></span><span class="line"><span class="cl"><span class="sh">    ]
</span></span></span><span class="line"><span class="cl"><span class="sh">}
</span></span></span><span class="line"><span class="cl"><span class="sh">&#34;@</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$posturl</span> <span class="p">=</span> <span class="s2">&#34;https://</span><span class="nv">$nsxmanager</span><span class="s2">/api/v1/fabric/virtual-machines?action=remove_tags&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$posturl</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Method</span> <span class="n">Post</span> <span class="n">-Body</span> <span class="nv">$JSON</span> <span class="n">-ContentType</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End remove NSX-T TAG from VM ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ Start Get VMs assigned to a TAG NSX-T ] --------------------------------------------------</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$geturl</span> <span class="p">=</span> <span class="s2">&#34;https://</span><span class="nv">$nsxmanager</span><span class="s2">/policy/api/v1/infra/tags/effective-resources?scope=&amp;tag=UST.SM.UBUNTU_SERVER&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nv">$result</span> <span class="p">=</span> <span class="nb">Invoke-RestMethod</span> <span class="n">-Uri</span> <span class="nv">$geturl</span> <span class="n">-Headers</span> <span class="nv">$headers</span> <span class="n">-Method</span> <span class="n">Get</span> <span class="n">-Body</span> <span class="nv">$JSON</span> <span class="n">-ContentType</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">Write-Host</span> <span class="nv">$result</span><span class="p">.</span><span class="py">results</span><span class="p">.</span><span class="py">target_display_name</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># ----- [ End Get VMs assigned to a TAG NSX-T ] --------------------------------------------------</span></span></span></code></pre></td></tr></table>
</div>
</div></p>
<hr>
<h6 id="lessons-learned">Lessons Learned:</h6>
<ul>
<li>Very easy to automate NSX-T Security TAG processes after you learn the urls.</li>
<li>NSX-T API documentation is easily accessed and well documented.</li>
</ul>
<hr>
<h6 id="salt-links-i-found-to-be-very-helpful">Salt Links I found to be very helpful:</h6>
<ul>
<li><a href="https://sites.google.com/site/mrxpalmeiras/saltstack/salt-cheat-sheet" target="_blank" rel="noopener noreffer ">SaltStack Cheat Sheet</a></li>
<li><a href="https://docs.saltproject.io/en/getstarted/" target="_blank" rel="noopener noreffer ">SaltStack Tutorials</a></li>
<li><a href="https://docs.saltproject.io/en/latest/contents.html" target="_blank" rel="noopener noreffer ">SaltStack Documentation</a></li>
<li><a href="https://saltstackcommunity.slack.com" target="_blank" rel="noopener noreffer ">SaltStack Community Slack Channel</a></li>
</ul>
<hr>
<ul>
<li>If you like wearing Crocs and want to get a pair like I wear, follow this link to Amazon:
<a target="_blank" href="https://www.amazon.com/dp/B001V7Z27W?psc=1&amp;ref=ppx_yo2ov_dt_b_product_details&_encoding=UTF8&tag=vcrocs-20&linkCode=ur2&linkId=fa4c787c9ab59a9b8a54b48c402b8517&camp=1789&creative=9325">My Favorite Crocs</a></li>
<li>If you found this Blog article useful and it helped you, Buy me a coffee to start my day.</li>
</ul>
<center>
<script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="dalehassinger" data-color="#FFDD00" data-emoji=""  data-font="Cookie" data-text="Buy me a coffee" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
</center>]]></description>
</item>
</channel>
</rss>

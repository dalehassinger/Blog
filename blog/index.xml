<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on www.vCrocs.info</title>
    <link>https://www.vcrocs.info/blog/</link>
    <description>Recent content in Blog on www.vCrocs.info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.vcrocs.info/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vRealize Operations - Dashboards</title>
      <link>https://www.vcrocs.info/blog/text-display-widget/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/text-display-widget/</guid>
      <description>I was recently reviewing some sample custom vRealize Operations Dashboards and I seen where some of the Dashboards had custom text and images. I reviewed how they included the text and images and in some of the sample Dashboards they used the “Text Display” Widget and used a url for the content. They would display images saved on a web server. I thought this was interesting and started reviewing what else could be displayed by using a url with the &amp;ldquo;Text Display&amp;rdquo; Widget.</description>
    </item>
    
    <item>
      <title>Smart Desk and Homelab.</title>
      <link>https://www.vcrocs.info/blog/standup-desk/</link>
      <pubDate>Sat, 11 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/standup-desk/</guid>
      <description>Smart Desk: Like most people that work in the Technology Field I have been &amp;ldquo;WFH&amp;rdquo; (Working From Home) since the beginning of March. I already had a dedicated office area but it wasn’t setup for full time employment. I always liked a L-Shaped desk and I had this layout by pushing to straight desks together. Worked OK but could use improvement.
So I started looking at new desks. I had two requirements, L-Shaped and I also wanted my next desk to be a standup Desk.</description>
    </item>
    
    <item>
      <title>Infoblox 1.1 plugin for vRA 8.1</title>
      <link>https://www.vcrocs.info/blog/infoblox-01/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/infoblox-01/</guid>
      <description>I recently setup the Infoblox 1.1 plugin for vRA 8.1 and ran into an interesting challenge that I thought I would share. The setup of the plugin is straight forward; follow the documentation and you’ll likely be set. However, if you use custom DNS views in Infoblox (internal, external, etc.) then some additional configuration is required that’s not easily identified. Out of the box, the Infoblox IPAM integration comes with only a few default properties.</description>
    </item>
    
    <item>
      <title>What is vRealize Automation - Episode 21</title>
      <link>https://www.vcrocs.info/blog/it-reality/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/it-reality/</guid>
      <description>I have been listening to Podcasts for many years. Everyday while driving to and from work I would listen to a Podcast. Anytime I traveled to a conference I would download hours worth of Podcasts to listen to while flying. Most of the Podcasts I listen to are Technology related. Here are some of my favorites:
 IT Reality Virtual Speaking Podcast Develop Great Managers vBrown Bag Automators Mac Power Users Twit Network of Podcasts  I have had an interest to be a guest on a Podcast for several years.</description>
    </item>
    
    <item>
      <title>vRealize Automation 8.1 - PowerShell ABX</title>
      <link>https://www.vcrocs.info/blog/vra81-abx-ps/</link>
      <pubDate>Sun, 17 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/vra81-abx-ps/</guid>
      <description>I wanted to review VMware vRA (vRealize Automation) 8.x as a Microsoft Windows Server Admin. Most of the reviews you see are creating Linux VMs and customizing the OS using tools for Linux. I am going to create Windows Server VMs and customize the OS using a new feature added to vRA 8.1, Action Based Extensibility (ABX) with PowerShell. No vRO (Orchestrator) Workflows will be used. This is completely different compared to how I create Windows Servers with vRA 7.</description>
    </item>
    
    <item>
      <title>Coffee Talk Tip of the week - 05/15/2020</title>
      <link>https://www.vcrocs.info/blog/coffee-talk-05-15-2020/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/coffee-talk-05-15-2020/</guid>
      <description>If you have vRealize Log Insight installed in your environment you need to setup at least one alert that works awesome. When an ESXi Host has an PSOD event, it is difficult in vCenter to see all the HA events of all the VMs that restarted. The events are on the hosts were the VM restarted not the host that had the PSOD. If you have a cluster with a lot of hosts it can take some time to find all the events.</description>
    </item>
    
    <item>
      <title>Coffee Talk Tip of the week - 05/08/2020</title>
      <link>https://www.vcrocs.info/blog/coffee-talk-05-08-2020/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/coffee-talk-05-08-2020/</guid>
      <description>If you need to set the ESXi Host Advanced System Setting Syslog.global.logHost on every ESXI Host in your environment here is some sample PowerCLI code to set the values. Connect to all your vCenters. Get all your hosts. Set the value and then it will reload the syslog service.
The second PowerCLI code example is to get the ESXi Host Advanced System Setting Syslog.global.logHost value on every ESXI Host in your environment.</description>
    </item>
    
    <item>
      <title>Coffee Talk Tip of the week - 05/01/2020</title>
      <link>https://www.vcrocs.info/blog/coffee-talk-05-01-2020/</link>
      <pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/coffee-talk-05-01-2020/</guid>
      <description>When working in a Zero Trust Environment and programs are not working the way they should it is nice to have some Tools available to do troubleshooting. When new applications are installed and not working you can be asking yourself is it my issue with the application or is the firewall blocking ports. I recently had a support call with VMware and they showed me two commands that work awesome to test to see if ports are open to a destination IP on a specific port.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://www.vcrocs.info/blog/hugo/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/hugo/</guid>
      <description>I have reviewed and tried a lot of different ways to create a personal Blog so that I can share Code, Knowledge, Pictures and do Reviews. After spending some time with Hugo it has become the framework that I have liked the most. The Theme &amp;ldquo;Hugo Future Imperfect&amp;rdquo; is also the Hugo Theme that I have liked the most.

Some of the ways I have reviewed creating a Blog require a monthly fee to host the web site for you.</description>
    </item>
    
    <item>
      <title>Add disk</title>
      <link>https://www.vcrocs.info/blog/add-drives/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/add-drives/</guid>
      <description>PowerShell Code Powershell code to add disk to a Remote Windows Server VMware VM
 #The Following code shows how to add a New Drive, bring drive online, initialize and format: #Connect to vCenter Connect-VIServer vcsa.domain.org #Add new drive to VM New-HardDisk -VM $VMNAME -CapacityGB $DISKSIZEGB -StorageFormat Thin -Controller ‘SCSI Controller 1’ #Make disk online invoke-command -computername $VMNAME -scriptblock {Set-Disk 2 -isOffline $false} #Initialize disk invoke-command -computername $VMNAME -scriptblock {Initialize-Disk 2 -PartitionStyle GPT} #Create Partition invoke-command -computername $VMNAME -scriptblock {New-Partition -DiskNumber 2 -UseMaximumSize -DriveLetter E} #Format drive invoke-command -computername $VMNAME -scriptblock {Format-Volume -DriveLetter E -FileSystem NTFS -NewFileSystemLabel ‘Data’ -AllocationUnitSize 16384 -Confirm:$false} #------------------------------------------------------------------------- #The Following Code will show disk “Allocation Unit Size” on a remote Windows Server: $C = Invoke-Command -ComputerName $VMname {Get-WmiObject -Class Win32_Volume -Filter “DriveLetter = ‘C:&#39;” | Select-Object BLOCKSIZE} $C_AllocationUnitSize = ($C.</description>
    </item>
    
    <item>
      <title>Add Registry Values</title>
      <link>https://www.vcrocs.info/blog/add-registry-vales/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/add-registry-vales/</guid>
      <description>PowerShell Code Add Registry Values to Windows Server
 #vCrocs Registry Changes invoke-command -computername $FQDNVMname -ScriptBlock {new-Item HKLM:\SOFTWARE\vCrocs -f } invoke-command -computername $FQDNVMname -ScriptBlock {param ($SG) Set-ItemProperty hklm:\software\vCrocs -Name SupportGroup -Value &amp;quot;$SG&amp;quot; -Force} -ArgumentList $SG invoke-command -computername $FQDNVMname -ScriptBlock {param ($APP) Set-ItemProperty hklm:\software\vCrocs -Name Application -Value &amp;quot;$APP&amp;quot; -Force} -ArgumentList $APP invoke-command -computername $FQDNVMname -ScriptBlock {param ($LOC) Set-ItemProperty hklm:\software\vCrocs -Name Location -Value &amp;quot;$LOC&amp;quot; -Force} -ArgumentList $LOC invoke-command -computername $FQDNVMname -ScriptBlock {param ($SL) Set-ItemProperty hklm:\software\vCrocs -Name ServiceLevel -Value &amp;quot;$SL&amp;quot; -Force} -ArgumentList $SL </description>
    </item>
    
    <item>
      <title>Automated Clay Thrower</title>
      <link>https://www.vcrocs.info/blog/clay-thrower/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/clay-thrower/</guid>
      <description>Raspberry PI Powered Clay Thrower Link to my Raspberry PI powered Clay Thrower. The first project I ever did with a PI. My first project using Python and PHP.
  </description>
    </item>
    
    <item>
      <title>Automation with Zero Trust</title>
      <link>https://www.vcrocs.info/blog/automation-zero-trust/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/automation-zero-trust/</guid>
      <description>PowerShell Code There are two PowerCLI commands that have become my best friends in a Zero Trust Environment.
 Invoke-VMScript - Use to run scripts on VMs. Copy-VMGuestFile - Use to copy files to/from VMs.  In this example you can use Invoke-VMScript to run commands on a VM to install Trend Deep Security. All commands run with VM in a zero trust state.
 $VMName = &#39;VM Name&#39; #Copy file to the VM $PSText = &#39;wget https://server01.</description>
    </item>
    
    <item>
      <title>NSX PowerCLI Basics</title>
      <link>https://www.vcrocs.info/blog/powercli-nsx/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/powercli-nsx/</guid>
      <description>NSX PowerCLI Code Some basic PowerCLI commands with NSX
Included some examples of code to Automate adding/removing NSX Security Tags from VMs. Show Security TAGs. Shows Secuirty TAGs assigned to a sepcific VM. Hope you find these snippets of code useful.
 # Need to install PowerShell Module PowerNSX # Connect to vCenter $vCenterName = &#39;vCenter.vCrocs.info&#39; Connect-VIServer $vCenterName -Credential $cred # Connect to NSX Server Connect-NsxServer -vCenterServer &#39;vCenter.vCrocs.info&#39; -Credential $cred # Show all Secuirty Tags Get-NsxSecurityTag | Select-Object Name | Sort-Object Name # Info about one specific Secuirty TAG Get-NsxSecurityTag -Name NSX.</description>
    </item>
    
    <item>
      <title>Open Ports</title>
      <link>https://www.vcrocs.info/blog/check-ports/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/check-ports/</guid>
      <description>PowerShell Code Use PowerShell to see if ports are open to a remote server.
 $PortNumber = &#39;443&#39; $Destination = &#39;Server.vCrocs.info&#39; $socket = New-Object Net.Sockets.TcpClient $socket.Connect($Destination,$PortNumber) if($socket.Connected){ $PortOpened = &#39;Port: &#39; + $PortNumber + &#39; to &#39; + $Destination +&#39; is Open! :)&#39; $socket.Close() }else{ $PortOpened = &#39;Port: &#39; + $PortNumber + &#39; to &#39; + $Destination +&#39; IS NOT Open! :(&#39; } Write-Host $PortOpened Living in a zero trust environment can be challenging.</description>
    </item>
    
    <item>
      <title>PowerCLI Basics</title>
      <link>https://www.vcrocs.info/blog/powercli-getting-started/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/powercli-getting-started/</guid>
      <description>PowerCLI Code Some basic PowerCLI commands
 #Here are some basic commands that you can keep adding additional code #and get more precise on what you want to see. #Connect to a vCenter Connect-VIServer vcsa.domain.org #Disconnect from vCenter and not be prompted Disconnect-VIServer vcsa.domain.org -confirm:$false #Get VM Listing #Shows all VMs Get-VM #Shows all VMs sorted by Name Get-VM | Sort-Object Name #Shows all VMs sorted by Name that are Powered On Get-VM | Where-Object {$_.</description>
    </item>
    
    <item>
      <title>PowerShell Log Files</title>
      <link>https://www.vcrocs.info/blog/log-files/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/log-files/</guid>
      <description>PowerShell Code I use this code to create a log file during a VM build using vRealize Automation
Here&amp;rsquo;s an example:
 $VMname = &#39;ServerName&#39; #The next line defines where to save the log file $LOGFILENAME = &amp;quot;C:\vRA-Install-Logs\vRA-Install-Log-&amp;quot; + $VMname + &amp;quot;.log&amp;quot; #Check to see if file already exists. If it does delete it. if (Test-Path $LOGFILENAME) { Remove-Item -Path $LOGFILENAME } #Creates the Log File New-Item $LOGFILENAME -ItemType File #Update Log File.</description>
    </item>
    
    <item>
      <title>Randon Password</title>
      <link>https://www.vcrocs.info/blog/random-password/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/random-password/</guid>
      <description>PowerShell Code I use this code to generate a random password during the automation process of creating a new Server VM. I then add the password to Password Manager with Powershell.
 #Generate Random text to use for Password $SQLPassword =@( [char[]](65..91 | Get-Random -Count 5) [char[]](97..123 | Get-Random -Count 5) &#39;!&#39;,&#39;#&#39;,&#39;(&#39;,&#39;)&#39; | Get-Random -Count 2 0..9 | Get-Random -Count 4 ) | Sort-Object {Get-Random} $Password = $SQLPassword -join &#39;&#39; </description>
    </item>
    
    <item>
      <title>Schedule RVTools</title>
      <link>https://www.vcrocs.info/blog/schedule-rvtools/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.vcrocs.info/blog/schedule-rvtools/</guid>
      <description>PowerShell Code I like to create a Scheduled Task in vRealize Orchestrator to create RVtools files everyday. Here is a sample script that could be used. The script is also on a 7 day rotation of files and automaticaly deletes old files.
 Start-Process -FilePath &amp;quot;C:\Program Files (x86)\Robware\RVTools\RVtools.exe&amp;quot; -ArgumentList &#39;-s vCenter01.vCrocs.info -u administrator@vsphere.local -p &amp;quot;Enter RVTools encrypted Password between the double quotes&amp;quot; -c Exportall2xls -d &amp;quot;G:\RVTools\vCenter01&amp;quot;&#39; -Wait Start-Process -FilePath &amp;quot;C:\Program Files (x86)\Robware\RVTools\RVtools.</description>
    </item>
    
  </channel>
</rss>